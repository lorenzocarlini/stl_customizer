{"mappings":"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AAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAAE,MAAM;KAAC;IAC5B;QAAC,KAAK,EAAE,MAAM;QAAE,GAAG,EAA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UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,SAAS;IACpB,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-472aeb20575e9d60.js","src/text2svg.js","node_modules/text-to-svg/index.js","node_modules/text-to-svg/build/src/index.js","node_modules/opentype.js/src/opentype.js","node_modules/string.prototype.codepointat/codepointat.js","node_modules/tiny-inflate/index.js","node_modules/opentype.js/src/font.js","node_modules/opentype.js/src/path.js","node_modules/opentype.js/src/bbox.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/opentype.js/src/tables/sfnt.js","node_modules/opentype.js/src/check.js","node_modules/opentype.js/src/table.js","node_modules/opentype.js/src/types.js","node_modules/opentype.js/src/tables/cmap.js","node_modules/opentype.js/src/parse.js","node_modules/opentype.js/src/tables/cff.js","node_modules/opentype.js/src/encoding.js","node_modules/opentype.js/src/glyphset.js","node_modules/opentype.js/src/glyph.js","node_modules/opentype.js/src/draw.js","node_modules/opentype.js/src/tables/head.js","node_modules/opentype.js/src/tables/hhea.js","node_modules/opentype.js/src/tables/hmtx.js","node_modules/opentype.js/src/tables/ltag.js","node_modules/opentype.js/src/tables/maxp.js","node_modules/opentype.js/src/tables/name.js","node_modules/opentype.js/src/tables/os2.js","node_modules/opentype.js/src/tables/post.js","node_modules/opentype.js/src/tables/gsub.js","node_modules/opentype.js/src/tables/meta.js","node_modules/opentype.js/src/position.js","node_modules/opentype.js/src/layout.js","node_modules/opentype.js/src/substitution.js","node_modules/opentype.js/src/util.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/opentype.js/src/hintingtt.js","node_modules/opentype.js/src/tables/glyf.js","node_modules/opentype.js/src/bidi.js","node_modules/opentype.js/src/tokenizer.js","node_modules/opentype.js/src/features/arab/contextCheck/arabicWord.js","node_modules/opentype.js/src/char.js","node_modules/opentype.js/src/features/arab/contextCheck/arabicSentence.js","node_modules/opentype.js/src/features/arab/arabicPresentationForms.js","node_modules/opentype.js/src/features/arab/arabicRequiredLigatures.js","node_modules/opentype.js/src/features/featureQuery.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/opentype.js/src/tables/fvar.js","node_modules/opentype.js/src/tables/gpos.js","node_modules/opentype.js/src/tables/kern.js","node_modules/opentype.js/src/tables/loca.js","node_modules/path-browserify/index.js","node_modules/process/browser.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"34749c0ed0510310\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else if ('reload' in location) {\n        location.reload();\n      } else {\n        // Web extension context\n        var ext = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n        if (ext && ext.runtime && ext.runtime.reload) {\n          ext.runtime.reload();\n        }\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import * as fs from 'fs';\nconst TextToSVG = require('text-to-svg');\nconst textToSVG = TextToSVG.loadSync();\n \nconst attributes = {fill: 'red', stroke: 'black'};\nconst options = {x: 0, y: 0, fontSize: 72, anchor: 'top', attributes: attributes};\n \nconst svg = textToSVG.getSVG('hello', options);\ndocument.getElementById(\"svg_1\").href = svg;\n \nconsole.log(svg);","/**\n * Copyright (c) 2016 Hideki Shiro\n */\n\nmodule.exports = require('./build/src/index.js');\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar opentype = _interopRequireWildcard(require(\"opentype.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DEFAULT_FONT = require('path').join(__dirname, '../fonts/ipag.ttf'); // Private method\n\n\nfunction parseAnchorOption(anchor) {\n  var horizontal = anchor.match(/left|center|right/gi) || [];\n  horizontal = horizontal.length === 0 ? 'left' : horizontal[0];\n  var vertical = anchor.match(/baseline|top|bottom|middle/gi) || [];\n  vertical = vertical.length === 0 ? 'baseline' : vertical[0];\n  return {\n    horizontal: horizontal,\n    vertical: vertical\n  };\n}\n\nvar TextToSVG =\n/*#__PURE__*/\nfunction () {\n  function TextToSVG(font) {\n    _classCallCheck(this, TextToSVG);\n\n    this.font = font;\n  }\n\n  _createClass(TextToSVG, [{\n    key: \"getWidth\",\n    value: function getWidth(text, options) {\n      var fontSize = options.fontSize || 72;\n      var kerning = 'kerning' in options ? options.kerning : true;\n      var fontScale = 1 / this.font.unitsPerEm * fontSize;\n      var width = 0;\n      var glyphs = this.font.stringToGlyphs(text);\n\n      for (var i = 0; i < glyphs.length; i++) {\n        var glyph = glyphs[i];\n\n        if (glyph.advanceWidth) {\n          width += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n          var kerningValue = this.font.getKerningValue(glyph, glyphs[i + 1]);\n          width += kerningValue * fontScale;\n        }\n\n        if (options.letterSpacing) {\n          width += options.letterSpacing * fontSize;\n        } else if (options.tracking) {\n          width += options.tracking / 1000 * fontSize;\n        }\n      }\n\n      return width;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(fontSize) {\n      var fontScale = 1 / this.font.unitsPerEm * fontSize;\n      return (this.font.ascender - this.font.descender) * fontScale;\n    }\n  }, {\n    key: \"getMetrics\",\n    value: function getMetrics(text) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var fontSize = options.fontSize || 72;\n      var anchor = parseAnchorOption(options.anchor || '');\n      var width = this.getWidth(text, options);\n      var height = this.getHeight(fontSize);\n      var fontScale = 1 / this.font.unitsPerEm * fontSize;\n      var ascender = this.font.ascender * fontScale;\n      var descender = this.font.descender * fontScale;\n      var x = options.x || 0;\n\n      switch (anchor.horizontal) {\n        case 'left':\n          x -= 0;\n          break;\n\n        case 'center':\n          x -= width / 2;\n          break;\n\n        case 'right':\n          x -= width;\n          break;\n\n        default:\n          throw new Error(\"Unknown anchor option: \".concat(anchor.horizontal));\n      }\n\n      var y = options.y || 0;\n\n      switch (anchor.vertical) {\n        case 'baseline':\n          y -= ascender;\n          break;\n\n        case 'top':\n          y -= 0;\n          break;\n\n        case 'middle':\n          y -= height / 2;\n          break;\n\n        case 'bottom':\n          y -= height;\n          break;\n\n        default:\n          throw new Error(\"Unknown anchor option: \".concat(anchor.vertical));\n      }\n\n      var baseline = y + ascender;\n      return {\n        x: x,\n        y: y,\n        baseline: baseline,\n        width: width,\n        height: height,\n        ascender: ascender,\n        descender: descender\n      };\n    }\n  }, {\n    key: \"getD\",\n    value: function getD(text) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var fontSize = options.fontSize || 72;\n      var kerning = 'kerning' in options ? options.kerning : true;\n      var letterSpacing = 'letterSpacing' in options ? options.letterSpacing : false;\n      var tracking = 'tracking' in options ? options.tracking : false;\n      var metrics = this.getMetrics(text, options);\n      var path = this.font.getPath(text, metrics.x, metrics.baseline, fontSize, {\n        kerning: kerning,\n        letterSpacing: letterSpacing,\n        tracking: tracking\n      });\n      return path.toPathData();\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath(text) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var attributes = Object.keys(options.attributes || {}).map(function (key) {\n        return \"\".concat(key, \"=\\\"\").concat(options.attributes[key], \"\\\"\");\n      }).join(' ');\n      var d = this.getD(text, options);\n\n      if (attributes) {\n        return \"<path \".concat(attributes, \" d=\\\"\").concat(d, \"\\\"/>\");\n      }\n\n      return \"<path d=\\\"\".concat(d, \"\\\"/>\");\n    }\n  }, {\n    key: \"getSVG\",\n    value: function getSVG(text) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var metrics = this.getMetrics(text, options);\n      var svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"\".concat(metrics.width, \"\\\" height=\\\"\").concat(metrics.height, \"\\\">\");\n      svg += this.getPath(text, options);\n      svg += '</svg>';\n      return svg;\n    }\n  }, {\n    key: \"getDebugSVG\",\n    value: function getDebugSVG(text) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options = JSON.parse(JSON.stringify(options));\n      options.x = options.x || 0;\n      options.y = options.y || 0;\n      var metrics = this.getMetrics(text, options);\n      var box = {\n        width: Math.max(metrics.x + metrics.width, 0) - Math.min(metrics.x, 0),\n        height: Math.max(metrics.y + metrics.height, 0) - Math.min(metrics.y, 0)\n      };\n      var origin = {\n        x: box.width - Math.max(metrics.x + metrics.width, 0),\n        y: box.height - Math.max(metrics.y + metrics.height, 0)\n      }; // Shift text based on origin\n\n      options.x += origin.x;\n      options.y += origin.y;\n      var svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"\".concat(box.width, \"\\\" height=\\\"\").concat(box.height, \"\\\">\");\n      svg += \"<path fill=\\\"none\\\" stroke=\\\"red\\\" stroke-width=\\\"1\\\" d=\\\"M0,\".concat(origin.y, \"L\").concat(box.width, \",\").concat(origin.y, \"\\\"/>\"); // X Axis\n\n      svg += \"<path fill=\\\"none\\\" stroke=\\\"red\\\" stroke-width=\\\"1\\\" d=\\\"M\".concat(origin.x, \",0L\").concat(origin.x, \",\").concat(box.height, \"\\\"/>\"); // Y Axis\n\n      svg += this.getPath(text, options);\n      svg += '</svg>';\n      return svg;\n    }\n  }], [{\n    key: \"loadSync\",\n    value: function loadSync() {\n      var file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_FONT;\n      return new TextToSVG(opentype.loadSync(file));\n    }\n  }, {\n    key: \"load\",\n    value: function load(url, cb) {\n      opentype.load(url, function (err, font) {\n        if (err !== null) {\n          return cb(err, null);\n        }\n\n        return cb(null, new TextToSVG(font));\n      });\n    }\n  }]);\n\n  return TextToSVG;\n}();\n\nexports.default = TextToSVG;\nmodule.exports = exports.default;","// opentype.js\n// https://github.com/opentypejs/opentype.js\n// (c) 2015 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global DataView, Uint8Array, XMLHttpRequest  */\n\nimport 'string.prototype.codepointat';\nimport inflate from 'tiny-inflate';\nimport Font from './font';\nimport Glyph from './glyph';\nimport { CmapEncoding, GlyphNames, addGlyphNames } from './encoding';\nimport parse from './parse';\nimport BoundingBox from './bbox';\nimport Path from './path';\nimport { nodeBufferToArrayBuffer } from './util';\nimport cmap from './tables/cmap';\nimport cff from './tables/cff';\nimport fvar from './tables/fvar';\nimport glyf from './tables/glyf';\nimport gpos from './tables/gpos';\nimport gsub from './tables/gsub';\nimport head from './tables/head';\nimport hhea from './tables/hhea';\nimport hmtx from './tables/hmtx';\nimport kern from './tables/kern';\nimport ltag from './tables/ltag';\nimport loca from './tables/loca';\nimport maxp from './tables/maxp';\nimport _name from './tables/name';\nimport os2 from './tables/os2';\nimport post from './tables/post';\nimport meta from './tables/meta';\n\n/**\n * The opentype library.\n * @namespace opentype\n */\n\n// File loaders /////////////////////////////////////////////////////////\n/**\n * Loads a font from a file. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} path - The path of the file\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromFile(path, callback) {\n    const fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, nodeBufferToArrayBuffer(buffer));\n    });\n}\n/**\n * Loads a font from a URL. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} url - The URL of the font file.\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromUrl(url, callback) {\n    const request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.response) {\n            return callback(null, request.response);\n        } else {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n    };\n\n    request.onerror = function () {\n        callback('Font could not be loaded');\n    };\n\n    request.send();\n}\n\n// Table Directory Entries //////////////////////////////////////////////\n/**\n * Parses OpenType table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseOpenTypeTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 12;\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const checksum = parse.getULong(data, p + 4);\n        const offset = parse.getULong(data, p + 8);\n        const length = parse.getULong(data, p + 12);\n        tableEntries.push({tag: tag, checksum: checksum, offset: offset, length: length, compression: false});\n        p += 16;\n    }\n\n    return tableEntries;\n}\n\n/**\n * Parses WOFF table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseWOFFTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 44; // offset to the first table directory entry.\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const offset = parse.getULong(data, p + 4);\n        const compLength = parse.getULong(data, p + 8);\n        const origLength = parse.getULong(data, p + 12);\n        let compression;\n        if (compLength < origLength) {\n            compression = 'WOFF';\n        } else {\n            compression = false;\n        }\n\n        tableEntries.push({tag: tag, offset: offset, compression: compression,\n            compressedLength: compLength, length: origLength});\n        p += 20;\n    }\n\n    return tableEntries;\n}\n\n/**\n * @typedef TableData\n * @type Object\n * @property {DataView} data - The DataView\n * @property {number} offset - The data offset.\n */\n\n/**\n * @param  {DataView}\n * @param  {Object}\n * @return {TableData}\n */\nfunction uncompressTable(data, tableEntry) {\n    if (tableEntry.compression === 'WOFF') {\n        const inBuffer = new Uint8Array(data.buffer, tableEntry.offset + 2, tableEntry.compressedLength - 2);\n        const outBuffer = new Uint8Array(tableEntry.length);\n        inflate(inBuffer, outBuffer);\n        if (outBuffer.byteLength !== tableEntry.length) {\n            throw new Error('Decompression error: ' + tableEntry.tag + ' decompressed length doesn\\'t match recorded length');\n        }\n\n        const view = new DataView(outBuffer.buffer, 0);\n        return {data: view, offset: 0};\n    } else {\n        return {data: data, offset: tableEntry.offset};\n    }\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n/**\n * Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n * Throws an error if the font could not be parsed.\n * @param  {ArrayBuffer}\n * @return {opentype.Font}\n */\nfunction parseBuffer(buffer) {\n    let indexToLocFormat;\n    let ltagTable;\n\n    // Since the constructor can also be called to create new fonts from scratch, we indicate this\n    // should be an empty font that we'll fill with our own data.\n    const font = new Font({empty: true});\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n    const data = new DataView(buffer, 0);\n    let numTables;\n    let tableEntries = [];\n    const signature = parse.getTag(data, 0);\n    if (signature === String.fromCharCode(0, 1, 0, 0) || signature === 'true' || signature === 'typ1') {\n        font.outlinesFormat = 'truetype';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'OTTO') {\n        font.outlinesFormat = 'cff';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'wOFF') {\n        const flavor = parse.getTag(data, 4);\n        if (flavor === String.fromCharCode(0, 1, 0, 0)) {\n            font.outlinesFormat = 'truetype';\n        } else if (flavor === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType flavor ' + signature);\n        }\n\n        numTables = parse.getUShort(data, 12);\n        tableEntries = parseWOFFTableEntries(data, numTables);\n    } else {\n        throw new Error('Unsupported OpenType signature ' + signature);\n    }\n\n    let cffTableEntry;\n    let fvarTableEntry;\n    let glyfTableEntry;\n    let gposTableEntry;\n    let gsubTableEntry;\n    let hmtxTableEntry;\n    let kernTableEntry;\n    let locaTableEntry;\n    let nameTableEntry;\n    let metaTableEntry;\n    let p;\n\n    for (let i = 0; i < numTables; i += 1) {\n        const tableEntry = tableEntries[i];\n        let table;\n        switch (tableEntry.tag) {\n            case 'cmap':\n                table = uncompressTable(data, tableEntry);\n                font.tables.cmap = cmap.parse(table.data, table.offset);\n                font.encoding = new CmapEncoding(font.tables.cmap);\n                break;\n            case 'cvt ' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.cvt = p.parseShortList(tableEntry.length / 2);\n                break;\n            case 'fvar':\n                fvarTableEntry = tableEntry;\n                break;\n            case 'fpgm' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.fpgm = p.parseByteList(tableEntry.length);\n                break;\n            case 'head':\n                table = uncompressTable(data, tableEntry);\n                font.tables.head = head.parse(table.data, table.offset);\n                font.unitsPerEm = font.tables.head.unitsPerEm;\n                indexToLocFormat = font.tables.head.indexToLocFormat;\n                break;\n            case 'hhea':\n                table = uncompressTable(data, tableEntry);\n                font.tables.hhea = hhea.parse(table.data, table.offset);\n                font.ascender = font.tables.hhea.ascender;\n                font.descender = font.tables.hhea.descender;\n                font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n                break;\n            case 'hmtx':\n                hmtxTableEntry = tableEntry;\n                break;\n            case 'ltag':\n                table = uncompressTable(data, tableEntry);\n                ltagTable = ltag.parse(table.data, table.offset);\n                break;\n            case 'maxp':\n                table = uncompressTable(data, tableEntry);\n                font.tables.maxp = maxp.parse(table.data, table.offset);\n                font.numGlyphs = font.tables.maxp.numGlyphs;\n                break;\n            case 'name':\n                nameTableEntry = tableEntry;\n                break;\n            case 'OS/2':\n                table = uncompressTable(data, tableEntry);\n                font.tables.os2 = os2.parse(table.data, table.offset);\n                break;\n            case 'post':\n                table = uncompressTable(data, tableEntry);\n                font.tables.post = post.parse(table.data, table.offset);\n                font.glyphNames = new GlyphNames(font.tables.post);\n                break;\n            case 'prep' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.prep = p.parseByteList(tableEntry.length);\n                break;\n            case 'glyf':\n                glyfTableEntry = tableEntry;\n                break;\n            case 'loca':\n                locaTableEntry = tableEntry;\n                break;\n            case 'CFF ':\n                cffTableEntry = tableEntry;\n                break;\n            case 'kern':\n                kernTableEntry = tableEntry;\n                break;\n            case 'GPOS':\n                gposTableEntry = tableEntry;\n                break;\n            case 'GSUB':\n                gsubTableEntry = tableEntry;\n                break;\n            case 'meta':\n                metaTableEntry = tableEntry;\n                break;\n        }\n    }\n\n    const nameTable = uncompressTable(data, nameTableEntry);\n    font.tables.name = _name.parse(nameTable.data, nameTable.offset, ltagTable);\n    font.names = font.tables.name;\n\n    if (glyfTableEntry && locaTableEntry) {\n        const shortVersion = indexToLocFormat === 0;\n        const locaTable = uncompressTable(data, locaTableEntry);\n        const locaOffsets = loca.parse(locaTable.data, locaTable.offset, font.numGlyphs, shortVersion);\n        const glyfTable = uncompressTable(data, glyfTableEntry);\n        font.glyphs = glyf.parse(glyfTable.data, glyfTable.offset, locaOffsets, font);\n    } else if (cffTableEntry) {\n        const cffTable = uncompressTable(data, cffTableEntry);\n        cff.parse(cffTable.data, cffTable.offset, font);\n    } else {\n        throw new Error('Font doesn\\'t contain TrueType or CFF outlines.');\n    }\n\n    const hmtxTable = uncompressTable(data, hmtxTableEntry);\n    hmtx.parse(hmtxTable.data, hmtxTable.offset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n    addGlyphNames(font);\n\n    if (kernTableEntry) {\n        const kernTable = uncompressTable(data, kernTableEntry);\n        font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);\n    } else {\n        font.kerningPairs = {};\n    }\n\n    if (gposTableEntry) {\n        const gposTable = uncompressTable(data, gposTableEntry);\n        font.tables.gpos = gpos.parse(gposTable.data, gposTable.offset);\n        font.position.init();\n    }\n\n    if (gsubTableEntry) {\n        const gsubTable = uncompressTable(data, gsubTableEntry);\n        font.tables.gsub = gsub.parse(gsubTable.data, gsubTable.offset);\n    }\n\n    if (fvarTableEntry) {\n        const fvarTable = uncompressTable(data, fvarTableEntry);\n        font.tables.fvar = fvar.parse(fvarTable.data, fvarTable.offset, font.names);\n    }\n\n    if (metaTableEntry) {\n        const metaTable = uncompressTable(data, metaTableEntry);\n        font.tables.meta = meta.parse(metaTable.data, metaTable.offset);\n        font.metas = font.tables.meta;\n    }\n\n    return font;\n}\n\n/**\n * Asynchronously load the font from a URL or a filesystem. When done, call the callback\n * with two arguments `(err, font)`. The `err` will be null on success,\n * the `font` is a Font object.\n * We use the node.js callback convention so that\n * opentype.js can integrate with frameworks like async.js.\n * @alias opentype.load\n * @param  {string} url - The URL of the font to load.\n * @param  {Function} callback - The callback.\n */\nfunction load(url, callback) {\n    const isNode = typeof window === 'undefined';\n    const loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n        let font;\n        try {\n            font = parseBuffer(arrayBuffer);\n        } catch (e) {\n            return callback(e, null);\n        }\n        return callback(null, font);\n    });\n}\n\n/**\n * Synchronously load the font from a URL or file.\n * When done, returns the font object or throws an error.\n * @alias opentype.loadSync\n * @param  {string} url - The URL of the font to load.\n * @return {opentype.Font}\n */\nfunction loadSync(url) {\n    const fs = require('fs');\n    const buffer = fs.readFileSync(url);\n    return parseBuffer(nodeBufferToArrayBuffer(buffer));\n}\n\nexport {\n    Font,\n    Glyph,\n    Path,\n    BoundingBox,\n    parse as _parse,\n    parseBuffer as parse,\n    load,\n    loadSync\n};\n","/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index < 0 || index >= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tsize > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'codePointAt', {\n\t\t\t\t'value': codePointAt,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n","var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n","// The Font object\n\nimport Path from './path';\nimport sfnt from './tables/sfnt';\nimport { DefaultEncoding } from './encoding';\nimport glyphset from './glyphset';\nimport Position from './position';\nimport Substitution from './substitution';\nimport { isBrowser, checkArgument, arrayBufferToNodeBuffer } from './util';\nimport HintingTrueType from './hintingtt';\nimport Bidi from './bidi';\nimport FeatureQuery from './features/featureQuery';\n\n/**\n * @typedef FontOptions\n * @type Object\n * @property {Boolean} empty - whether to create a new empty font\n * @property {string} familyName\n * @property {string} styleName\n * @property {string=} fullName\n * @property {string=} postScriptName\n * @property {string=} designer\n * @property {string=} designerURL\n * @property {string=} manufacturer\n * @property {string=} manufacturerURL\n * @property {string=} license\n * @property {string=} licenseURL\n * @property {string=} version\n * @property {string=} description\n * @property {string=} copyright\n * @property {string=} trademark\n * @property {Number} unitsPerEm\n * @property {Number} ascender\n * @property {Number} descender\n * @property {Number} createdTimestamp\n * @property {string=} weightClass\n * @property {string=} widthClass\n * @property {string=} fsSelection\n */\n\n/**\n * A Font represents a loaded OpenType font file.\n * It contains a set of glyphs and methods to draw text on a drawing context,\n * or to get a path representing the text.\n * @exports opentype.Font\n * @class\n * @param {FontOptions}\n * @constructor\n */\nfunction Font(options) {\n    options = options || {};\n\n    if (!options.empty) {\n        // Check that we've provided the minimum set of names.\n        checkArgument(options.familyName, 'When creating a new Font object, familyName is required.');\n        checkArgument(options.styleName, 'When creating a new Font object, styleName is required.');\n        checkArgument(options.unitsPerEm, 'When creating a new Font object, unitsPerEm is required.');\n        checkArgument(options.ascender, 'When creating a new Font object, ascender is required.');\n        checkArgument(options.descender, 'When creating a new Font object, descender is required.');\n        checkArgument(options.descender < 0, 'Descender should be negative (e.g. -512).');\n\n        // OS X will complain if the names are empty, so we put a single space everywhere by default.\n        this.names = {\n            fontFamily: {en: options.familyName || ' '},\n            fontSubfamily: {en: options.styleName || ' '},\n            fullName: {en: options.fullName || options.familyName + ' ' + options.styleName},\n            // postScriptName may not contain any whitespace\n            postScriptName: {en: options.postScriptName || (options.familyName + options.styleName).replace(/\\s/g, '')},\n            designer: {en: options.designer || ' '},\n            designerURL: {en: options.designerURL || ' '},\n            manufacturer: {en: options.manufacturer || ' '},\n            manufacturerURL: {en: options.manufacturerURL || ' '},\n            license: {en: options.license || ' '},\n            licenseURL: {en: options.licenseURL || ' '},\n            version: {en: options.version || 'Version 0.1'},\n            description: {en: options.description || ' '},\n            copyright: {en: options.copyright || ' '},\n            trademark: {en: options.trademark || ' '}\n        };\n        this.unitsPerEm = options.unitsPerEm || 1000;\n        this.ascender = options.ascender;\n        this.descender = options.descender;\n        this.createdTimestamp = options.createdTimestamp;\n        this.tables = { os2: {\n            usWeightClass: options.weightClass || this.usWeightClasses.MEDIUM,\n            usWidthClass: options.widthClass || this.usWidthClasses.MEDIUM,\n            fsSelection: options.fsSelection || this.fsSelectionValues.REGULAR\n        } };\n    }\n\n    this.supported = true; // Deprecated: parseBuffer will throw an error if font is not supported.\n    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n    this.encoding = new DefaultEncoding(this);\n    this.position = new Position(this);\n    this.substitution = new Substitution(this);\n    this.tables = this.tables || {};\n\n    Object.defineProperty(this, 'hinting', {\n        get: function() {\n            if (this._hinting) return this._hinting;\n            if (this.outlinesFormat === 'truetype') {\n                return (this._hinting = new HintingTrueType(this));\n            }\n        }\n    });\n}\n\n/**\n * Check if the font has a glyph for the given character.\n * @param  {string}\n * @return {Boolean}\n */\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n/**\n * Convert the given character to a single glyph index.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n/**\n * Convert the given character to a single Glyph object.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.charToGlyph = function(c) {\n    const glyphIndex = this.charToGlyphIndex(c);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * Convert the given text to a list of Glyph objects.\n * Note that there is no strict one-to-one mapping between characters and\n * glyphs, so the list of returned glyphs can be larger or smaller than the\n * length of the given string.\n * @param  {string}\n * @param  {GlyphRenderOptions} [options]\n * @return {opentype.Glyph[]}\n */\nFont.prototype.stringToGlyphs = function(s, options) {\n    options = options || this.defaultRenderOptions;\n\n    const bidi = new Bidi();\n\n    // Create and register 'glyphIndex' state modifier\n    const charToGlyphIndexMod = token => this.charToGlyphIndex(token.char);\n    bidi.registerModifier('glyphIndex', null, charToGlyphIndexMod);\n\n    const arabFeatureQuery = new FeatureQuery(this);\n    const arabFeatures = ['init', 'medi', 'fina', 'rlig'];\n    bidi.applyFeatures(\n        arabFeatures.map(tag => {\n            let query = { tag, script: 'arab' };\n            let feature = arabFeatureQuery.getFeature(query);\n            if (!!feature) return feature;\n        })\n    );\n    const indexes = bidi.getTextGlyphs(s);\n\n    let length = indexes.length;\n\n    // Apply substitutions on glyph indexes\n    if (options.features) {\n        const script = options.script || this.substitution.getDefaultScriptName();\n        let manyToOne = [];\n        if (options.features.liga) manyToOne = manyToOne.concat(this.substitution.getFeature('liga', script, options.language));\n        if (options.features.rlig) manyToOne = manyToOne.concat(this.substitution.getFeature('rlig', script, options.language));\n        for (let i = 0; i < length; i += 1) {\n            for (let j = 0; j < manyToOne.length; j++) {\n                const ligature = manyToOne[j];\n                const components = ligature.sub;\n                const compCount = components.length;\n                let k = 0;\n                while (k < compCount && components[k] === indexes[i + k]) k++;\n                if (k === compCount) {\n                    indexes.splice(i, compCount, ligature.by);\n                    length = length - compCount + 1;\n                }\n            }\n        }\n    }\n\n    // convert glyph indexes to glyph objects\n    const glyphs = new Array(length);\n    const notdef = this.glyphs.get(0);\n    for (let i = 0; i < length; i += 1) {\n        glyphs[i] = this.glyphs.get(indexes[i]) || notdef;\n    }\n    return glyphs;\n};\n\n/**\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\n/**\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.nameToGlyph = function(name) {\n    const glyphIndex = this.nameToGlyphIndex(name);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * @param  {Number}\n * @return {String}\n */\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n/**\n * Retrieve the value of the kerning pair between the left glyph (or its index)\n * and the right glyph (or its index). If no kerning pair is found, return 0.\n * The kerning value gets added to the advance width when calculating the spacing\n * between glyphs.\n * For GPOS kerning, this method uses the default script and language, which covers\n * most use cases. To have greater control, use font.position.getKerningValue .\n * @param  {opentype.Glyph} leftGlyph\n * @param  {opentype.Glyph} rightGlyph\n * @return {Number}\n */\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    const gposKerning = this.position.defaultKerningTables;\n    if (gposKerning) {\n        return this.position.getKerningValue(gposKerning, leftGlyph, rightGlyph);\n    }\n    // \"kern\" table\n    return this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0;\n};\n\n/**\n * @typedef GlyphRenderOptions\n * @type Object\n * @property {string} [script] - script used to determine which features to apply. By default, 'DFLT' or 'latn' is used.\n *                               See https://www.microsoft.com/typography/otspec/scripttags.htm\n * @property {string} [language='dflt'] - language system used to determine which features to apply.\n *                                        See https://www.microsoft.com/typography/developers/opentype/languagetags.aspx\n * @property {boolean} [kerning=true] - whether to include kerning values\n * @property {object} [features] - OpenType Layout feature tags. Used to enable or disable the features of the given script/language system.\n *                                 See https://www.microsoft.com/typography/otspec/featuretags.htm\n */\nFont.prototype.defaultRenderOptions = {\n    kerning: true,\n    features: {\n        liga: true,\n        rlig: true\n    }\n};\n\n/**\n * Helper function that invokes the given callback for each glyph in the given text.\n * The callback gets `(glyph, x, y, fontSize, options)`.* @param  {string} text\n * @param {string} text - The text to apply.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @param  {Function} callback\n */\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || this.defaultRenderOptions;\n    const fontScale = 1 / this.unitsPerEm * fontSize;\n    const glyphs = this.stringToGlyphs(text, options);\n    let kerningLookups;\n    if (options.kerning) {\n        const script = options.script || this.position.getDefaultScriptName();\n        kerningLookups = this.position.getKerningTables(script, options.language);\n    }\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs[i];\n        callback.call(this, glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (options.kerning && i < glyphs.length - 1) {\n            // We should apply position adjustment lookups in a more generic way.\n            // Here we only use the xAdvance value.\n            const kerningValue = kerningLookups ?\n                  this.position.getKerningValue(kerningLookups, glyph.index, glyphs[i + 1].index) :\n                  this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n\n        if (options.letterSpacing) {\n            x += options.letterSpacing * fontSize;\n        } else if (options.tracking) {\n            x += (options.tracking / 1000) * fontSize;\n        }\n    }\n    return x;\n};\n\n/**\n * Create a Path object that represents the given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path}\n */\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    const fullPath = new Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        fullPath.extend(glyphPath);\n    });\n    return fullPath;\n};\n\n/**\n * Create an array of Path objects that represent the glyphs of a given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path[]}\n */\nFont.prototype.getPaths = function(text, x, y, fontSize, options) {\n    const glyphPaths = [];\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        glyphPaths.push(glyphPath);\n    });\n\n    return glyphPaths;\n};\n\n/**\n * Returns the advance width of a text.\n *\n * This is something different than Path.getBoundingBox() as for example a\n * suffixed whitespace increases the advanceWidth but not the bounding box\n * or an overhanging letter like a calligraphic 'f' might have a quite larger\n * bounding box than its advance width.\n *\n * This corresponds to canvas2dContext.measureText(text).width\n *\n * @param  {string} text - The text to create.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return advance width\n */\nFont.prototype.getAdvanceWidth = function(text, fontSize, options) {\n    return this.forEachGlyph(text, 0, 0, fontSize, options, function() {});\n};\n\n/**\n * Draw the text on the given drawing context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n */\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of all glyphs in the text.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * Draw lines indicating important font measurements for all glyphs in the text.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * @param  {string}\n * @return {string}\n */\nFont.prototype.getEnglishName = function(name) {\n    const translations = this.names[name];\n    if (translations) {\n        return translations.en;\n    }\n};\n\n/**\n * Validate\n */\nFont.prototype.validate = function() {\n    const warnings = [];\n    const _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertNamePresent(name) {\n        const englishName = _this.getEnglishName(name);\n        assert(englishName && englishName.trim().length > 0,\n               'No English ' + name + ' specified.');\n    }\n\n    // Identification information\n    assertNamePresent('fontFamily');\n    assertNamePresent('weightName');\n    assertNamePresent('manufacturer');\n    assertNamePresent('copyright');\n    assertNamePresent('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n/**\n * Convert the font object to a SFNT data structure.\n * This structure contains all the necessary tables and metadata to create a binary OTF file.\n * @return {opentype.Table}\n */\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n/**\n * @deprecated Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.\n */\nFont.prototype.toBuffer = function() {\n    console.warn('Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.');\n    return this.toArrayBuffer();\n};\n/**\n * Converts a `opentype.Font` into an `ArrayBuffer`\n * @return {ArrayBuffer}\n */\nFont.prototype.toArrayBuffer = function() {\n    const sfntTable = this.toTables();\n    const bytes = sfntTable.encode();\n    const buffer = new ArrayBuffer(bytes.length);\n    const intArray = new Uint8Array(buffer);\n    for (let i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n/**\n * Initiate a download of the OpenType font.\n */\nFont.prototype.download = function(fileName) {\n    const familyName = this.getEnglishName('fontFamily');\n    const styleName = this.getEnglishName('fontSubfamily');\n    fileName = fileName || familyName.replace(/\\s/g, '') + '-' + styleName + '.otf';\n    const arrayBuffer = this.toArrayBuffer();\n\n    if (isBrowser()) {\n        window.URL = window.URL || window.webkitURL;\n\n        if (window.URL) {\n            const dataView = new DataView(arrayBuffer);\n            const blob = new Blob([dataView], {type: 'font/opentype'});\n\n            let link = document.createElement('a');\n            link.href = window.URL.createObjectURL(blob);\n            link.download = fileName;\n\n            let event = document.createEvent('MouseEvents');\n            event.initEvent('click', true, false);\n            link.dispatchEvent(event);\n        } else {\n            console.warn('Font file could not be downloaded. Try using a different browser.');\n        }\n    } else {\n        const fs = require('fs');\n        const buffer = arrayBufferToNodeBuffer(arrayBuffer);\n        fs.writeFileSync(fileName, buffer);\n    }\n};\n/**\n * @private\n */\nFont.prototype.fsSelectionValues = {\n    ITALIC:              0x001, //1\n    UNDERSCORE:          0x002, //2\n    NEGATIVE:            0x004, //4\n    OUTLINED:            0x008, //8\n    STRIKEOUT:           0x010, //16\n    BOLD:                0x020, //32\n    REGULAR:             0x040, //64\n    USER_TYPO_METRICS:   0x080, //128\n    WWS:                 0x100, //256\n    OBLIQUE:             0x200  //512\n};\n\n/**\n * @private\n */\nFont.prototype.usWidthClasses = {\n    ULTRA_CONDENSED: 1,\n    EXTRA_CONDENSED: 2,\n    CONDENSED: 3,\n    SEMI_CONDENSED: 4,\n    MEDIUM: 5,\n    SEMI_EXPANDED: 6,\n    EXPANDED: 7,\n    EXTRA_EXPANDED: 8,\n    ULTRA_EXPANDED: 9\n};\n\n/**\n * @private\n */\nFont.prototype.usWeightClasses = {\n    THIN: 100,\n    EXTRA_LIGHT: 200,\n    LIGHT: 300,\n    NORMAL: 400,\n    MEDIUM: 500,\n    SEMI_BOLD: 600,\n    BOLD: 700,\n    EXTRA_BOLD: 800,\n    BLACK:    900\n};\n\nexport default Font;\n","// Geometric objects\n\nimport BoundingBox from './bbox';\n\n/**\n * A bézier path containing a set of path commands similar to a SVG path.\n * Paths can be drawn on a context using `draw`.\n * @exports opentype.Path\n * @class\n * @constructor\n */\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws cubic curve\n * @function\n * curveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws cubic curve\n * @function\n * bezierCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n * @see curveTo\n */\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws quadratic curve\n * @function\n * quadraticCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws quadratic curve\n * @function\n * quadTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Closes the path\n * @function closePath\n * @memberof opentype.Path.prototype\n */\n\n/**\n * Close the path\n * @function close\n * @memberof opentype.Path.prototype\n */\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n/**\n * Add the given path or list of commands to the commands of this path.\n * @param  {Array} pathOrCommands - another opentype.Path, an opentype.BoundingBox, or an array of commands.\n */\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    } else if (pathOrCommands instanceof BoundingBox) {\n        const box = pathOrCommands;\n        this.moveTo(box.x1, box.y1);\n        this.lineTo(box.x2, box.y1);\n        this.lineTo(box.x2, box.y2);\n        this.lineTo(box.x1, box.y2);\n        this.close();\n        return;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n/**\n * Calculate the bounding box of the path.\n * @returns {opentype.BoundingBox}\n */\nPath.prototype.getBoundingBox = function() {\n    const box = new BoundingBox();\n\n    let startX = 0;\n    let startY = 0;\n    let prevX = 0;\n    let prevY = 0;\n    for (let i = 0; i < this.commands.length; i++) {\n        const cmd = this.commands[i];\n        switch (cmd.type) {\n            case 'M':\n                box.addPoint(cmd.x, cmd.y);\n                startX = prevX = cmd.x;\n                startY = prevY = cmd.y;\n                break;\n            case 'L':\n                box.addPoint(cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Q':\n                box.addQuad(prevX, prevY, cmd.x1, cmd.y1, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'C':\n                box.addBezier(prevX, prevY, cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Z':\n                prevX = startX;\n                prevY = startY;\n                break;\n            default:\n                throw new Error('Unexpected path command ' + cmd.type);\n        }\n    }\n    if (box.isEmpty()) {\n        box.addPoint(0, 0);\n    }\n    return box;\n};\n\n/**\n * Draw the path to a 2D context.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context.\n */\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n/**\n * Convert the Path to a string of path data instructions\n * See http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        let s = '';\n        for (let i = 0; i < arguments.length; i += 1) {\n            const v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    let d = '';\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n/**\n * Convert the path to an SVG <path> element, as a string.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toSVG = function(decimalPlaces) {\n    let svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill && this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\n/**\n * Convert the path to a DOM element.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {SVGPathElement}\n */\nPath.prototype.toDOMElement = function(decimalPlaces) {\n    const temporaryPath = this.toPathData(decimalPlaces);\n    const newPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n    newPath.setAttribute('d', temporaryPath);\n\n    return newPath;\n};\n\nexport default Path;\n","// The Bounding Box object\n\nfunction derive(v0, v1, v2, v3, t) {\n    return Math.pow(1 - t, 3) * v0 +\n        3 * Math.pow(1 - t, 2) * t * v1 +\n        3 * (1 - t) * Math.pow(t, 2) * v2 +\n        Math.pow(t, 3) * v3;\n}\n/**\n * A bounding box is an enclosing box that describes the smallest measure within which all the points lie.\n * It is used to calculate the bounding box of a glyph or text path.\n *\n * On initialization, x1/y1/x2/y2 will be NaN. Check if the bounding box is empty using `isEmpty()`.\n *\n * @exports opentype.BoundingBox\n * @class\n * @constructor\n */\nfunction BoundingBox() {\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n}\n\n/**\n * Returns true if the bounding box is empty, that is, no points have been added to the box yet.\n */\nBoundingBox.prototype.isEmpty = function() {\n    return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);\n};\n\n/**\n * Add the point to the bounding box.\n * The x1/y1/x2/y2 coordinates of the bounding box will now encompass the given point.\n * @param {number} x - The X coordinate of the point.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addPoint = function(x, y) {\n    if (typeof x === 'number') {\n        if (isNaN(this.x1) || isNaN(this.x2)) {\n            this.x1 = x;\n            this.x2 = x;\n        }\n        if (x < this.x1) {\n            this.x1 = x;\n        }\n        if (x > this.x2) {\n            this.x2 = x;\n        }\n    }\n    if (typeof y === 'number') {\n        if (isNaN(this.y1) || isNaN(this.y2)) {\n            this.y1 = y;\n            this.y2 = y;\n        }\n        if (y < this.y1) {\n            this.y1 = y;\n        }\n        if (y > this.y2) {\n            this.y2 = y;\n        }\n    }\n};\n\n/**\n * Add a X coordinate to the bounding box.\n * This extends the bounding box to include the X coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} x - The X coordinate of the point.\n */\nBoundingBox.prototype.addX = function(x) {\n    this.addPoint(x, null);\n};\n\n/**\n * Add a Y coordinate to the bounding box.\n * This extends the bounding box to include the Y coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addY = function(y) {\n    this.addPoint(null, y);\n};\n\n/**\n * Add a Bézier curve to the bounding box.\n * This extends the bounding box to include the entire Bézier.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the first control point.\n * @param {number} y1 - The Y coordinate of the first control point.\n * @param {number} x2 - The X coordinate of the second control point.\n * @param {number} y2 - The Y coordinate of the second control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addBezier = function(x0, y0, x1, y1, x2, y2, x, y) {\n    // This code is based on http://nishiohirokazu.blogspot.com/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // and https://github.com/icons8/svg-path-bounding-box\n\n    const p0 = [x0, y0];\n    const p1 = [x1, y1];\n    const p2 = [x2, y2];\n    const p3 = [x, y];\n\n    this.addPoint(x0, y0);\n    this.addPoint(x, y);\n\n    for (let i = 0; i <= 1; i++) {\n        const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n        const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n        const c = 3 * p1[i] - 3 * p0[i];\n\n        if (a === 0) {\n            if (b === 0) continue;\n            const t = -c / b;\n            if (0 < t && t < 1) {\n                if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t));\n                if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t));\n            }\n            continue;\n        }\n\n        const b2ac = Math.pow(b, 2) - 4 * c * a;\n        if (b2ac < 0) continue;\n        const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t1 && t1 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t1));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t1));\n        }\n        const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t2 && t2 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t2));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t2));\n        }\n    }\n};\n\n/**\n * Add a quadratic curve to the bounding box.\n * This extends the bounding box to include the entire quadratic curve.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the control point.\n * @param {number} y1 - The Y coordinate of the control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addQuad = function(x0, y0, x1, y1, x, y) {\n    const cp1x = x0 + 2 / 3 * (x1 - x0);\n    const cp1y = y0 + 2 / 3 * (y1 - y0);\n    const cp2x = cp1x + 1 / 3 * (x - x0);\n    const cp2y = cp1y + 1 / 3 * (y - y0);\n    this.addBezier(x0, y0, cp1x, cp1y, cp2x, cp2y, x, y);\n};\n\nexport default BoundingBox;\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\nimport check from '../check';\nimport table from '../table';\n\nimport cmap from './cmap';\nimport cff from './cff';\nimport head from './head';\nimport hhea from './hhea';\nimport hmtx from './hmtx';\nimport ltag from './ltag';\nimport maxp from './maxp';\nimport _name from './name';\nimport os2 from './os2';\nimport post from './post';\nimport gsub from './gsub';\nimport meta from './meta';\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    let sum = 0;\n    for (let i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Record('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    const sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    const highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    const recordFields = [];\n    const tableFields = [];\n\n    let offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (let i = 0; i < tables.length; i += 1) {\n        const t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        const tableLength = t.sizeOf();\n        const tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'RECORD', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'RECORD', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (let i = 0; i < chars.length; i += 1) {\n        const glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            const glyph = font.glyphs.get(glyphIndex);\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    let sum = 0;\n    for (let i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    const xMins = [];\n    const yMins = [];\n    const xMaxs = [];\n    const yMaxs = [];\n    const advanceWidths = [];\n    const leftSideBearings = [];\n    const rightSideBearings = [];\n    let firstCharIndex;\n    let lastCharIndex = 0;\n    let ulUnicodeRange1 = 0;\n    let ulUnicodeRange2 = 0;\n    let ulUnicodeRange3 = 0;\n    let ulUnicodeRange4 = 0;\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        const glyph = font.glyphs.get(i);\n        const unicode = glyph.unicode | 0;\n\n        if (isNaN(glyph.advanceWidth)) {\n            throw new Error('Glyph ' + glyph.name + ' (' + i + '): advanceWidth is not a number.');\n        }\n\n        if (firstCharIndex > unicode || firstCharIndex === undefined) {\n            // ignore .notdef char\n            if (unicode > 0) {\n                firstCharIndex = unicode;\n            }\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        const position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        const metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    const globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender;\n    globals.descender = font.descender;\n\n    const headTable = head.make({\n        flags: 3, // 00000011 (baseline for font at y=0; left sidebearing point at x=0)\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax,\n        lowestRecPPEM: 3,\n        createdTimestamp: font.createdTimestamp\n    });\n\n    const hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    const maxpTable = maxp.make(font.glyphs.length);\n\n    const os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: font.tables.os2.usWeightClass,\n        usWidthClass: font.tables.os2.usWidthClass,\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        fsSelection: font.tables.os2.fsSelection, // REGULAR\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.yMax,\n        usWinDescent: Math.abs(globals.yMin),\n        ulCodePageRange1: 1, // FIXME: hard-code Latin 1 support for now\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: Math.round(globals.ascender / 2)}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usDefaultChar: font.hasChar(' ') ? 32 : 0, // Use space as the default character, if available.\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    const hmtxTable = hmtx.make(font.glyphs);\n    const cmapTable = cmap.make(font.glyphs);\n\n    const englishFamilyName = font.getEnglishName('fontFamily');\n    const englishStyleName = font.getEnglishName('fontSubfamily');\n    const englishFullName = englishFamilyName + ' ' + englishStyleName;\n    let postScriptName = font.getEnglishName('postScriptName');\n    if (!postScriptName) {\n        postScriptName = englishFamilyName.replace(/\\s/g, '') + '-' + englishStyleName;\n    }\n\n    const names = {};\n    for (let n in font.names) {\n        names[n] = font.names[n];\n    }\n\n    if (!names.uniqueID) {\n        names.uniqueID = {en: font.getEnglishName('manufacturer') + ':' + englishFullName};\n    }\n\n    if (!names.postScriptName) {\n        names.postScriptName = {en: postScriptName};\n    }\n\n    if (!names.preferredFamily) {\n        names.preferredFamily = font.names.fontFamily;\n    }\n\n    if (!names.preferredSubfamily) {\n        names.preferredSubfamily = font.names.fontSubfamily;\n    }\n\n    const languageTags = [];\n    const nameTable = _name.make(names, languageTags);\n    const ltagTable = (languageTags.length > 0 ? ltag.make(languageTags) : undefined);\n\n    const postTable = post.make();\n    const cffTable = cff.make(font.glyphs, {\n        version: font.getEnglishName('version'),\n        fullName: englishFullName,\n        familyName: englishFamilyName,\n        weightName: englishStyleName,\n        postScriptName: postScriptName,\n        unitsPerEm: font.unitsPerEm,\n        fontBBox: [0, globals.yMin, globals.ascender, globals.advanceWidthMax]\n    });\n\n    const metaTable = (font.metas && Object.keys(font.metas).length > 0) ? meta.make(font.metas) : undefined;\n\n    // The order does not matter because makeSfntTable() will sort them.\n    const tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n    if (ltagTable) {\n        tables.push(ltagTable);\n    }\n    // Optional tables\n    if (font.tables.gsub) {\n        tables.push(gsub.make(font.tables.gsub));\n    }\n    if (metaTable) {\n        tables.push(metaTable);\n    }\n\n    const sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    const bytes = sfntTable.encode();\n    const checkSum = computeCheckSum(bytes);\n    const tableFields = sfntTable.fields;\n    let checkSumAdjusted = false;\n    for (let i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexport default { make: makeSfntTable, fontToTable: fontToSfntTable, computeCheckSum };\n","// Run-time checking of preconditions.\n\nfunction fail(message) {\n    throw new Error(message);\n}\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nfunction argument(predicate, message) {\n    if (!predicate) {\n        fail(message);\n    }\n}\n\nexport { fail, argument, argument as assert };\nexport default { fail, argument, assert: argument };\n","// Table metadata\n\nimport check from './check';\nimport { encode, sizeOf } from './types';\n\n/**\n * @exports opentype.Table\n * @class\n * @param {string} tableName\n * @param {Array} fields\n * @param {Object} options\n * @constructor\n */\nfunction Table(tableName, fields, options) {\n    for (let i = 0; i < fields.length; i += 1) {\n        const field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        const optionKeys = Object.keys(options);\n        for (let i = 0; i < optionKeys.length; i += 1) {\n            const k = optionKeys[i];\n            const v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\n/**\n * Encodes the table and returns an array of bytes\n * @return {Array}\n */\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\n/**\n * Get the size of the table.\n * @return {number}\n */\nTable.prototype.sizeOf = function() {\n    return sizeOf.TABLE(this);\n};\n\n/**\n * @private\n */\nfunction ushortList(itemName, list, count) {\n    if (count === undefined) {\n        count = list.length;\n    }\n    const fields = new Array(list.length + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < list.length; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'USHORT', value: list[i]};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction tableList(itemName, records, itemCallback) {\n    const count = records.length;\n    const fields = new Array(count + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'TABLE', value: itemCallback(records[i], i)};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction recordList(itemName, records, itemCallback) {\n    const count = records.length;\n    let fields = [];\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields = fields.concat(itemCallback(records[i], i));\n    }\n    return fields;\n}\n\n// Common Layout Tables\n\n/**\n * @exports opentype.Coverage\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction Coverage(coverageTable) {\n    if (coverageTable.format === 1) {\n        Table.call(this, 'coverageTable',\n            [{name: 'coverageFormat', type: 'USHORT', value: 1}]\n            .concat(ushortList('glyph', coverageTable.glyphs))\n        );\n    } else {\n        check.assert(false, 'Can\\'t create coverage table format 2 yet.');\n    }\n}\nCoverage.prototype = Object.create(Table.prototype);\nCoverage.prototype.constructor = Coverage;\n\nfunction ScriptList(scriptListTable) {\n    Table.call(this, 'scriptListTable',\n        recordList('scriptRecord', scriptListTable, function(scriptRecord, i) {\n            const script = scriptRecord.script;\n            let defaultLangSys = script.defaultLangSys;\n            check.assert(!!defaultLangSys, 'Unable to write GSUB: script ' + scriptRecord.tag + ' has no default language system.');\n            return [\n                {name: 'scriptTag' + i, type: 'TAG', value: scriptRecord.tag},\n                {name: 'script' + i, type: 'TABLE', value: new Table('scriptTable', [\n                    {name: 'defaultLangSys', type: 'TABLE', value: new Table('defaultLangSys', [\n                        {name: 'lookupOrder', type: 'USHORT', value: 0},\n                        {name: 'reqFeatureIndex', type: 'USHORT', value: defaultLangSys.reqFeatureIndex}]\n                        .concat(ushortList('featureIndex', defaultLangSys.featureIndexes)))}\n                    ].concat(recordList('langSys', script.langSysRecords, function(langSysRecord, i) {\n                        const langSys = langSysRecord.langSys;\n                        return [\n                            {name: 'langSysTag' + i, type: 'TAG', value: langSysRecord.tag},\n                            {name: 'langSys' + i, type: 'TABLE', value: new Table('langSys', [\n                                {name: 'lookupOrder', type: 'USHORT', value: 0},\n                                {name: 'reqFeatureIndex', type: 'USHORT', value: langSys.reqFeatureIndex}\n                                ].concat(ushortList('featureIndex', langSys.featureIndexes)))}\n                        ];\n                    })))}\n            ];\n        })\n    );\n}\nScriptList.prototype = Object.create(Table.prototype);\nScriptList.prototype.constructor = ScriptList;\n\n/**\n * @exports opentype.FeatureList\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction FeatureList(featureListTable) {\n    Table.call(this, 'featureListTable',\n        recordList('featureRecord', featureListTable, function(featureRecord, i) {\n            const feature = featureRecord.feature;\n            return [\n                {name: 'featureTag' + i, type: 'TAG', value: featureRecord.tag},\n                {name: 'feature' + i, type: 'TABLE', value: new Table('featureTable', [\n                    {name: 'featureParams', type: 'USHORT', value: feature.featureParams},\n                    ].concat(ushortList('lookupListIndex', feature.lookupListIndexes)))}\n            ];\n        })\n    );\n}\nFeatureList.prototype = Object.create(Table.prototype);\nFeatureList.prototype.constructor = FeatureList;\n\n/**\n * @exports opentype.LookupList\n * @class\n * @param {opentype.Table}\n * @param {Object}\n * @constructor\n * @extends opentype.Table\n */\nfunction LookupList(lookupListTable, subtableMakers) {\n    Table.call(this, 'lookupListTable', tableList('lookup', lookupListTable, function(lookupTable) {\n        let subtableCallback = subtableMakers[lookupTable.lookupType];\n        check.assert(!!subtableCallback, 'Unable to write GSUB lookup type ' + lookupTable.lookupType + ' tables.');\n        return new Table('lookupTable', [\n            {name: 'lookupType', type: 'USHORT', value: lookupTable.lookupType},\n            {name: 'lookupFlag', type: 'USHORT', value: lookupTable.lookupFlag}\n        ].concat(tableList('subtable', lookupTable.subtables, subtableCallback)));\n    }));\n}\nLookupList.prototype = Object.create(Table.prototype);\nLookupList.prototype.constructor = LookupList;\n\n// Record = same as Table, but inlined (a Table has an offset and its data is further in the stream)\n// Don't use offsets inside Records (probable bug), only in Tables.\nexport default {\n    Table,\n    Record: Table,\n    Coverage,\n    ScriptList,\n    FeatureList,\n    LookupList,\n    ushortList,\n    tableList,\n    recordList,\n};\n","// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\nimport check from './check';\n\nconst LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nconst LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\n/**\n * @exports opentype.decode\n * @class\n */\nconst decode = {};\n/**\n * @exports opentype.encode\n * @class\n */\nconst encode = {};\n/**\n * @exports opentype.sizeOf\n * @class\n */\nconst sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n/**\n * Convert an 8-bit unsigned integer to a list of 1 byte.\n * @param {number}\n * @returns {Array}\n */\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n/**\n * @constant\n * @type {number}\n */\nsizeOf.BYTE = constant(1);\n\n/**\n * Convert a 8-bit signed integer to a list of 1 byte.\n * @param {string}\n * @returns {Array}\n */\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.CHAR = constant(1);\n\n/**\n * Convert an ASCII string to a list of bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.CHARARRAY = function(v) {\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        b[i] = v.charCodeAt(i);\n    }\n\n    return b;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n/**\n * Convert a 16-bit unsigned integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.USHORT = constant(2);\n\n/**\n * Convert a 16-bit signed integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.SHORT = constant(2);\n\n/**\n * Convert a 24-bit unsigned integer to a list of 3 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.UINT24 = constant(3);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.ULONG = constant(4);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n/**\n * Convert a 32-bit Apple Mac timestamp integer to a list of 8 bytes, 64-bit timestamp.\n * @param {number}\n * @returns {Array}\n */\nencode.LONGDATETIME = function(v) {\n    return [0, 0, 0, 0, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONGDATETIME = constant(8);\n\n/**\n * Convert a 4-char tag to a list of 4 bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\n/**\n * Convert a numeric operand or charstring number to a variable-size list of bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n/**\n * Convert a signed number between -32768 and +32767 to a three-byte value.\n * This ensures we always use three bytes, but is not the most compact format.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER16 = constant(3);\n\n/**\n * Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.\n * This is useful if you want to be sure you always use four bytes,\n * at the expense of wasting a few bytes for smaller numbers.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER32 = constant(5);\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.REAL = function(v) {\n    let value = v.toString();\n\n    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n    // This code converts it back to a number without the epsilon.\n    const m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n    if (m) {\n        const epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(v * epsilon) / epsilon).toString();\n    }\n\n    let nibbles = '';\n    for (let i = 0, ii = value.length; i < ii; i += 1) {\n        const c = value[i];\n        if (c === 'e') {\n            nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (c === '.') {\n            nibbles += 'a';\n        } else if (c === '-') {\n            nibbles += 'e';\n        } else {\n            nibbles += c;\n        }\n    }\n\n    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n    const out = [30];\n    for (let i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n    }\n\n    return out;\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.REAL = function(v) {\n    return encode.REAL(v).length;\n};\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF8 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes;\n    for (let j = 0; j < numChars; j++, offset += 1) {\n        codePoints[j] = data.getUint8(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF16 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes / 2;\n    for (let j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * Convert a JavaScript string to UTF16-BE.\n * @param {string}\n * @returns {Array}\n */\nencode.UTF16 = function(v) {\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        const codepoint = v.charCodeAt(i);\n        b[b.length] = (codepoint >> 8) & 0xFF;\n        b[b.length] = codepoint & 0xFF;\n    }\n\n    return b;\n};\n\n/**\n * @param {string}\n * @returns {number}\n */\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comparatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\n/**\n * @private\n */\nconst eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n    '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n    'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n    'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n    'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n    'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n    'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n    'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n    'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n    'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n    'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n/**\n * Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n * string, or 'undefined' if the encoding is unsupported. For example, we do\n * not support Chinese, Japanese or Korean because these would need large\n * mapping tables.\n * @param {DataView} dataView\n * @param {number} offset\n * @param {number} dataLength\n * @param {string} encoding\n * @returns {string}\n */\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    const table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    let result = '';\n    for (let i = 0; i < dataLength; i++) {\n        const c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// Helper function for encode.MACSTRING. Returns a dictionary for mapping\n// Unicode character codes to their 8-bit MacOS equivalent. This table\n// is not exactly a super cheap data structure, but we do not care because\n// encoding Macintosh strings is only rarely needed in typical applications.\nconst macEncodingTableCache = typeof WeakMap === 'function' && new WeakMap();\nlet macEncodingCacheKeys;\nconst getMacEncodingTable = function (encoding) {\n    // Since we use encoding as a cache key for WeakMap, it has to be\n    // a String object and not a literal. And at least on NodeJS 2.10.1,\n    // WeakMap requires that the same String instance is passed for cache hits.\n    if (!macEncodingCacheKeys) {\n        macEncodingCacheKeys = {};\n        for (let e in eightBitMacEncodings) {\n            /*jshint -W053 */  // Suppress \"Do not use String as a constructor.\"\n            macEncodingCacheKeys[e] = new String(e);\n        }\n    }\n\n    const cacheKey = macEncodingCacheKeys[encoding];\n    if (cacheKey === undefined) {\n        return undefined;\n    }\n\n    // We can't do \"if (cache.has(key)) {return cache.get(key)}\" here:\n    // since garbage collection may run at any time, it could also kick in\n    // between the calls to cache.has() and cache.get(). In that case,\n    // we would return 'undefined' even though we do support the encoding.\n    if (macEncodingTableCache) {\n        const cachedTable = macEncodingTableCache.get(cacheKey);\n        if (cachedTable !== undefined) {\n            return cachedTable;\n        }\n    }\n\n    const decodingTable = eightBitMacEncodings[encoding];\n    if (decodingTable === undefined) {\n        return undefined;\n    }\n\n    const encodingTable = {};\n    for (let i = 0; i < decodingTable.length; i++) {\n        encodingTable[decodingTable.charCodeAt(i)] = i + 0x80;\n    }\n\n    if (macEncodingTableCache) {\n        macEncodingTableCache.set(cacheKey, encodingTable);\n    }\n\n    return encodingTable;\n};\n\n/**\n * Encodes an old-style Macintosh string. Returns a byte array upon success.\n * If the requested encoding is unsupported, or if the input string contains\n * a character that cannot be expressed in the encoding, the function returns\n * 'undefined'.\n * @param {string} str\n * @param {string} encoding\n * @returns {Array}\n */\nencode.MACSTRING = function(str, encoding) {\n    const table = getMacEncodingTable(encoding);\n    if (table === undefined) {\n        return undefined;\n    }\n\n    const result = [];\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charCodeAt(i);\n\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c >= 0x80) {\n            c = table[c];\n            if (c === undefined) {\n                // str contains a Unicode character that cannot be encoded\n                // in the requested encoding.\n                return undefined;\n            }\n        }\n        result[i] = c;\n        // result.push(c);\n    }\n\n    return result;\n};\n\n/**\n * @param {string} str\n * @param {string} encoding\n * @returns {number}\n */\nsizeOf.MACSTRING = function(str, encoding) {\n    const b = encode.MACSTRING(str, encoding);\n    if (b !== undefined) {\n        return b.length;\n    } else {\n        return 0;\n    }\n};\n\n// Helper for encode.VARDELTAS\nfunction isByteEncodable(value) {\n    return value >= -128 && value <= 127;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsZeroes(deltas, pos, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    while (pos < numDeltas && runLength < 64 && deltas[pos] === 0) {\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x80 | (runLength - 1));\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsBytes(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n        if (!isByteEncodable(value)) {\n            break;\n        }\n\n        // Within a byte-encoded run of deltas, a single zero is best\n        // stored literally as 0x00 value. However, if we have two or\n        // more zeroes in a sequence, it is better to start a new run.\n        // Fore example, the sequence of deltas [15, 15, 0, 15, 15]\n        // becomes 6 bytes (04 0F 0F 00 0F 0F) when storing the zero\n        // within the current run, but 7 bytes (01 0F 0F 80 01 0F 0F)\n        // when starting a new run.\n        if (value === 0 && pos + 1 < numDeltas && deltas[pos + 1] === 0) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(runLength - 1);\n    for (let i = offset; i < pos; ++i) {\n        result.push((deltas[i] + 256) & 0xff);\n    }\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsWords(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n\n        // Within a word-encoded run of deltas, it is easiest to start\n        // a new run (with a different encoding) whenever we encounter\n        // a zero value. For example, the sequence [0x6666, 0, 0x7777]\n        // needs 7 bytes when storing the zero inside the current run\n        // (42 66 66 00 00 77 77), and equally 7 bytes when starting a\n        // new run (40 66 66 80 40 77 77).\n        if (value === 0) {\n            break;\n        }\n\n        // Within a word-encoded run of deltas, a single value in the\n        // range (-128..127) should be encoded within the current run\n        // because it is more compact. For example, the sequence\n        // [0x6666, 2, 0x7777] becomes 7 bytes when storing the value\n        // literally (42 66 66 00 02 77 77), but 8 bytes when starting\n        // a new run (40 66 66 00 02 40 77 77).\n        if (isByteEncodable(value) && pos + 1 < numDeltas && isByteEncodable(deltas[pos + 1])) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x40 | (runLength - 1));\n    for (let i = offset; i < pos; ++i) {\n        const val = deltas[i];\n        result.push(((val + 0x10000) >> 8) & 0xff, (val + 0x100) & 0xff);\n    }\n    return pos;\n}\n\n/**\n * Encode a list of variation adjustment deltas.\n *\n * Variation adjustment deltas are used in ‘gvar’ and ‘cvar’ tables.\n * They indicate how points (in ‘gvar’) or values (in ‘cvar’) get adjusted\n * when generating instances of variation fonts.\n *\n * @see https://www.microsoft.com/typography/otspec/gvar.htm\n * @see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6gvar.html\n * @param {Array}\n * @return {Array}\n */\nencode.VARDELTAS = function(deltas) {\n    let pos = 0;\n    const result = [];\n    while (pos < deltas.length) {\n        const value = deltas[pos];\n        if (value === 0) {\n            pos = encodeVarDeltaRunAsZeroes(deltas, pos, result);\n        } else if (value >= -128 && value <= 127) {\n            pos = encodeVarDeltaRunAsBytes(deltas, pos, result);\n        } else {\n            pos = encodeVarDeltaRunAsWords(deltas, pos, result);\n        }\n    }\n    return result;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\n/**\n * @param {Array} l\n * @returns {Array}\n */\nencode.INDEX = function(l) {\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offsets, then again to encode the offsets using the fitting data type.\n    let offset = 1; // First offset is always 1.\n    const offsets = [offset];\n    const data = [];\n    for (let i = 0; i < l.length; i += 1) {\n        const v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    const encodedOffsets = [];\n    const offSize = (1 + Math.floor(Math.log(offset) / Math.log(2)) / 8) | 0;\n    const offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (let i = 0; i < offsets.length; i += 1) {\n        const encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n/**\n * Convert an object to a CFF DICT structure.\n * The keys should be numeric.\n * The values should be objects containing name / type / value.\n * @param {Object} m\n * @returns {Array}\n */\nencode.DICT = function(m) {\n    let d = [];\n    const keys = Object.keys(m);\n    const length = keys.length;\n\n    for (let i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        const k = parseInt(keys[i], 0);\n        const v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\n/**\n * @param {Array} v\n * @param {string}\n * @returns {Array}\n */\nencode.OPERAND = function(v, type) {\n    let d = [];\n    if (Array.isArray(type)) {\n        for (let i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else if (type === 'number') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'real') {\n            d = d.concat(encode.REAL(v));\n        } else {\n            throw new Error('Unknown operand type ' + type);\n            // FIXME Add support for booleans\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nconst wmm = typeof WeakMap === 'function' && new WeakMap();\n\n/**\n * Convert a list of CharString operations to bytes.\n * @param {Array}\n * @returns {Array}\n */\nencode.CHARSTRING = function(ops) {\n    // See encode.MACSTRING for why we don't do \"if (wmm && wmm.has(ops))\".\n    if (wmm) {\n        const cachedValue = wmm.get(ops);\n        if (cachedValue !== undefined) {\n            return cachedValue;\n        }\n    }\n\n    let d = [];\n    const length = ops.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n/**\n * Convert an object containing name / type / value to bytes.\n * @param {Object}\n * @returns {Array}\n */\nencode.OBJECT = function(v) {\n    const encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.OBJECT = function(v) {\n    const sizeOfFunction = sizeOf[v.type];\n    check.argument(sizeOfFunction !== undefined, 'No sizeOf function for type ' + v.type);\n    return sizeOfFunction(v.value);\n};\n\n/**\n * Convert a table object to bytes.\n * A table contains a list of fields containing the metadata (name, type and default value).\n * The table itself has the field values set as attributes.\n * @param {opentype.Table}\n * @returns {Array}\n */\nencode.TABLE = function(table) {\n    let d = [];\n    const length = table.fields.length;\n    const subtables = [];\n    const subtableOffsets = [];\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        const bytes = encodingFunction(value);\n\n        if (field.type === 'TABLE') {\n            subtableOffsets.push(d.length);\n            d = d.concat([0, 0]);\n            subtables.push(bytes);\n        } else {\n            d = d.concat(bytes);\n        }\n    }\n\n    for (let i = 0; i < subtables.length; i += 1) {\n        const o = subtableOffsets[i];\n        const offset = d.length;\n        check.argument(offset < 65536, 'Table ' + table.tableName + ' too big.');\n        d[o] = offset >> 8;\n        d[o + 1] = offset & 0xff;\n        d = d.concat(subtables[i]);\n    }\n\n    return d;\n};\n\n/**\n * @param {opentype.Table}\n * @returns {number}\n */\nsizeOf.TABLE = function(table) {\n    let numBytes = 0;\n    const length = table.fields.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const sizeOfFunction = sizeOf[field.type];\n        check.argument(sizeOfFunction !== undefined, 'No sizeOf function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        numBytes += sizeOfFunction(value);\n\n        // Subtables take 2 more bytes for offsets.\n        if (field.type === 'TABLE') {\n            numBytes += 2;\n        }\n    }\n\n    return numBytes;\n};\n\nencode.RECORD = encode.TABLE;\nsizeOf.RECORD = sizeOf.TABLE;\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexport { decode, encode, sizeOf };\n","// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction parseCmapTableFormat12(cmap, p) {\n    //Skip reserved.\n    p.parseUShort();\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseULong();\n    cmap.language = p.parseULong();\n\n    let groupCount;\n    cmap.groupCount = groupCount = p.parseULong();\n    cmap.glyphIndexMap = {};\n\n    for (let i = 0; i < groupCount; i += 1) {\n        const startCharCode = p.parseULong();\n        const endCharCode = p.parseULong();\n        let startGlyphId = p.parseULong();\n\n        for (let c = startCharCode; c <= endCharCode; c += 1) {\n            cmap.glyphIndexMap[c] = startGlyphId;\n            startGlyphId++;\n        }\n    }\n}\n\nfunction parseCmapTableFormat4(cmap, p, data, start, offset) {\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    let segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n    const endCountParser = new parse.Parser(data, start + offset + 14);\n    const startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    const idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    const idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    let glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (let i = 0; i < segCount - 1; i += 1) {\n        let glyphIndex;\n        const endCount = endCountParser.parseUShort();\n        const startCount = startCountParser.parseUShort();\n        const idDelta = idDeltaParser.parseShort();\n        const idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (let c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n}\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4 and 12.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    const cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 0\" (Unicode format) and \"platform 3\" (Windows format) table.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    let offset = -1;\n    for (let i = cmap.numTables - 1; i >= 0; i -= 1) {\n        const platformId = parse.getUShort(data, start + 4 + (i * 8));\n        const encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if ((platformId === 3 && (encodingId === 0 || encodingId === 1 || encodingId === 10)) ||\n            (platformId === 0 && (encodingId === 0 || encodingId === 1 || encodingId === 2 || encodingId === 3 || encodingId === 4))) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support.\n        throw new Error('No valid cmap sub-tables found.');\n    }\n\n    const p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n\n    if (cmap.format === 12) {\n        parseCmapTableFormat12(cmap, p);\n    } else if (cmap.format === 4) {\n        parseCmapTableFormat4(cmap, p, data, start, offset);\n    } else {\n        throw new Error('Only format 4 and 12 cmap tables are supported (found format ' + cmap.format + ').');\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0,\n        glyphIndex: glyphIndex\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\n// Make cmap table, format 4 by default, 12 if needed only\nfunction makeCmapTable(glyphs) {\n    // Plan 0 is the base Unicode Plan but emojis, for example are on another plan, and needs cmap 12 format (with 32bit)\n    let isPlan0Only = true;\n    let i;\n\n    // Check if we need to add cmap format 12 or if format 4 only is fine\n    for (i = glyphs.length - 1; i > 0; i -= 1) {\n        const g = glyphs.get(i);\n        if (g.unicode > 65535) {\n            console.log('Adding CMAP format 12 (needed!)');\n            isPlan0Only = false;\n            break;\n        }\n    }\n\n    let cmapTable = [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: isPlan0Only ? 1 : 2},\n\n        // CMAP 4 header\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: isPlan0Only ? 12 : (12 + 8)}\n    ];\n\n    if (!isPlan0Only)\n        cmapTable = cmapTable.concat([\n            // CMAP 12 header\n            {name: 'cmap12PlatformID', type: 'USHORT', value: 3}, // We encode only for PlatformID = 3 (Windows) because it is supported everywhere\n            {name: 'cmap12EncodingID', type: 'USHORT', value: 10},\n            {name: 'cmap12Offset', type: 'ULONG', value: 0}\n        ]);\n\n    cmapTable = cmapTable.concat([\n        // CMAP 4 Subtable\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'cmap4Length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    const t = new table.Table('cmap', cmapTable);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        for (let j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function (a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    const segCount = t.segments.length;\n    let segCountToRemove = 0;\n\n    // CMAP 4\n    // Set up parallel segment arrays.\n    let endCounts = [];\n    let startCounts = [];\n    let idDeltas = [];\n    let idRangeOffsets = [];\n    let glyphIds = [];\n\n    // CMAP 12\n    let cmap12Groups = [];\n\n    // Reminder this loop is not following the specification at 100%\n    // The specification -> find suites of characters and make a group\n    // Here we're doing one group for each letter\n    // Doing as the spec can save 8 times (or more) space\n    for (i = 0; i < segCount; i += 1) {\n        const segment = t.segments[i];\n\n        // CMAP 4\n        if (segment.end <= 65535 && segment.start <= 65535) {\n            endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n            startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n            idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n            idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n            if (segment.glyphId !== undefined) {\n                glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n            }\n        } else {\n            // Skip Unicode > 65535 (16bit unsigned max) for CMAP 4, will be added in CMAP 12\n            segCountToRemove += 1;\n        }\n\n        // CMAP 12\n        // Skip Terminator Segment\n        if (!isPlan0Only && segment.glyphIndex !== undefined) {\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12Start_' + i, type: 'ULONG', value: segment.start});\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12End_' + i, type: 'ULONG', value: segment.end});\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12Glyph_' + i, type: 'ULONG', value: segment.glyphIndex});\n        }\n    }\n\n    // CMAP 4 Subtable\n    t.segCountX2 = (segCount - segCountToRemove) * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log((segCount - segCountToRemove)) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.cmap4Length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    if (!isPlan0Only) {\n        // CMAP 12 Subtable\n        const cmap12Length = 16 + // Subtable header\n            cmap12Groups.length * 4;\n\n        t.cmap12Offset = 12 + (2 * 2) + 4 + t.cmap4Length;\n        t.fields = t.fields.concat([\n            {name: 'cmap12Format', type: 'USHORT', value: 12},\n            {name: 'cmap12Reserved', type: 'USHORT', value: 0},\n            {name: 'cmap12Length', type: 'ULONG', value: cmap12Length},\n            {name: 'cmap12Language', type: 'ULONG', value: 0},\n            {name: 'cmap12nGroups', type: 'ULONG', value: cmap12Groups.length / 3}\n        ]);\n\n        t.fields = t.fields.concat(cmap12Groups);\n    }\n\n    return t;\n}\n\nexport default { parse: parseCmapTable, make: makeCmapTable };\n","// Parsing utility functions\n\nimport check from './check';\n\n// Retrieve an unsigned byte from the DataView.\nfunction getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getUShort(dataView, offset) {\n    return dataView.getUint16(offset, false);\n}\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getShort(dataView, offset) {\n    return dataView.getInt16(offset, false);\n}\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nfunction getULong(dataView, offset) {\n    return dataView.getUint32(offset, false);\n}\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nfunction getFixed(dataView, offset) {\n    const decimal = dataView.getInt16(offset, false);\n    const fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n}\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nfunction getTag(dataView, offset) {\n    let tag = '';\n    for (let i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n}\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nfunction getOffset(dataView, offset, offSize) {\n    let v = 0;\n    for (let i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n}\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nfunction getBytes(dataView, startOffset, endOffset) {\n    const bytes = [];\n    for (let i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n}\n\n// Convert the list of bytes to a string.\nfunction bytesToString(bytes) {\n    let s = '';\n    for (let i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n}\n\nconst typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    const v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    const v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    const v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    const v = getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset32 = Parser.prototype.parseULong;\n\nParser.prototype.parseFixed = function() {\n    const v = getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseString = function(length) {\n    const dataView = this.data;\n    const offset = this.offset + this.relativeOffset;\n    let string = '';\n    this.relativeOffset += length;\n    for (let i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\n// + Since until 2038 those bits will be filled by zeros we can ignore them.\nParser.prototype.parseLongDateTime = function() {\n    let v = getULong(this.data, this.offset + this.relativeOffset + 4);\n    // Subtract seconds between 01/01/1904 and 01/01/1970\n    // to convert Apple Mac timestamp to Standard Unix timestamp\n    v -= 2082844800;\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseVersion = function(minorBase) {\n    const major = getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // Default returns the correct number if minor = 0xN000 where N is 0-9\n    // Set minorBase to 1 for tables that use minor = N where N is 0-9\n    const minor = getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    if (minorBase === undefined) minorBase = 0x1000;\n    return major + minor / minorBase / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\n///// Parsing lists and records ///////////////////////////////\n\n// Parse a list of 32 bit unsigned integers.\nParser.prototype.parseULongList = function(count) {\n    if (count === undefined) { count = this.parseULong(); }\n    const offsets = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint32(offset);\n        offset += 4;\n    }\n\n    this.relativeOffset += count * 4;\n    return offsets;\n};\n\n// Parse a list of 16 bit unsigned integers. The length of the list can be read on the stream\n// or provided as an argument.\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    if (count === undefined) { count = this.parseUShort(); }\n    const offsets = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\n// Parses a list of 16 bit signed integers.\nParser.prototype.parseShortList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getInt16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return list;\n};\n\n// Parses a list of bytes.\nParser.prototype.parseByteList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getUint8(offset++);\n    }\n\n    this.relativeOffset += count;\n    return list;\n};\n\n/**\n * Parse a list of items.\n * Record count is optional, if omitted it is read from the stream.\n * itemCallback is one of the Parser methods.\n */\nParser.prototype.parseList = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseUShort();\n    }\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\nParser.prototype.parseList32 = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseULong();\n    }\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\n/**\n * Parse a list of records.\n * Record count is optional, if omitted it is read from the stream.\n * Example of recordDescription: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\n */\nParser.prototype.parseRecordList = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseUShort();\n    }\n    const records = new Array(count);\n    const fields = Object.keys(recordDescription);\n    for (let i = 0; i < count; i++) {\n        const rec = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\nParser.prototype.parseRecordList32 = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseULong();\n    }\n    const records = new Array(count);\n    const fields = Object.keys(recordDescription);\n    for (let i = 0; i < count; i++) {\n        const rec = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\n// Parse a data structure into an object\n// Example of description: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\nParser.prototype.parseStruct = function(description) {\n    if (typeof description === 'function') {\n        return description.call(this);\n    } else {\n        const fields = Object.keys(description);\n        const struct = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = description[fieldName];\n            struct[fieldName] = fieldType.call(this);\n        }\n        return struct;\n    }\n};\n\n/**\n * Parse a GPOS valueRecord\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat is optional, if omitted it is read from the stream.\n */\nParser.prototype.parseValueRecord = function(valueFormat) {\n    if (valueFormat === undefined) {\n        valueFormat = this.parseUShort();\n    }\n    if (valueFormat === 0) {\n        // valueFormat2 in kerning pairs is most often 0\n        // in this case return undefined instead of an empty object, to save space\n        return;\n    }\n    const valueRecord = {};\n\n    if (valueFormat & 0x0001) { valueRecord.xPlacement = this.parseShort(); }\n    if (valueFormat & 0x0002) { valueRecord.yPlacement = this.parseShort(); }\n    if (valueFormat & 0x0004) { valueRecord.xAdvance = this.parseShort(); }\n    if (valueFormat & 0x0008) { valueRecord.yAdvance = this.parseShort(); }\n\n    // Device table (non-variable font) / VariationIndex table (variable font) not supported\n    // https://docs.microsoft.com/fr-fr/typography/opentype/spec/chapter2#devVarIdxTbls\n    if (valueFormat & 0x0010) { valueRecord.xPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0020) { valueRecord.yPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0040) { valueRecord.xAdvDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0080) { valueRecord.yAdvDevice = undefined; this.parseShort(); }\n\n    return valueRecord;\n};\n\n/**\n * Parse a list of GPOS valueRecords\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat and valueCount are read from the stream.\n */\nParser.prototype.parseValueRecordList = function() {\n    const valueFormat = this.parseUShort();\n    const valueCount = this.parseUShort();\n    const values = new Array(valueCount);\n    for (let i = 0; i < valueCount; i++) {\n        values[i] = this.parseValueRecord(valueFormat);\n    }\n    return values;\n};\n\nParser.prototype.parsePointer = function(description) {\n    const structOffset = this.parseOffset16();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\nParser.prototype.parsePointer32 = function(description) {\n    const structOffset = this.parseOffset32();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\n/**\n * Parse a list of offsets to lists of 16-bit integers,\n * or a list of offsets to lists of offsets to any kind of items.\n * If itemCallback is not provided, a list of list of UShort is assumed.\n * If provided, itemCallback is called on each item and must parse the item.\n * See examples in tables/gsub.js\n */\nParser.prototype.parseListOfLists = function(itemCallback) {\n    const offsets = this.parseOffset16List();\n    const count = offsets.length;\n    const relativeOffset = this.relativeOffset;\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const start = offsets[i];\n        if (start === 0) {\n            // NULL offset\n            // Add i as owned property to list. Convenient with assert.\n            list[i] = undefined;\n            continue;\n        }\n        this.relativeOffset = start;\n        if (itemCallback) {\n            const subOffsets = this.parseOffset16List();\n            const subList = new Array(subOffsets.length);\n            for (let j = 0; j < subOffsets.length; j++) {\n                this.relativeOffset = start + subOffsets[j];\n                subList[j] = itemCallback.call(this);\n            }\n            list[i] = subList;\n        } else {\n            list[i] = this.parseUShortList();\n        }\n    }\n    this.relativeOffset = relativeOffset;\n    return list;\n};\n\n///// Complex tables parsing //////////////////////////////////\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n// parser.offset must point to the start of the table containing the coverage.\nParser.prototype.parseCoverage = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    const count = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            glyphs: this.parseUShortList(count)\n        };\n    } else if (format === 2) {\n        const ranges = new Array(count);\n        for (let i = 0; i < count; i++) {\n            ranges[i] = {\n                start: this.parseUShort(),\n                end: this.parseUShort(),\n                index: this.parseUShort()\n            };\n        }\n        return {\n            format: 2,\n            ranges: ranges\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': Coverage format must be 1 or 2.');\n};\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\nParser.prototype.parseClassDef = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            startGlyph: this.parseUShort(),\n            classes: this.parseUShortList()\n        };\n    } else if (format === 2) {\n        return {\n            format: 2,\n            ranges: this.parseRecordList({\n                start: Parser.uShort,\n                end: Parser.uShort,\n                classId: Parser.uShort\n            })\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': ClassDef format must be 1 or 2.');\n};\n\n///// Static methods ///////////////////////////////////\n// These convenience methods can be used as callbacks and should be called with \"this\" context set to a Parser instance.\n\nParser.list = function(count, itemCallback) {\n    return function() {\n        return this.parseList(count, itemCallback);\n    };\n};\n\nParser.list32 = function(count, itemCallback) {\n    return function() {\n        return this.parseList32(count, itemCallback);\n    };\n};\n\nParser.recordList = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList(count, recordDescription);\n    };\n};\n\nParser.recordList32 = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList32(count, recordDescription);\n    };\n};\n\nParser.pointer = function(description) {\n    return function() {\n        return this.parsePointer(description);\n    };\n};\n\nParser.pointer32 = function(description) {\n    return function() {\n        return this.parsePointer32(description);\n    };\n};\n\nParser.tag = Parser.prototype.parseTag;\nParser.byte = Parser.prototype.parseByte;\nParser.uShort = Parser.offset16 = Parser.prototype.parseUShort;\nParser.uShortList = Parser.prototype.parseUShortList;\nParser.uLong = Parser.offset32 = Parser.prototype.parseULong;\nParser.uLongList = Parser.prototype.parseULongList;\nParser.struct = Parser.prototype.parseStruct;\nParser.coverage = Parser.prototype.parseCoverage;\nParser.classDef = Parser.prototype.parseClassDef;\n\n///// Script, Feature, Lookup lists ///////////////////////////////////////////////\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n\nconst langSysTable = {\n    reserved: Parser.uShort,\n    reqFeatureIndex: Parser.uShort,\n    featureIndexes: Parser.uShortList\n};\n\nParser.prototype.parseScriptList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        script: Parser.pointer({\n            defaultLangSys: Parser.pointer(langSysTable),\n            langSysRecords: Parser.recordList({\n                tag: Parser.tag,\n                langSys: Parser.pointer(langSysTable)\n            })\n        })\n    })) || [];\n};\n\nParser.prototype.parseFeatureList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        feature: Parser.pointer({\n            featureParams: Parser.offset16,\n            lookupListIndexes: Parser.uShortList\n        })\n    })) || [];\n};\n\nParser.prototype.parseLookupList = function(lookupTableParsers) {\n    return this.parsePointer(Parser.list(Parser.pointer(function() {\n        const lookupType = this.parseUShort();\n        check.argument(1 <= lookupType && lookupType <= 9, 'GPOS/GSUB lookup type ' + lookupType + ' unknown.');\n        const lookupFlag = this.parseUShort();\n        const useMarkFilteringSet = lookupFlag & 0x10;\n        return {\n            lookupType: lookupType,\n            lookupFlag: lookupFlag,\n            subtables: this.parseList(Parser.pointer(lookupTableParsers[lookupType])),\n            markFilteringSet: useMarkFilteringSet ? this.parseUShort() : undefined\n        };\n    }))) || [];\n};\n\nParser.prototype.parseFeatureVariationsList = function() {\n    return this.parsePointer32(function() {\n        const majorVersion = this.parseUShort();\n        const minorVersion = this.parseUShort();\n        check.argument(majorVersion === 1 && minorVersion < 1, 'GPOS/GSUB feature variations table unknown.');\n        const featureVariations = this.parseRecordList32({\n            conditionSetOffset: Parser.offset32,\n            featureTableSubstitutionOffset: Parser.offset32\n        });\n        return featureVariations;\n    }) || [];\n};\n\nexport default {\n    getByte,\n    getCard8: getByte,\n    getUShort,\n    getCard16: getUShort,\n    getShort,\n    getULong,\n    getFixed,\n    getTag,\n    getOffset,\n    getBytes,\n    bytesToString,\n    Parser,\n};\n\nexport { Parser };\n","// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\nimport { CffEncoding, cffStandardEncoding, cffExpertEncoding, cffStandardStrings } from '../encoding';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\nimport table from '../table';\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (let i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    let bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    const offsets = [];\n    const objects = [];\n    const count = parse.getCard16(data, start);\n    let objectOffset;\n    let endOffset;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        let pos = start + 3;\n        for (let i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (let i = 0; i < offsets.length - 1; i += 1) {\n        let value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    let s = '';\n    const eof = 15;\n    const lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        const b = parser.parseByte();\n        const n1 = b >> 4;\n        const n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    let b1;\n    let b2;\n    let b3;\n    let b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    const o = {};\n    for (let i = 0; i < entries.length; i += 1) {\n        const key = entries[i][0];\n        const values = entries[i][1];\n        let value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key) && !isNaN(o[key])) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    const parser = new parse.Parser(data, start);\n    const entries = [];\n    let operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        let op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    const newDict = {};\n    let value;\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (let i = 0; i < meta.length; i += 1) {\n        const m = meta[i];\n\n        if (Array.isArray(m.type)) {\n            const values = [];\n            values.length = m.type.length;\n            for (let j = 0; j < m.type.length; j++) {\n                value = dict[m.op] !== undefined ? dict[m.op][j] : undefined;\n                if (value === undefined) {\n                    value = m.value !== undefined && m.value[j] !== undefined ? m.value[j] : null;\n                }\n                if (m.type[j] === 'SID') {\n                    value = getCFFString(strings, value);\n                }\n                values[j] = value;\n            }\n            newDict[m.name] = values;\n        } else {\n            value = dict[m.op];\n            if (value === undefined) {\n                value = m.value !== undefined ? m.value : null;\n            }\n\n            if (m.type === 'SID') {\n                value = getCFFString(strings, value);\n            }\n            newDict[m.name] = value;\n        }\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    const header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nconst TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {\n        name: 'fontMatrix',\n        op: 1207,\n        type: ['real', 'real', 'real', 'real', 'real', 'real'],\n        value: [0.001, 0, 0, 0.001, 0, 0]\n    },\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]},\n    {name: 'ros', op: 1230, type: ['SID', 'SID', 'number']},\n    {name: 'cidFontVersion', op: 1231, type: 'number', value: 0},\n    {name: 'cidFontRevision', op: 1232, type: 'number', value: 0},\n    {name: 'cidFontType', op: 1233, type: 'number', value: 0},\n    {name: 'cidCount', op: 1234, type: 'number', value: 8720},\n    {name: 'uidBase', op: 1235, type: 'number'},\n    {name: 'fdArray', op: 1236, type: 'offset'},\n    {name: 'fdSelect', op: 1237, type: 'offset'},\n    {name: 'fontName', op: 1238, type: 'SID'}\n];\n\nconst PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    const dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    const dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Returns a list of \"Top DICT\"s found using an INDEX list.\n// Used to read both the usual high-level Top DICTs and also the FDArray\n// discovered inside CID-keyed fonts.  When a Top DICT has a reference to\n// a Private DICT that is read and saved into the Top DICT.\n//\n// In addition to the expected/optional values as outlined in TOP_DICT_META\n// the following values might be saved into the Top DICT.\n//\n//    _subrs []        array of local CFF subroutines from Private DICT\n//    _subrsBias       bias value computed from number of subroutines\n//                      (see calcCFFSubroutineBias() and parseCFFCharstring())\n//    _defaultWidthX   default widths for CFF characters\n//    _nominalWidthX   bias added to width embedded within glyph description\n//\n//    _privateDict     saved copy of parsed Private DICT from Top DICT\nfunction gatherCFFTopDicts(data, start, cffIndex, strings) {\n    const topDictArray = [];\n    for (let iTopDict = 0; iTopDict < cffIndex.length; iTopDict += 1) {\n        const topDictData = new DataView(new Uint8Array(cffIndex[iTopDict]).buffer);\n        const topDict = parseCFFTopDict(topDictData, strings);\n        topDict._subrs = [];\n        topDict._subrsBias = 0;\n        const privateSize = topDict.private[0];\n        const privateOffset = topDict.private[1];\n        if (privateSize !== 0 && privateOffset !== 0) {\n            const privateDict = parseCFFPrivateDict(data, privateOffset + start, privateSize, strings);\n            topDict._defaultWidthX = privateDict.defaultWidthX;\n            topDict._nominalWidthX = privateDict.nominalWidthX;\n            if (privateDict.subrs !== 0) {\n                const subrOffset = privateOffset + privateDict.subrs;\n                const subrIndex = parseCFFIndex(data, subrOffset + start);\n                topDict._subrs = subrIndex.objects;\n                topDict._subrsBias = calcCFFSubroutineBias(topDict._subrs);\n            }\n            topDict._privateDict = privateDict;\n        }\n        topDictArray.push(topDict);\n    }\n    return topDictArray;\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    let sid;\n    let count;\n    const parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    const charset = ['.notdef'];\n\n    const format = parser.parseCard8();\n    if (format === 0) {\n        for (let i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    let code;\n    const enc = {};\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        const nCodes = parser.parseCard8();\n        for (let i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        const nRanges = parser.parseCard8();\n        code = 1;\n        for (let i = 0; i < nRanges; i += 1) {\n            const first = parser.parseCard8();\n            const nLeft = parser.parseCard8();\n            for (let j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(font, glyph, code) {\n    let c1x;\n    let c1y;\n    let c2x;\n    let c2y;\n    const p = new Path();\n    const stack = [];\n    let nStems = 0;\n    let haveWidth = false;\n    let open = false;\n    let x = 0;\n    let y = 0;\n    let subrs;\n    let subrsBias;\n    let defaultWidthX;\n    let nominalWidthX;\n    if (font.isCIDFont) {\n        const fdIndex = font.tables.cff.topDict._fdSelect[glyph.index];\n        const fdDict = font.tables.cff.topDict._fdArray[fdIndex];\n        subrs = fdDict._subrs;\n        subrsBias = fdDict._subrsBias;\n        defaultWidthX = fdDict._defaultWidthX;\n        nominalWidthX = fdDict._nominalWidthX;\n    } else {\n        subrs = font.tables.cff.topDict._subrs;\n        subrsBias = font.tables.cff.topDict._subrsBias;\n        defaultWidthX = font.tables.cff.topDict._defaultWidthX;\n        nominalWidthX = font.tables.cff.topDict._nominalWidthX;\n    }\n    let width = defaultWidthX;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        let hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        let b1;\n        let b2;\n        let b3;\n        let b4;\n        let codeIndex;\n        let subrCode;\n        let jpx;\n        let jpy;\n        let c3x;\n        let c3y;\n        let c4x;\n        let c4y;\n\n        let i = 0;\n        while (i < code.length) {\n            let v = code[i];\n            i += 1;\n            switch (v) {\n                case 1: // hstem\n                    parseStems();\n                    break;\n                case 3: // vstem\n                    parseStems();\n                    break;\n                case 4: // vmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 5: // rlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 6: // hlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 7: // vlineto\n                    while (stack.length > 0) {\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 8: // rrcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 10: // callsubr\n                    codeIndex = stack.pop() + subrsBias;\n                    subrCode = subrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 11: // return\n                    return;\n                case 12: // flex operators\n                    v = code[i];\n                    i += 1;\n                    switch (v) {\n                        case 35: // flex\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x   + stack.shift();    // dx6\n                            y = c4y   + stack.shift();    // dy6\n                            stack.shift();                // flex depth\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 34: // hflex\n                            // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y;                      // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = y;                      // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 36: // hflex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 37: // flex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                                x = c4x + stack.shift();\n                            } else {\n                                y = c4y + stack.shift();\n                            }\n\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        default:\n                            console.log('Glyph ' + glyph.index + ': unknown operator ' + 1200 + v);\n                            stack.length = 0;\n                    }\n                    break;\n                case 14: // endchar\n                    if (stack.length > 0 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    if (open) {\n                        p.closePath();\n                        open = false;\n                    }\n\n                    break;\n                case 18: // hstemhm\n                    parseStems();\n                    break;\n                case 19: // hintmask\n                case 20: // cntrmask\n                    parseStems();\n                    i += (nStems + 7) >> 3;\n                    break;\n                case 21: // rmoveto\n                    if (stack.length > 2 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 22: // hmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 23: // vstemhm\n                    parseStems();\n                    break;\n                case 24: // rcurveline\n                    while (stack.length > 2) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    break;\n                case 25: // rlinecurve\n                    while (stack.length > 6) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    break;\n                case 26: // vvcurveto\n                    if (stack.length % 2) {\n                        x += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x;\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 27: // hhcurveto\n                    if (stack.length % 2) {\n                        y += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y;\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 28: // shortint\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                    i += 2;\n                    break;\n                case 29: // callgsubr\n                    codeIndex = stack.pop() + font.gsubrsBias;\n                    subrCode = font.gsubrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 30: // vhcurveto\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 31: // hvcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                default:\n                    if (v < 32) {\n                        console.log('Glyph ' + glyph.index + ': unknown operator ' + v);\n                    } else if (v < 247) {\n                        stack.push(v - 139);\n                    } else if (v < 251) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push((v - 247) * 256 + b1 + 108);\n                    } else if (v < 255) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push(-(v - 251) * 256 - b1 - 108);\n                    } else {\n                        b1 = code[i];\n                        b2 = code[i + 1];\n                        b3 = code[i + 2];\n                        b4 = code[i + 3];\n                        i += 4;\n                        stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                    }\n            }\n        }\n    }\n\n    parse(code);\n\n    glyph.advanceWidth = width;\n    return p;\n}\n\nfunction parseCFFFDSelect(data, start, nGlyphs, fdArrayCount) {\n    const fdSelect = [];\n    let fdIndex;\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        // Simple list of nGlyphs elements\n        for (let iGid = 0; iGid < nGlyphs; iGid++) {\n            fdIndex = parser.parseCard8();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            fdSelect.push(fdIndex);\n        }\n    } else if (format === 3) {\n        // Ranges\n        const nRanges = parser.parseCard16();\n        let first = parser.parseCard16();\n        if (first !== 0) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad initial GID ' + first);\n        }\n        let next;\n        for (let iRange = 0; iRange < nRanges; iRange++) {\n            fdIndex = parser.parseCard8();\n            next = parser.parseCard16();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            if (next > nGlyphs) {\n                throw new Error('CFF Table CID Font FDSelect format 3 range has bad GID ' + next);\n            }\n            for (; first < next; first++) {\n                fdSelect.push(fdIndex);\n            }\n            first = next;\n        }\n        if (next !== nGlyphs) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad final GID ' + next);\n        }\n    } else {\n        throw new Error('CFF Table CID Font FDSelect table has unsupported format ' + format);\n    }\n    return fdSelect;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    const header = parseCFFHeader(data, start);\n    const nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    const topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    const stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    const globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    const topDictArray = gatherCFFTopDicts(data, start, topDictIndex.objects, stringIndex.objects);\n    if (topDictArray.length !== 1) {\n        throw new Error('CFF table has too many fonts in \\'FontSet\\' - count of fonts NameIndex.length = ' + topDictArray.length);\n    }\n\n    const topDict = topDictArray[0];\n    font.tables.cff.topDict = topDict;\n\n    if (topDict._privateDict) {\n        font.defaultWidthX = topDict._privateDict.defaultWidthX;\n        font.nominalWidthX = topDict._privateDict.nominalWidthX;\n    }\n\n    if (topDict.ros[0] !== undefined && topDict.ros[1] !== undefined) {\n        font.isCIDFont = true;\n    }\n\n    if (font.isCIDFont) {\n        let fdArrayOffset = topDict.fdArray;\n        let fdSelectOffset = topDict.fdSelect;\n        if (fdArrayOffset === 0 || fdSelectOffset === 0) {\n            throw new Error('Font is marked as a CID font, but FDArray and/or FDSelect information is missing');\n        }\n        fdArrayOffset += start;\n        const fdArrayIndex = parseCFFIndex(data, fdArrayOffset);\n        const fdArray = gatherCFFTopDicts(data, start, fdArrayIndex.objects, stringIndex.objects);\n        topDict._fdArray = fdArray;\n        fdSelectOffset += start;\n        topDict._fdSelect = parseCFFFDSelect(data, fdSelectOffset, font.numGlyphs, fdArray.length);\n    }\n\n    const privateDictOffset = start + topDict.private[1];\n    const privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict.private[0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        const subrOffset = privateDictOffset + privateDict.subrs;\n        const subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    const charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    const charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) {\n        // Standard encoding\n        font.cffEncoding = new CffEncoding(cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) {\n        // Expert encoding\n        font.cffEncoding = new CffEncoding(cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = new glyphset.GlyphSet(font);\n    for (let i = 0; i < font.nGlyphs; i += 1) {\n        const charString = charStringsIndex.objects[i];\n        font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    let sid;\n\n    // Is the string in the CFF standard strings?\n    let i = cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + cffStandardStrings.length;\n    } else {\n        sid = cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Record('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    const t = new table.Record('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (let i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    const m = {};\n    for (let i = 0; i < meta.length; i += 1) {\n        const entry = meta[i];\n        let value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    const t = new table.Record('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    const t = new table.Record('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    const t = new table.Record('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (let i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Record('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    const t = new table.Record('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (let i = 0; i < glyphNames.length; i += 1) {\n        const glyphName = glyphNames[i];\n        const glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    const ops = [];\n    const path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    let x = 0;\n    let y = 0;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        let dx;\n        let dy;\n        let cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            const _13 = 1 / 3;\n            const _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            const dx1 = Math.round(cmd.x1 - x);\n            const dy1 = Math.round(cmd.y1 - y);\n            const dx2 = Math.round(cmd.x2 - cmd.x1);\n            const dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    const t = new table.Record('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    const t = new table.Record('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    const t = new table.Table('CFF ', [\n        {name: 'header', type: 'RECORD'},\n        {name: 'nameIndex', type: 'RECORD'},\n        {name: 'topDictIndex', type: 'RECORD'},\n        {name: 'stringIndex', type: 'RECORD'},\n        {name: 'globalSubrIndex', type: 'RECORD'},\n        {name: 'charsets', type: 'RECORD'},\n        {name: 'charStringsIndex', type: 'RECORD'},\n        {name: 'privateDict', type: 'RECORD'}\n    ]);\n\n    const fontScale = 1 / options.unitsPerEm;\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    const attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        fontBBox: options.fontBBox || [0, 0, 0, 0],\n        fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    const privateAttrs = {};\n\n    const glyphNames = [];\n    let glyph;\n\n    // Skip first glyph (.notdef)\n    for (let i = 1; i < glyphs.length; i += 1) {\n        glyph = glyphs.get(i);\n        glyphNames.push(glyph.name);\n    }\n\n    const strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    let topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    t.privateDict = makePrivateDict(privateAttrs, strings);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    const startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexport default { parse: parseCFFTable, make: makeCFFTable };\n","// Glyph encoding\n\nconst cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nconst cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nconst cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nconst standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n/**\n * This is the encoding used for fonts created from scratch.\n * It loops through all glyphs and finds the appropriate unicode value.\n * Since it's linear time, other encodings will be faster.\n * @exports opentype.DefaultEncoding\n * @class\n * @constructor\n * @param {opentype.Font}\n */\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    const code = c.codePointAt(0);\n    const glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (let i = 0; i < glyphs.length; i += 1) {\n            const glyph = glyphs.get(i);\n            for (let j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    }\n    return null;\n};\n\n/**\n * @exports opentype.CmapEncoding\n * @class\n * @constructor\n * @param {Object} cmap - a object with the cmap encoded data\n */\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\n/**\n * @param  {string} c - the character\n * @return {number} The glyph index.\n */\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.codePointAt(0)] || 0;\n};\n\n/**\n * @exports opentype.CffEncoding\n * @class\n * @constructor\n * @param {string} encoding - The encoding\n * @param {Array} charset - The character set.\n */\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\n/**\n * @param  {string} s - The character\n * @return {number} The index.\n */\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    const code = s.codePointAt(0);\n    const charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\n/**\n * @exports opentype.GlyphNames\n * @class\n * @constructor\n * @param {Object} post\n */\nfunction GlyphNames(post) {\n    switch (post.version) {\n        case 1:\n            this.names = standardNames.slice();\n            break;\n        case 2:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] < standardNames.length) {\n                    this.names[i] = standardNames[post.glyphNameIndex[i]];\n                } else {\n                    this.names[i] = post.names[post.glyphNameIndex[i] - standardNames.length];\n                }\n            }\n\n            break;\n        case 2.5:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                this.names[i] = standardNames[i + post.glyphNameIndex[i]];\n            }\n\n            break;\n        case 3:\n            this.names = [];\n            break;\n        default:\n            this.names = [];\n            break;\n    }\n}\n\n/**\n * Gets the index of a glyph by name.\n * @param  {string} name - The glyph name\n * @return {number} The index\n */\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\n/**\n * @param  {number} gid\n * @return {string}\n */\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\n/**\n * @alias opentype.addGlyphNames\n * @param {opentype.Font}\n */\nfunction addGlyphNames(font) {\n    let glyph;\n    const glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    const charCodes = Object.keys(glyphIndexMap);\n\n    for (let i = 0; i < charCodes.length; i += 1) {\n        const c = charCodes[i];\n        const glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs.get(glyphIndex);\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs.get(i);\n        if (font.cffEncoding) {\n            if (font.isCIDFont) {\n                glyph.name = 'gid' + i;\n            } else {\n                glyph.name = font.cffEncoding.charset[i];\n            }\n        } else if (font.glyphNames.names) {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexport {\n    cffStandardStrings,\n    cffStandardEncoding,\n    cffExpertEncoding,\n    standardNames,\n    DefaultEncoding,\n    CmapEncoding,\n    CffEncoding,\n    GlyphNames,\n    addGlyphNames\n};\n","// The GlyphSet object\n\nimport Glyph from './glyph';\n\n// Define a property on the glyph that depends on the path being loaded.\nfunction defineDependentProperty(glyph, externalName, internalName) {\n    Object.defineProperty(glyph, externalName, {\n        get: function() {\n            // Request the path property to make sure the path is loaded.\n            glyph.path; // jshint ignore:line\n            return glyph[internalName];\n        },\n        set: function(newValue) {\n            glyph[internalName] = newValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n}\n\n/**\n * A GlyphSet represents all glyphs available in the font, but modelled using\n * a deferred glyph loader, for retrieving glyphs only once they are absolutely\n * necessary, to keep the memory footprint down.\n * @exports opentype.GlyphSet\n * @class\n * @param {opentype.Font}\n * @param {Array}\n */\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (let i = 0; i < glyphs.length; i++) {\n            this.glyphs[i] = glyphs[i];\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\n/**\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nGlyphSet.prototype.get = function(index) {\n    if (typeof this.glyphs[index] === 'function') {\n        this.glyphs[index] = this.glyphs[index]();\n    }\n\n    return this.glyphs[index];\n};\n\n/**\n * @param  {number} index\n * @param  {Object}\n */\nGlyphSet.prototype.push = function(index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\n/**\n * @alias opentype.glyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nfunction glyphLoader(font, index) {\n    return new Glyph({index: index, font: font});\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n * @alias opentype.ttfGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseGlyph\n * @param  {Object} data\n * @param  {number} position\n * @param  {Function} buildPath\n * @return {opentype.Glyph}\n */\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            parseGlyph(glyph, data, position);\n            const path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        defineDependentProperty(glyph, 'xMin', '_xMin');\n        defineDependentProperty(glyph, 'xMax', '_xMax');\n        defineDependentProperty(glyph, 'yMin', '_yMin');\n        defineDependentProperty(glyph, 'yMax', '_yMax');\n\n        return glyph;\n    };\n}\n/**\n * @alias opentype.cffGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseCFFCharstring\n * @param  {string} charstring\n * @return {opentype.Glyph}\n */\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            const path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nexport default { GlyphSet, glyphLoader, ttfGlyphLoader, cffGlyphLoader };\n","// The Glyph object\n\nimport check from './check';\nimport draw from './draw';\nimport Path from './path';\n// import glyf from './tables/glyf' Can't be imported here, because it's a circular dependency\n\nfunction getPathDefinition(glyph, path) {\n    let _path = path || new Path();\n    return {\n        configurable: true,\n\n        get: function() {\n            if (typeof _path === 'function') {\n                _path = _path();\n            }\n\n            return _path;\n        },\n\n        set: function(p) {\n            _path = p;\n        }\n    };\n}\n/**\n * @typedef GlyphOptions\n * @type Object\n * @property {string} [name] - The glyph name\n * @property {number} [unicode]\n * @property {Array} [unicodes]\n * @property {number} [xMin]\n * @property {number} [yMin]\n * @property {number} [xMax]\n * @property {number} [yMax]\n * @property {number} [advanceWidth]\n */\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\n/**\n * @exports opentype.Glyph\n * @class\n * @param {GlyphOptions}\n * @constructor\n */\nfunction Glyph(options) {\n    // By putting all the code on a prototype function (which is only declared once)\n    // we reduce the memory requirements for larger fonts by some 2%\n    this.bindConstructorValues(options);\n}\n\n/**\n * @param  {GlyphOptions}\n */\nGlyph.prototype.bindConstructorValues = function(options) {\n    this.index = options.index || 0;\n\n    // These three values cannot be deferred for memory optimization:\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n\n    // But by binding these values only when necessary, we reduce can\n    // the memory requirements by almost 3% for larger fonts.\n    if (options.xMin) {\n        this.xMin = options.xMin;\n    }\n\n    if (options.yMin) {\n        this.yMin = options.yMin;\n    }\n\n    if (options.xMax) {\n        this.xMax = options.xMax;\n    }\n\n    if (options.yMax) {\n        this.yMax = options.yMax;\n    }\n\n    if (options.advanceWidth) {\n        this.advanceWidth = options.advanceWidth;\n    }\n\n    // The path for a glyph is the most memory intensive, and is bound as a value\n    // with a getter/setter to ensure we actually do path parsing only once the\n    // path is actually needed by anything.\n    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n};\n\n/**\n * @param {number}\n */\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n/**\n * Calculate the minimum bounding box for this glyph.\n * @return {opentype.BoundingBox}\n */\nGlyph.prototype.getBoundingBox = function() {\n    return this.path.getBoundingBox();\n};\n\n/**\n * Convert the glyph to a Path we can draw on a drawing context.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n * @param  {opentype.Font} if hinting is to be used, the font\n * @return {opentype.Path}\n */\nGlyph.prototype.getPath = function(x, y, fontSize, options, font) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    let commands;\n    let hPoints;\n    if (!options) options = { };\n    let xScale = options.xScale;\n    let yScale = options.yScale;\n\n    if (options.hinting && font && font.hinting) {\n        // in case of hinting, the hinting engine takes care\n        // of scaling the points (not the path) before hinting.\n        hPoints = this.path && font.hinting.exec(this, fontSize);\n        // in case the hinting engine failed hPoints is undefined\n        // and thus reverts to plain rending\n    }\n\n    if (hPoints) {\n        // Call font.hinting.getCommands instead of `glyf.getPath(hPoints).commands` to avoid a circular dependency\n        commands = font.hinting.getCommands(hPoints);\n        x = Math.round(x);\n        y = Math.round(y);\n        // TODO in case of hinting xyScaling is not yet supported\n        xScale = yScale = 1;\n    } else {\n        commands = this.path.commands;\n        const scale = 1 / this.path.unitsPerEm * fontSize;\n        if (xScale === undefined) xScale = scale;\n        if (yScale === undefined) yScale = scale;\n    }\n\n    const p = new Path();\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                               x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                      x + (cmd.x2 * xScale), y + (-cmd.y2 * yScale),\n                      x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n/**\n * Split the glyph into contours.\n * This function is here for backwards compatibility, and to\n * provide raw access to the TrueType glyph outlines.\n * @return {Array}\n */\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < this.points.length; i += 1) {\n        const pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n/**\n * Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\n * @return {Object}\n */\nGlyph.prototype.getMetrics = function() {\n    const commands = this.path.commands;\n    const xCoords = [];\n    const yCoords = [];\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    const metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: this.leftSideBearing\n    };\n\n    if (!isFinite(metrics.xMin)) {\n        metrics.xMin = 0;\n    }\n\n    if (!isFinite(metrics.xMax)) {\n        metrics.xMax = this.advanceWidth;\n    }\n\n    if (!isFinite(metrics.yMin)) {\n        metrics.yMin = 0;\n    }\n\n    if (!isFinite(metrics.yMax)) {\n        metrics.yMax = 0;\n    }\n\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n/**\n * Draw the glyph on the given context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n */\nGlyph.prototype.draw = function(ctx, x, y, fontSize, options) {\n    this.getPath(x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of the glyph.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n    function drawCircles(l, x, y, scale) {\n        const PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (let j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    const scale = 1 / this.path.unitsPerEm * fontSize;\n\n    const blueCircles = [];\n    const redCircles = [];\n    const path = this.path;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        const cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n/**\n * Draw lines indicating important font measurements.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    let scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.path.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // This code is here due to memory optimization: by not using\n    // defaults in the constructor, we save a notable amount of memory.\n    const xMin = this.xMin || 0;\n    let yMin = this.yMin || 0;\n    const xMax = this.xMax || 0;\n    let yMax = this.yMax || 0;\n    const advanceWidth = this.advanceWidth || 0;\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (xMin * scale), -10000, x + (xMin * scale), 10000);\n    draw.line(ctx, x + (xMax * scale), -10000, x + (xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-yMin * scale), 10000, y + (-yMin * scale));\n    draw.line(ctx, -10000, y + (-yMax * scale), 10000, y + (-yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (advanceWidth * scale), -10000, x + (advanceWidth * scale), 10000);\n};\n\nexport default Glyph;\n","// Drawing utility functions.\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexport default { line };\n","// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    const head = {};\n    const p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    // Apple Mac timestamp epoch is 01/01/1904 not 01/01/1970\n    const timestamp = Math.round(new Date().getTime() / 1000) + 2082844800;\n    let createdTimestamp = timestamp;\n\n    if (options.createdTimestamp) {\n        createdTimestamp = options.createdTimestamp + 2082844800;\n    }\n\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: createdTimestamp},\n        {name: 'modified', type: 'LONGDATETIME', value: timestamp},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHeadTable, make: makeHeadTable };\n","// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    const hhea = {};\n    const p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHheaTable, make: makeHheaTable };\n","// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    let advanceWidth;\n    let leftSideBearing;\n    const p = new parse.Parser(data, start);\n    for (let i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        const glyph = glyphs.get(i);\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    const t = new table.Table('hmtx', []);\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const advanceWidth = glyph.advanceWidth || 0;\n        const leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexport default { parse: parseHmtxTable, make: makeHmtxTable };\n","// The `ltag` table stores IETF BCP-47 language tags. It allows supporting\n// languages for which TrueType does not assign a numeric code.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6ltag.html\n// http://www.w3.org/International/articles/language-tags/\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction makeLtagTable(tags) {\n    const result = new table.Table('ltag', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'numTags', type: 'ULONG', value: tags.length}\n    ]);\n\n    let stringPool = '';\n    const stringPoolOffset = 12 + tags.length * 4;\n    for (let i = 0; i < tags.length; ++i) {\n        let pos = stringPool.indexOf(tags[i]);\n        if (pos < 0) {\n            pos = stringPool.length;\n            stringPool += tags[i];\n        }\n\n        result.fields.push({name: 'offset ' + i, type: 'USHORT', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + i, type: 'USHORT', value: tags[i].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n    return result;\n}\n\nfunction parseLtagTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported ltag table version.');\n    // The 'ltag' specification does not define any flags; skip the field.\n    p.skip('uLong', 1);\n    const numTags = p.parseULong();\n\n    const tags = [];\n    for (let i = 0; i < numTags; i++) {\n        let tag = '';\n        const offset = start + p.parseUShort();\n        const length = p.parseUShort();\n        for (let j = offset; j < offset + length; ++j) {\n            tag += String.fromCharCode(data.getInt8(j));\n        }\n\n        tags.push(tag);\n    }\n\n    return tags;\n}\n\nexport default { make: makeLtagTable, parse: parseLtagTable };\n","// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    const maxp = {};\n    const p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexport default { parse: parseMaxpTable, make: makeMaxpTable };\n","// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\nimport { decode, encode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// NameIDs for the name table.\nconst nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'license',                // 13\n    'licenseURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\nconst macLanguages = {\n    0: 'en',\n    1: 'fr',\n    2: 'de',\n    3: 'it',\n    4: 'nl',\n    5: 'sv',\n    6: 'es',\n    7: 'da',\n    8: 'pt',\n    9: 'no',\n    10: 'he',\n    11: 'ja',\n    12: 'ar',\n    13: 'fi',\n    14: 'el',\n    15: 'is',\n    16: 'mt',\n    17: 'tr',\n    18: 'hr',\n    19: 'zh-Hant',\n    20: 'ur',\n    21: 'hi',\n    22: 'th',\n    23: 'ko',\n    24: 'lt',\n    25: 'pl',\n    26: 'hu',\n    27: 'es',\n    28: 'lv',\n    29: 'se',\n    30: 'fo',\n    31: 'fa',\n    32: 'ru',\n    33: 'zh',\n    34: 'nl-BE',\n    35: 'ga',\n    36: 'sq',\n    37: 'ro',\n    38: 'cz',\n    39: 'sk',\n    40: 'si',\n    41: 'yi',\n    42: 'sr',\n    43: 'mk',\n    44: 'bg',\n    45: 'uk',\n    46: 'be',\n    47: 'uz',\n    48: 'kk',\n    49: 'az-Cyrl',\n    50: 'az-Arab',\n    51: 'hy',\n    52: 'ka',\n    53: 'mo',\n    54: 'ky',\n    55: 'tg',\n    56: 'tk',\n    57: 'mn-CN',\n    58: 'mn',\n    59: 'ps',\n    60: 'ks',\n    61: 'ku',\n    62: 'sd',\n    63: 'bo',\n    64: 'ne',\n    65: 'sa',\n    66: 'mr',\n    67: 'bn',\n    68: 'as',\n    69: 'gu',\n    70: 'pa',\n    71: 'or',\n    72: 'ml',\n    73: 'kn',\n    74: 'ta',\n    75: 'te',\n    76: 'si',\n    77: 'my',\n    78: 'km',\n    79: 'lo',\n    80: 'vi',\n    81: 'id',\n    82: 'tl',\n    83: 'ms',\n    84: 'ms-Arab',\n    85: 'am',\n    86: 'ti',\n    87: 'om',\n    88: 'so',\n    89: 'sw',\n    90: 'rw',\n    91: 'rn',\n    92: 'ny',\n    93: 'mg',\n    94: 'eo',\n    128: 'cy',\n    129: 'eu',\n    130: 'ca',\n    131: 'la',\n    132: 'qu',\n    133: 'gn',\n    134: 'ay',\n    135: 'tt',\n    136: 'ug',\n    137: 'dz',\n    138: 'jv',\n    139: 'su',\n    140: 'gl',\n    141: 'af',\n    142: 'br',\n    143: 'iu',\n    144: 'gd',\n    145: 'gv',\n    146: 'ga',\n    147: 'to',\n    148: 'el-polyton',\n    149: 'kl',\n    150: 'az',\n    151: 'nn'\n};\n\n// MacOS language ID → MacOS script ID\n//\n// Note that the script ID is not sufficient to determine what encoding\n// to use in TrueType files. For some languages, MacOS used a modification\n// of a mainstream script. For example, an Icelandic name would be stored\n// with smRoman in the TrueType naming table, but the actual encoding\n// is a special Icelandic version of the normal Macintosh Roman encoding.\n// As another example, Inuktitut uses an 8-bit encoding for Canadian Aboriginal\n// Syllables but MacOS had run out of available script codes, so this was\n// done as a (pretty radical) \"modification\" of Ethiopic.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageToScript = {\n    0: 0,  // langEnglish → smRoman\n    1: 0,  // langFrench → smRoman\n    2: 0,  // langGerman → smRoman\n    3: 0,  // langItalian → smRoman\n    4: 0,  // langDutch → smRoman\n    5: 0,  // langSwedish → smRoman\n    6: 0,  // langSpanish → smRoman\n    7: 0,  // langDanish → smRoman\n    8: 0,  // langPortuguese → smRoman\n    9: 0,  // langNorwegian → smRoman\n    10: 5,  // langHebrew → smHebrew\n    11: 1,  // langJapanese → smJapanese\n    12: 4,  // langArabic → smArabic\n    13: 0,  // langFinnish → smRoman\n    14: 6,  // langGreek → smGreek\n    15: 0,  // langIcelandic → smRoman (modified)\n    16: 0,  // langMaltese → smRoman\n    17: 0,  // langTurkish → smRoman (modified)\n    18: 0,  // langCroatian → smRoman (modified)\n    19: 2,  // langTradChinese → smTradChinese\n    20: 4,  // langUrdu → smArabic\n    21: 9,  // langHindi → smDevanagari\n    22: 21,  // langThai → smThai\n    23: 3,  // langKorean → smKorean\n    24: 29,  // langLithuanian → smCentralEuroRoman\n    25: 29,  // langPolish → smCentralEuroRoman\n    26: 29,  // langHungarian → smCentralEuroRoman\n    27: 29,  // langEstonian → smCentralEuroRoman\n    28: 29,  // langLatvian → smCentralEuroRoman\n    29: 0,  // langSami → smRoman\n    30: 0,  // langFaroese → smRoman (modified)\n    31: 4,  // langFarsi → smArabic (modified)\n    32: 7,  // langRussian → smCyrillic\n    33: 25,  // langSimpChinese → smSimpChinese\n    34: 0,  // langFlemish → smRoman\n    35: 0,  // langIrishGaelic → smRoman (modified)\n    36: 0,  // langAlbanian → smRoman\n    37: 0,  // langRomanian → smRoman (modified)\n    38: 29,  // langCzech → smCentralEuroRoman\n    39: 29,  // langSlovak → smCentralEuroRoman\n    40: 0,  // langSlovenian → smRoman (modified)\n    41: 5,  // langYiddish → smHebrew\n    42: 7,  // langSerbian → smCyrillic\n    43: 7,  // langMacedonian → smCyrillic\n    44: 7,  // langBulgarian → smCyrillic\n    45: 7,  // langUkrainian → smCyrillic (modified)\n    46: 7,  // langByelorussian → smCyrillic\n    47: 7,  // langUzbek → smCyrillic\n    48: 7,  // langKazakh → smCyrillic\n    49: 7,  // langAzerbaijani → smCyrillic\n    50: 4,  // langAzerbaijanAr → smArabic\n    51: 24,  // langArmenian → smArmenian\n    52: 23,  // langGeorgian → smGeorgian\n    53: 7,  // langMoldavian → smCyrillic\n    54: 7,  // langKirghiz → smCyrillic\n    55: 7,  // langTajiki → smCyrillic\n    56: 7,  // langTurkmen → smCyrillic\n    57: 27,  // langMongolian → smMongolian\n    58: 7,  // langMongolianCyr → smCyrillic\n    59: 4,  // langPashto → smArabic\n    60: 4,  // langKurdish → smArabic\n    61: 4,  // langKashmiri → smArabic\n    62: 4,  // langSindhi → smArabic\n    63: 26,  // langTibetan → smTibetan\n    64: 9,  // langNepali → smDevanagari\n    65: 9,  // langSanskrit → smDevanagari\n    66: 9,  // langMarathi → smDevanagari\n    67: 13,  // langBengali → smBengali\n    68: 13,  // langAssamese → smBengali\n    69: 11,  // langGujarati → smGujarati\n    70: 10,  // langPunjabi → smGurmukhi\n    71: 12,  // langOriya → smOriya\n    72: 17,  // langMalayalam → smMalayalam\n    73: 16,  // langKannada → smKannada\n    74: 14,  // langTamil → smTamil\n    75: 15,  // langTelugu → smTelugu\n    76: 18,  // langSinhalese → smSinhalese\n    77: 19,  // langBurmese → smBurmese\n    78: 20,  // langKhmer → smKhmer\n    79: 22,  // langLao → smLao\n    80: 30,  // langVietnamese → smVietnamese\n    81: 0,  // langIndonesian → smRoman\n    82: 0,  // langTagalog → smRoman\n    83: 0,  // langMalayRoman → smRoman\n    84: 4,  // langMalayArabic → smArabic\n    85: 28,  // langAmharic → smEthiopic\n    86: 28,  // langTigrinya → smEthiopic\n    87: 28,  // langOromo → smEthiopic\n    88: 0,  // langSomali → smRoman\n    89: 0,  // langSwahili → smRoman\n    90: 0,  // langKinyarwanda → smRoman\n    91: 0,  // langRundi → smRoman\n    92: 0,  // langNyanja → smRoman\n    93: 0,  // langMalagasy → smRoman\n    94: 0,  // langEsperanto → smRoman\n    128: 0,  // langWelsh → smRoman (modified)\n    129: 0,  // langBasque → smRoman\n    130: 0,  // langCatalan → smRoman\n    131: 0,  // langLatin → smRoman\n    132: 0,  // langQuechua → smRoman\n    133: 0,  // langGuarani → smRoman\n    134: 0,  // langAymara → smRoman\n    135: 7,  // langTatar → smCyrillic\n    136: 4,  // langUighur → smArabic\n    137: 26,  // langDzongkha → smTibetan\n    138: 0,  // langJavaneseRom → smRoman\n    139: 0,  // langSundaneseRom → smRoman\n    140: 0,  // langGalician → smRoman\n    141: 0,  // langAfrikaans → smRoman\n    142: 0,  // langBreton → smRoman (modified)\n    143: 28,  // langInuktitut → smEthiopic (modified)\n    144: 0,  // langScottishGaelic → smRoman (modified)\n    145: 0,  // langManxGaelic → smRoman (modified)\n    146: 0,  // langIrishGaelicScript → smRoman (modified)\n    147: 0,  // langTongan → smRoman\n    148: 6,  // langGreekAncient → smRoman\n    149: 0,  // langGreenlandic → smRoman\n    150: 0,  // langAzerbaijanRoman → smRoman\n    151: 0   // langNynorsk → smRoman\n};\n\n// While Microsoft indicates a region/country for all its language\n// IDs, we omit the region code if it's equal to the \"most likely\n// region subtag\" according to Unicode CLDR. For scripts, we omit\n// the subtag if it is equal to the Suppress-Script entry in the\n// IANA language subtag registry for IETF BCP 47.\n//\n// For example, Microsoft states that its language code 0x041A is\n// Croatian in Croatia. We transform this to the BCP 47 language code 'hr'\n// and not 'hr-HR' because Croatia is the default country for Croatian,\n// according to Unicode CLDR. As another example, Microsoft states\n// that 0x101A is Croatian (Latin) in Bosnia-Herzegovina. We transform\n// this to 'hr-BA' and not 'hr-Latn-BA' because Latin is the default script\n// for the Croatian language, according to IANA.\n//\n// http://www.unicode.org/cldr/charts/latest/supplemental/likely_subtags.html\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\nconst windowsLanguages = {\n    0x0436: 'af',\n    0x041C: 'sq',\n    0x0484: 'gsw',\n    0x045E: 'am',\n    0x1401: 'ar-DZ',\n    0x3C01: 'ar-BH',\n    0x0C01: 'ar',\n    0x0801: 'ar-IQ',\n    0x2C01: 'ar-JO',\n    0x3401: 'ar-KW',\n    0x3001: 'ar-LB',\n    0x1001: 'ar-LY',\n    0x1801: 'ary',\n    0x2001: 'ar-OM',\n    0x4001: 'ar-QA',\n    0x0401: 'ar-SA',\n    0x2801: 'ar-SY',\n    0x1C01: 'aeb',\n    0x3801: 'ar-AE',\n    0x2401: 'ar-YE',\n    0x042B: 'hy',\n    0x044D: 'as',\n    0x082C: 'az-Cyrl',\n    0x042C: 'az',\n    0x046D: 'ba',\n    0x042D: 'eu',\n    0x0423: 'be',\n    0x0845: 'bn',\n    0x0445: 'bn-IN',\n    0x201A: 'bs-Cyrl',\n    0x141A: 'bs',\n    0x047E: 'br',\n    0x0402: 'bg',\n    0x0403: 'ca',\n    0x0C04: 'zh-HK',\n    0x1404: 'zh-MO',\n    0x0804: 'zh',\n    0x1004: 'zh-SG',\n    0x0404: 'zh-TW',\n    0x0483: 'co',\n    0x041A: 'hr',\n    0x101A: 'hr-BA',\n    0x0405: 'cs',\n    0x0406: 'da',\n    0x048C: 'prs',\n    0x0465: 'dv',\n    0x0813: 'nl-BE',\n    0x0413: 'nl',\n    0x0C09: 'en-AU',\n    0x2809: 'en-BZ',\n    0x1009: 'en-CA',\n    0x2409: 'en-029',\n    0x4009: 'en-IN',\n    0x1809: 'en-IE',\n    0x2009: 'en-JM',\n    0x4409: 'en-MY',\n    0x1409: 'en-NZ',\n    0x3409: 'en-PH',\n    0x4809: 'en-SG',\n    0x1C09: 'en-ZA',\n    0x2C09: 'en-TT',\n    0x0809: 'en-GB',\n    0x0409: 'en',\n    0x3009: 'en-ZW',\n    0x0425: 'et',\n    0x0438: 'fo',\n    0x0464: 'fil',\n    0x040B: 'fi',\n    0x080C: 'fr-BE',\n    0x0C0C: 'fr-CA',\n    0x040C: 'fr',\n    0x140C: 'fr-LU',\n    0x180C: 'fr-MC',\n    0x100C: 'fr-CH',\n    0x0462: 'fy',\n    0x0456: 'gl',\n    0x0437: 'ka',\n    0x0C07: 'de-AT',\n    0x0407: 'de',\n    0x1407: 'de-LI',\n    0x1007: 'de-LU',\n    0x0807: 'de-CH',\n    0x0408: 'el',\n    0x046F: 'kl',\n    0x0447: 'gu',\n    0x0468: 'ha',\n    0x040D: 'he',\n    0x0439: 'hi',\n    0x040E: 'hu',\n    0x040F: 'is',\n    0x0470: 'ig',\n    0x0421: 'id',\n    0x045D: 'iu',\n    0x085D: 'iu-Latn',\n    0x083C: 'ga',\n    0x0434: 'xh',\n    0x0435: 'zu',\n    0x0410: 'it',\n    0x0810: 'it-CH',\n    0x0411: 'ja',\n    0x044B: 'kn',\n    0x043F: 'kk',\n    0x0453: 'km',\n    0x0486: 'quc',\n    0x0487: 'rw',\n    0x0441: 'sw',\n    0x0457: 'kok',\n    0x0412: 'ko',\n    0x0440: 'ky',\n    0x0454: 'lo',\n    0x0426: 'lv',\n    0x0427: 'lt',\n    0x082E: 'dsb',\n    0x046E: 'lb',\n    0x042F: 'mk',\n    0x083E: 'ms-BN',\n    0x043E: 'ms',\n    0x044C: 'ml',\n    0x043A: 'mt',\n    0x0481: 'mi',\n    0x047A: 'arn',\n    0x044E: 'mr',\n    0x047C: 'moh',\n    0x0450: 'mn',\n    0x0850: 'mn-CN',\n    0x0461: 'ne',\n    0x0414: 'nb',\n    0x0814: 'nn',\n    0x0482: 'oc',\n    0x0448: 'or',\n    0x0463: 'ps',\n    0x0415: 'pl',\n    0x0416: 'pt',\n    0x0816: 'pt-PT',\n    0x0446: 'pa',\n    0x046B: 'qu-BO',\n    0x086B: 'qu-EC',\n    0x0C6B: 'qu',\n    0x0418: 'ro',\n    0x0417: 'rm',\n    0x0419: 'ru',\n    0x243B: 'smn',\n    0x103B: 'smj-NO',\n    0x143B: 'smj',\n    0x0C3B: 'se-FI',\n    0x043B: 'se',\n    0x083B: 'se-SE',\n    0x203B: 'sms',\n    0x183B: 'sma-NO',\n    0x1C3B: 'sms',\n    0x044F: 'sa',\n    0x1C1A: 'sr-Cyrl-BA',\n    0x0C1A: 'sr',\n    0x181A: 'sr-Latn-BA',\n    0x081A: 'sr-Latn',\n    0x046C: 'nso',\n    0x0432: 'tn',\n    0x045B: 'si',\n    0x041B: 'sk',\n    0x0424: 'sl',\n    0x2C0A: 'es-AR',\n    0x400A: 'es-BO',\n    0x340A: 'es-CL',\n    0x240A: 'es-CO',\n    0x140A: 'es-CR',\n    0x1C0A: 'es-DO',\n    0x300A: 'es-EC',\n    0x440A: 'es-SV',\n    0x100A: 'es-GT',\n    0x480A: 'es-HN',\n    0x080A: 'es-MX',\n    0x4C0A: 'es-NI',\n    0x180A: 'es-PA',\n    0x3C0A: 'es-PY',\n    0x280A: 'es-PE',\n    0x500A: 'es-PR',\n\n    // Microsoft has defined two different language codes for\n    // “Spanish with modern sorting” and “Spanish with traditional\n    // sorting”. This makes sense for collation APIs, and it would be\n    // possible to express this in BCP 47 language tags via Unicode\n    // extensions (eg., es-u-co-trad is Spanish with traditional\n    // sorting). However, for storing names in fonts, the distinction\n    // does not make sense, so we give “es” in both cases.\n    0x0C0A: 'es',\n    0x040A: 'es',\n\n    0x540A: 'es-US',\n    0x380A: 'es-UY',\n    0x200A: 'es-VE',\n    0x081D: 'sv-FI',\n    0x041D: 'sv',\n    0x045A: 'syr',\n    0x0428: 'tg',\n    0x085F: 'tzm',\n    0x0449: 'ta',\n    0x0444: 'tt',\n    0x044A: 'te',\n    0x041E: 'th',\n    0x0451: 'bo',\n    0x041F: 'tr',\n    0x0442: 'tk',\n    0x0480: 'ug',\n    0x0422: 'uk',\n    0x042E: 'hsb',\n    0x0420: 'ur',\n    0x0843: 'uz-Cyrl',\n    0x0443: 'uz',\n    0x042A: 'vi',\n    0x0452: 'cy',\n    0x0488: 'wo',\n    0x0485: 'sah',\n    0x0478: 'ii',\n    0x046A: 'yo'\n};\n\n// Returns a IETF BCP 47 language code, for example 'zh-Hant'\n// for 'Chinese in the traditional script'.\nfunction getLanguageCode(platformID, languageID, ltag) {\n    switch (platformID) {\n        case 0:  // Unicode\n            if (languageID === 0xFFFF) {\n                return 'und';\n            } else if (ltag) {\n                return ltag[languageID];\n            }\n\n            break;\n\n        case 1:  // Macintosh\n            return macLanguages[languageID];\n\n        case 3:  // Windows\n            return windowsLanguages[languageID];\n    }\n\n    return undefined;\n}\n\nconst utf16 = 'utf-16';\n\n// MacOS script ID → encoding. This table stores the default case,\n// which can be overridden by macLanguageEncodings.\nconst macScriptEncodings = {\n    0: 'macintosh',           // smRoman\n    1: 'x-mac-japanese',      // smJapanese\n    2: 'x-mac-chinesetrad',   // smTradChinese\n    3: 'x-mac-korean',        // smKorean\n    6: 'x-mac-greek',         // smGreek\n    7: 'x-mac-cyrillic',      // smCyrillic\n    9: 'x-mac-devanagai',     // smDevanagari\n    10: 'x-mac-gurmukhi',     // smGurmukhi\n    11: 'x-mac-gujarati',     // smGujarati\n    12: 'x-mac-oriya',        // smOriya\n    13: 'x-mac-bengali',      // smBengali\n    14: 'x-mac-tamil',        // smTamil\n    15: 'x-mac-telugu',       // smTelugu\n    16: 'x-mac-kannada',      // smKannada\n    17: 'x-mac-malayalam',    // smMalayalam\n    18: 'x-mac-sinhalese',    // smSinhalese\n    19: 'x-mac-burmese',      // smBurmese\n    20: 'x-mac-khmer',        // smKhmer\n    21: 'x-mac-thai',         // smThai\n    22: 'x-mac-lao',          // smLao\n    23: 'x-mac-georgian',     // smGeorgian\n    24: 'x-mac-armenian',     // smArmenian\n    25: 'x-mac-chinesesimp',  // smSimpChinese\n    26: 'x-mac-tibetan',      // smTibetan\n    27: 'x-mac-mongolian',    // smMongolian\n    28: 'x-mac-ethiopic',     // smEthiopic\n    29: 'x-mac-ce',           // smCentralEuroRoman\n    30: 'x-mac-vietnamese',   // smVietnamese\n    31: 'x-mac-extarabic'     // smExtArabic\n};\n\n// MacOS language ID → encoding. This table stores the exceptional\n// cases, which override macScriptEncodings. For writing MacOS naming\n// tables, we need to emit a MacOS script ID. Therefore, we cannot\n// merge macScriptEncodings into macLanguageEncodings.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageEncodings = {\n    15: 'x-mac-icelandic',    // langIcelandic\n    17: 'x-mac-turkish',      // langTurkish\n    18: 'x-mac-croatian',     // langCroatian\n    24: 'x-mac-ce',           // langLithuanian\n    25: 'x-mac-ce',           // langPolish\n    26: 'x-mac-ce',           // langHungarian\n    27: 'x-mac-ce',           // langEstonian\n    28: 'x-mac-ce',           // langLatvian\n    30: 'x-mac-icelandic',    // langFaroese\n    37: 'x-mac-romanian',     // langRomanian\n    38: 'x-mac-ce',           // langCzech\n    39: 'x-mac-ce',           // langSlovak\n    40: 'x-mac-ce',           // langSlovenian\n    143: 'x-mac-inuit',       // langInuktitut\n    146: 'x-mac-gaelic'       // langIrishGaelicScript\n};\n\nfunction getEncoding(platformID, encodingID, languageID) {\n    switch (platformID) {\n        case 0:  // Unicode\n            return utf16;\n\n        case 1:  // Apple Macintosh\n            return macLanguageEncodings[languageID] || macScriptEncodings[encodingID];\n\n        case 3:  // Microsoft Windows\n            if (encodingID === 1 || encodingID === 10) {\n                return utf16;\n            }\n\n            break;\n    }\n\n    return undefined;\n}\n\n// Parse the naming `name` table.\n// FIXME: Format 1 additional fields are not supported yet.\n// ltag is the content of the `ltag' table, such as ['en', 'zh-Hans', 'de-CH-1904'].\nfunction parseNameTable(data, start, ltag) {\n    const name = {};\n    const p = new parse.Parser(data, start);\n    const format = p.parseUShort();\n    const count = p.parseUShort();\n    const stringOffset = p.offset + p.parseUShort();\n    for (let i = 0; i < count; i++) {\n        const platformID = p.parseUShort();\n        const encodingID = p.parseUShort();\n        const languageID = p.parseUShort();\n        const nameID = p.parseUShort();\n        const property = nameTableNames[nameID] || nameID;\n        const byteLength = p.parseUShort();\n        const offset = p.parseUShort();\n        const language = getLanguageCode(platformID, languageID, ltag);\n        const encoding = getEncoding(platformID, encodingID, languageID);\n        if (encoding !== undefined && language !== undefined) {\n            let text;\n            if (encoding === utf16) {\n                text = decode.UTF16(data, stringOffset + offset, byteLength);\n            } else {\n                text = decode.MACSTRING(data, stringOffset + offset, byteLength, encoding);\n            }\n\n            if (text) {\n                let translations = name[property];\n                if (translations === undefined) {\n                    translations = name[property] = {};\n                }\n\n                translations[language] = text;\n            }\n        }\n    }\n\n    let langTagCount = 0;\n    if (format === 1) {\n        // FIXME: Also handle Microsoft's 'name' table 1.\n        langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\n// {23: 'foo'} → {'foo': 23}\n// ['bar', 'baz'] → {'bar': 0, 'baz': 1}\nfunction reverseDict(dict) {\n    const result = {};\n    for (let key in dict) {\n        result[dict[key]] = parseInt(key);\n    }\n\n    return result;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Record('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\n// Finds the position of needle in haystack, or -1 if not there.\n// Like String.indexOf(), but for arrays.\nfunction findSubArray(needle, haystack) {\n    const needleLength = needle.length;\n    const limit = haystack.length - needleLength + 1;\n\n    loop:\n    for (let pos = 0; pos < limit; pos++) {\n        for (; pos < limit; pos++) {\n            for (let k = 0; k < needleLength; k++) {\n                if (haystack[pos + k] !== needle[k]) {\n                    continue loop;\n                }\n            }\n\n            return pos;\n        }\n    }\n\n    return -1;\n}\n\nfunction addStringToPool(s, pool) {\n    let offset = findSubArray(s, pool);\n    if (offset < 0) {\n        offset = pool.length;\n        let i = 0;\n        const len = s.length;\n        for (; i < len; ++i) {\n            pool.push(s[i]);\n        }\n\n    }\n\n    return offset;\n}\n\nfunction makeNameTable(names, ltag) {\n    let nameID;\n    const nameIDs = [];\n\n    const namesWithNumericKeys = {};\n    const nameTableIds = reverseDict(nameTableNames);\n    for (let key in names) {\n        let id = nameTableIds[key];\n        if (id === undefined) {\n            id = key;\n        }\n\n        nameID = parseInt(id);\n\n        if (isNaN(nameID)) {\n            throw new Error('Name table entry \"' + key + '\" does not exist, see nameTableNames for complete list.');\n        }\n\n        namesWithNumericKeys[nameID] = names[key];\n        nameIDs.push(nameID);\n    }\n\n    const macLanguageIds = reverseDict(macLanguages);\n    const windowsLanguageIds = reverseDict(windowsLanguages);\n\n    const nameRecords = [];\n    const stringPool = [];\n\n    for (let i = 0; i < nameIDs.length; i++) {\n        nameID = nameIDs[i];\n        const translations = namesWithNumericKeys[nameID];\n        for (let lang in translations) {\n            const text = translations[lang];\n\n            // For MacOS, we try to emit the name in the form that was introduced\n            // in the initial version of the TrueType spec (in the late 1980s).\n            // However, this can fail for various reasons: the requested BCP 47\n            // language code might not have an old-style Mac equivalent;\n            // we might not have a codec for the needed character encoding;\n            // or the name might contain characters that cannot be expressed\n            // in the old-style Macintosh encoding. In case of failure, we emit\n            // the name in a more modern fashion (Unicode encoding with BCP 47\n            // language tags) that is recognized by MacOS 10.5, released in 2009.\n            // If fonts were only read by operating systems, we could simply\n            // emit all names in the modern form; this would be much easier.\n            // However, there are many applications and libraries that read\n            // 'name' tables directly, and these will usually only recognize\n            // the ancient form (silently skipping the unrecognized names).\n            let macPlatform = 1;  // Macintosh\n            let macLanguage = macLanguageIds[lang];\n            let macScript = macLanguageToScript[macLanguage];\n            const macEncoding = getEncoding(macPlatform, macScript, macLanguage);\n            let macName = encode.MACSTRING(text, macEncoding);\n            if (macName === undefined) {\n                macPlatform = 0;  // Unicode\n                macLanguage = ltag.indexOf(lang);\n                if (macLanguage < 0) {\n                    macLanguage = ltag.length;\n                    ltag.push(lang);\n                }\n\n                macScript = 4;  // Unicode 2.0 and later\n                macName = encode.UTF16(text);\n            }\n\n            const macNameOffset = addStringToPool(macName, stringPool);\n            nameRecords.push(makeNameRecord(macPlatform, macScript, macLanguage,\n                                            nameID, macName.length, macNameOffset));\n\n            const winLanguage = windowsLanguageIds[lang];\n            if (winLanguage !== undefined) {\n                const winName = encode.UTF16(text);\n                const winNameOffset = addStringToPool(winName, stringPool);\n                nameRecords.push(makeNameRecord(3, 1, winLanguage,\n                                                nameID, winName.length, winNameOffset));\n            }\n        }\n    }\n\n    nameRecords.sort(function(a, b) {\n        return ((a.platformID - b.platformID) ||\n                (a.encodingID - b.encodingID) ||\n                (a.languageID - b.languageID) ||\n                (a.nameID - b.nameID));\n    });\n\n    const t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: nameRecords.length},\n        {name: 'stringOffset', type: 'USHORT', value: 6 + nameRecords.length * 12}\n    ]);\n\n    for (let r = 0; r < nameRecords.length; r++) {\n        t.fields.push({name: 'record_' + r, type: 'RECORD', value: nameRecords[r]});\n    }\n\n    t.fields.push({name: 'strings', type: 'LITERAL', value: stringPool});\n    return t;\n}\n\nexport default { parse: parseNameTable, make: makeNameTable };\n","// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\nconst unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (let i = 0; i < unicodeRanges.length; i += 1) {\n        const range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    const os2 = {};\n    const p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (let i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseOS2Table, make: makeOS2Table, unicodeRanges, getUnicodeRange };\n","// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\nimport { standardNames } from '../encoding';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    const post = {};\n    const p = new parse.Parser(data, start);\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n        case 1:\n            post.names = standardNames.slice();\n            break;\n        case 2:\n            post.numberOfGlyphs = p.parseUShort();\n            post.glyphNameIndex = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.glyphNameIndex[i] = p.parseUShort();\n            }\n\n            post.names = [];\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] >= standardNames.length) {\n                    const nameLength = p.parseChar();\n                    post.names.push(p.parseString(nameLength));\n                }\n            }\n\n            break;\n        case 2.5:\n            post.numberOfGlyphs = p.parseUShort();\n            post.offset = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.offset[i] = p.parseChar();\n            }\n\n            break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexport default { parse: parsePostTable, make: makePostTable };\n","// The `GSUB` table contains ligatures, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\n\nimport check from '../check';\nimport { Parser } from '../parse';\nimport table from '../table';\n\nconst subtableParsers = new Array(9);         // subtableParsers[0] is unused\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#SS\nsubtableParsers[1] = function parseLookup1() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            deltaGlyphId: this.parseUShort()\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            substitute: this.parseOffset16List()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 1 format must be 1 or 2.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#MS\nsubtableParsers[2] = function parseLookup2() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Multiple Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        sequences: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#AS\nsubtableParsers[3] = function parseLookup3() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Alternate Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        alternateSets: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#LS\nsubtableParsers[4] = function parseLookup4() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB ligature table identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        ligatureSets: this.parseListOfLists(function() {\n            return {\n                ligGlyph: this.parseUShort(),\n                components: this.parseUShortList(this.parseUShort() - 1)\n            };\n        })\n    };\n};\n\nconst lookupRecordDesc = {\n    sequenceIndex: Parser.uShort,\n    lookupListIndex: Parser.uShort\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CSF\nsubtableParsers[5] = function parseLookup5() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n\n    if (substFormat === 1) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            ruleSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    input: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            classDef: this.parsePointer(Parser.classDef),\n            classSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    classes: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        const glyphCount = this.parseUShort();\n        const substCount = this.parseUShort();\n        return {\n            substFormat: substFormat,\n            coverages: this.parseList(glyphCount, Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 5 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CC\nsubtableParsers[6] = function parseLookup6() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            chainRuleSets: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            backtrackClassDef: this.parsePointer(Parser.classDef),\n            inputClassDef: this.parsePointer(Parser.classDef),\n            lookaheadClassDef: this.parsePointer(Parser.classDef),\n            chainClassSet: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        return {\n            substFormat: 3,\n            backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 6 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#ES\nsubtableParsers[7] = function parseLookup7() {\n    // Extension Substitution subtable\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Extension Substitution subtable identifier-format must be 1');\n    const extensionLookupType = this.parseUShort();\n    const extensionParser = new Parser(this.data, this.offset + this.parseULong());\n    return {\n        substFormat: 1,\n        lookupType: extensionLookupType,\n        extension: subtableParsers[extensionLookupType].call(extensionParser)\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#RCCS\nsubtableParsers[8] = function parseLookup8() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        substitutes: this.parseUShortList()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\nfunction parseGsubTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.1, 'Unsupported GSUB table version.');\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers)\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList()\n        };\n    }\n\n}\n\n// GSUB Writing //////////////////////////////////////////////\nconst subtableMakers = new Array(9);\n\nsubtableMakers[1] = function makeLookup1(subtable) {\n    if (subtable.substFormat === 1) {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 1},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)},\n            {name: 'deltaGlyphID', type: 'USHORT', value: subtable.deltaGlyphId}\n        ]);\n    } else {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 2},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n        ].concat(table.ushortList('substitute', subtable.substitute)));\n    }\n    check.fail('Lookup type 1 substFormat must be 1 or 2.');\n};\n\nsubtableMakers[3] = function makeLookup3(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 3 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('altSet', subtable.alternateSets, function(alternateSet) {\n        return new table.Table('alternateSetTable', table.ushortList('alternate', alternateSet));\n    })));\n};\n\nsubtableMakers[4] = function makeLookup4(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 4 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('ligSet', subtable.ligatureSets, function(ligatureSet) {\n        return new table.Table('ligatureSetTable', table.tableList('ligature', ligatureSet, function(ligature) {\n            return new table.Table('ligatureTable',\n                [{name: 'ligGlyph', type: 'USHORT', value: ligature.ligGlyph}]\n                .concat(table.ushortList('component', ligature.components, ligature.components.length + 1))\n            );\n        }));\n    })));\n};\n\nfunction makeGsubTable(gsub) {\n    return new table.Table('GSUB', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gsub.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gsub.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gsub.lookups, subtableMakers)}\n    ]);\n}\n\nexport default { parse: parseGsubTable, make: makeGsubTable };\n","// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\nimport check from '../check';\nimport { decode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the metadata `meta` table.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6meta.html\nfunction parseMetaTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported META table version.');\n    p.parseULong(); // flags - currently unused and set to 0\n    p.parseULong(); // tableOffset\n    const numDataMaps = p.parseULong();\n\n    const tags = {};\n    for (let i = 0; i < numDataMaps; i++) {\n        const tag = p.parseTag();\n        const dataOffset = p.parseULong();\n        const dataLength = p.parseULong();\n        const text = decode.UTF8(data, start + dataOffset, dataLength);\n\n        tags[tag] = text;\n    }\n    return tags;\n}\n\nfunction makeMetaTable(tags) {\n    const numTags = Object.keys(tags).length;\n    let stringPool = '';\n    const stringPoolOffset = 16 + numTags * 12;\n\n    const result = new table.Table('meta', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'offset', type: 'ULONG', value: stringPoolOffset},\n        {name: 'numTags', type: 'ULONG', value: numTags}\n    ]);\n\n    for (let tag in tags) {\n        const pos = stringPool.length;\n        stringPool += tags[tag];\n\n        result.fields.push({name: 'tag ' + tag, type: 'TAG', value: tag});\n        result.fields.push({name: 'offset ' + tag, type: 'ULONG', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + tag, type: 'ULONG', value: tags[tag].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n\n    return result;\n}\n\nexport default { parse: parseMetaTable, make: makeMetaTable };\n","// The Position object provides utility methods to manipulate\n// the GPOS position table.\n\nimport Layout from './layout';\n\n/**\n * @exports opentype.Position\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Position(font) {\n    Layout.call(this, font, 'gpos');\n}\n\nPosition.prototype = Layout.prototype;\n\n/**\n * Init some data for faster and easier access later.\n */\nPosition.prototype.init = function() {\n    const script = this.getDefaultScriptName();\n    this.defaultKerningTables = this.getKerningTables(script);\n};\n\n/**\n * Find a glyph pair in a list of lookup tables of type 2 and retrieve the xAdvance kerning value.\n *\n * @param {integer} leftIndex - left glyph index\n * @param {integer} rightIndex - right glyph index\n * @returns {integer}\n */\nPosition.prototype.getKerningValue = function(kerningLookups, leftIndex, rightIndex) {\n    for (let i = 0; i < kerningLookups.length; i++) {\n        const subtables = kerningLookups[i].subtables;\n        for (let j = 0; j < subtables.length; j++) {\n            const subtable = subtables[j];\n            const covIndex = this.getCoverageIndex(subtable.coverage, leftIndex);\n            if (covIndex < 0) continue;\n            switch (subtable.posFormat) {\n                case 1:\n                    // Search Pair Adjustment Positioning Format 1\n                    let pairSet = subtable.pairSets[covIndex];\n                    for (let k = 0; k < pairSet.length; k++) {\n                        let pair = pairSet[k];\n                        if (pair.secondGlyph === rightIndex) {\n                            return pair.value1 && pair.value1.xAdvance || 0;\n                        }\n                    }\n                    break;      // left glyph found, not right glyph - try next subtable\n                case 2:\n                    // Search Pair Adjustment Positioning Format 2\n                    const class1 = this.getGlyphClass(subtable.classDef1, leftIndex);\n                    const class2 = this.getGlyphClass(subtable.classDef2, rightIndex);\n                    const pair = subtable.classRecords[class1][class2];\n                    return pair.value1 && pair.value1.xAdvance || 0;\n            }\n        }\n    }\n    return 0;\n};\n\n/**\n * List all kerning lookup tables.\n *\n * @param {string} [script='DFLT'] - use font.position.getDefaultScriptName() for a better default value\n * @param {string} [language='dflt']\n * @return {object[]} The list of kerning lookup tables (may be empty), or undefined if there is no GPOS table (and we should use the kern table)\n */\nPosition.prototype.getKerningTables = function(script, language) {\n    if (this.font.tables.gpos) {\n        return this.getLookupTables(script, language, 'kern', 2);\n    }\n};\n\nexport default Position;\n","// The Layout object is the prototype of Substitution objects, and provides\n// utility methods to manipulate common layout tables (GPOS, GSUB, GDEF...)\n\nimport check from './check';\n\nfunction searchTag(arr, tag) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid].tag;\n        if (val === tag) {\n            return imid;\n        } else if (val < tag) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\nfunction binSearch(arr, value) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid];\n        if (val === value) {\n            return imid;\n        } else if (val < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\n// binary search in a list of ranges (coverage, class definition)\nfunction searchRange(ranges, value) {\n    // jshint bitwise: false\n    let range;\n    let imin = 0;\n    let imax = ranges.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        range = ranges[imid];\n        const start = range.start;\n        if (start === value) {\n            return range;\n        } else if (start < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    if (imin > 0) {\n        range = ranges[imin - 1];\n        if (value > range.end) return 0;\n        return range;\n    }\n}\n\n/**\n * @exports opentype.Layout\n * @class\n */\nfunction Layout(font, tableName) {\n    this.font = font;\n    this.tableName = tableName;\n}\n\nLayout.prototype = {\n\n    /**\n     * Binary search an object by \"tag\" property\n     * @instance\n     * @function searchTag\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {string} tag\n     * @return {number}\n     */\n    searchTag: searchTag,\n\n    /**\n     * Binary search in a list of numbers\n     * @instance\n     * @function binSearch\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {number} value\n     * @return {number}\n     */\n    binSearch: binSearch,\n\n    /**\n     * Get or create the Layout table (GSUB, GPOS etc).\n     * @param  {boolean} create - Whether to create a new one.\n     * @return {Object} The GSUB or GPOS table.\n     */\n    getTable: function(create) {\n        let layout = this.font.tables[this.tableName];\n        if (!layout && create) {\n            layout = this.font.tables[this.tableName] = this.createDefaultTable();\n        }\n        return layout;\n    },\n\n    /**\n     * Returns all scripts in the substitution table.\n     * @instance\n     * @return {Array}\n     */\n    getScriptNames: function() {\n        let layout = this.getTable();\n        if (!layout) { return []; }\n        return layout.scripts.map(function(script) {\n            return script.tag;\n        });\n    },\n\n    /**\n     * Returns the best bet for a script name.\n     * Returns 'DFLT' if it exists.\n     * If not, returns 'latn' if it exists.\n     * If neither exist, returns undefined.\n     */\n    getDefaultScriptName: function() {\n        let layout = this.getTable();\n        if (!layout) { return; }\n        let hasLatn = false;\n        for (let i = 0; i < layout.scripts.length; i++) {\n            const name = layout.scripts[i].tag;\n            if (name === 'DFLT') return name;\n            if (name === 'latn') hasLatn = true;\n        }\n        if (hasLatn) return 'latn';\n    },\n\n    /**\n     * Returns all LangSysRecords in the given script.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {boolean} create - forces the creation of this script table if it doesn't exist.\n     * @return {Object} An object with tag and script properties.\n     */\n    getScriptTable: function(script, create) {\n        const layout = this.getTable(create);\n        if (layout) {\n            script = script || 'DFLT';\n            const scripts = layout.scripts;\n            const pos = searchTag(layout.scripts, script);\n            if (pos >= 0) {\n                return scripts[pos].script;\n            } else if (create) {\n                const scr = {\n                    tag: script,\n                    script: {\n                        defaultLangSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []},\n                        langSysRecords: []\n                    }\n                };\n                scripts.splice(-1 - pos, 0, scr);\n                return scr.script;\n            }\n        }\n    },\n\n    /**\n     * Returns a language system table\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.\n     * @return {Object}\n     */\n    getLangSysTable: function(script, language, create) {\n        const scriptTable = this.getScriptTable(script, create);\n        if (scriptTable) {\n            if (!language || language === 'dflt' || language === 'DFLT') {\n                return scriptTable.defaultLangSys;\n            }\n            const pos = searchTag(scriptTable.langSysRecords, language);\n            if (pos >= 0) {\n                return scriptTable.langSysRecords[pos].langSys;\n            } else if (create) {\n                const langSysRecord = {\n                    tag: language,\n                    langSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []}\n                };\n                scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);\n                return langSysRecord.langSys;\n            }\n        }\n    },\n\n    /**\n     * Get a specific feature table.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm\n     * @param {boolean} create - forces the creation of the feature table if it doesn't exist.\n     * @return {Object}\n     */\n    getFeatureTable: function(script, language, feature, create) {\n        const langSysTable = this.getLangSysTable(script, language, create);\n        if (langSysTable) {\n            let featureRecord;\n            const featIndexes = langSysTable.featureIndexes;\n            const allFeatures = this.font.tables[this.tableName].features;\n            // The FeatureIndex array of indices is in arbitrary order,\n            // even if allFeatures is sorted alphabetically by feature tag.\n            for (let i = 0; i < featIndexes.length; i++) {\n                featureRecord = allFeatures[featIndexes[i]];\n                if (featureRecord.tag === feature) {\n                    return featureRecord.feature;\n                }\n            }\n            if (create) {\n                const index = allFeatures.length;\n                // Automatic ordering of features would require to shift feature indexes in the script list.\n                check.assert(index === 0 || feature >= allFeatures[index - 1].tag, 'Features must be added in alphabetical order.');\n                featureRecord = {\n                    tag: feature,\n                    feature: { params: 0, lookupListIndexes: [] }\n                };\n                allFeatures.push(featureRecord);\n                featIndexes.push(index);\n                return featureRecord.feature;\n            }\n        }\n    },\n\n    /**\n     * Get the lookup tables of a given type for a script/language/feature.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - 4-letter feature code\n     * @param {number} lookupType - 1 to 9\n     * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.\n     * @return {Object[]}\n     */\n    getLookupTables: function(script, language, feature, lookupType, create) {\n        const featureTable = this.getFeatureTable(script, language, feature, create);\n        const tables = [];\n        if (featureTable) {\n            let lookupTable;\n            const lookupListIndexes = featureTable.lookupListIndexes;\n            const allLookups = this.font.tables[this.tableName].lookups;\n            // lookupListIndexes are in no particular order, so use naive search.\n            for (let i = 0; i < lookupListIndexes.length; i++) {\n                lookupTable = allLookups[lookupListIndexes[i]];\n                if (lookupTable.lookupType === lookupType) {\n                    tables.push(lookupTable);\n                }\n            }\n            if (tables.length === 0 && create) {\n                lookupTable = {\n                    lookupType: lookupType,\n                    lookupFlag: 0,\n                    subtables: [],\n                    markFilteringSet: undefined\n                };\n                const index = allLookups.length;\n                allLookups.push(lookupTable);\n                lookupListIndexes.push(index);\n                return [lookupTable];\n            }\n        }\n        return tables;\n    },\n\n    /**\n     * Find a glyph in a class definition table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#class-definition-table\n     * @param {object} classDefTable - an OpenType Layout class definition table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getGlyphClass: function(classDefTable, glyphIndex) {\n        switch (classDefTable.format) {\n            case 1:\n                if (classDefTable.startGlyph <= glyphIndex && glyphIndex < classDefTable.startGlyph + classDefTable.classes.length) {\n                    return classDefTable.classes[glyphIndex - classDefTable.startGlyph];\n                }\n                return 0;\n            case 2:\n                const range = searchRange(classDefTable.ranges, glyphIndex);\n                return range ? range.classId : 0;\n        }\n    },\n\n    /**\n     * Find a glyph in a coverage table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#coverage-table\n     * @param {object} coverageTable - an OpenType Layout coverage table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getCoverageIndex: function(coverageTable, glyphIndex) {\n        switch (coverageTable.format) {\n            case 1:\n                const index = binSearch(coverageTable.glyphs, glyphIndex);\n                return index >= 0 ? index : -1;\n            case 2:\n                const range = searchRange(coverageTable.ranges, glyphIndex);\n                return range ? range.index + glyphIndex - range.start : -1;\n        }\n    },\n\n    /**\n     * Returns the list of glyph indexes of a coverage table.\n     * Format 1: the list is stored raw\n     * Format 2: compact list as range records.\n     * @instance\n     * @param  {Object} coverageTable\n     * @return {Array}\n     */\n    expandCoverage: function(coverageTable) {\n        if (coverageTable.format === 1) {\n            return coverageTable.glyphs;\n        } else {\n            const glyphs = [];\n            const ranges = coverageTable.ranges;\n            for (let i = 0; i < ranges.length; i++) {\n                const range = ranges[i];\n                const start = range.start;\n                const end = range.end;\n                for (let j = start; j <= end; j++) {\n                    glyphs.push(j);\n                }\n            }\n            return glyphs;\n        }\n    }\n\n};\n\nexport default Layout;\n","// The Substitution object provides utility methods to manipulate\n// the GSUB substitution table.\n\nimport check from './check';\nimport Layout from './layout';\n\n/**\n * @exports opentype.Substitution\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Substitution(font) {\n    Layout.call(this, font, 'gsub');\n}\n\n// Check if 2 arrays of primitives are equal.\nfunction arraysEqual(ar1, ar2) {\n    const n = ar1.length;\n    if (n !== ar2.length) { return false; }\n    for (let i = 0; i < n; i++) {\n        if (ar1[i] !== ar2[i]) { return false; }\n    }\n    return true;\n}\n\n// Find the first subtable of a lookup table in a particular format.\nfunction getSubstFormat(lookupTable, format, defaultSubtable) {\n    const subtables = lookupTable.subtables;\n    for (let i = 0; i < subtables.length; i++) {\n        const subtable = subtables[i];\n        if (subtable.substFormat === format) {\n            return subtable;\n        }\n    }\n    if (defaultSubtable) {\n        subtables.push(defaultSubtable);\n        return defaultSubtable;\n    }\n    return undefined;\n}\n\nSubstitution.prototype = Layout.prototype;\n\n/**\n * Create a default GSUB table.\n * @return {Object} gsub - The GSUB table.\n */\nSubstitution.prototype.createDefaultTable = function() {\n    // Generate a default empty GSUB table with just a DFLT script and dflt lang sys.\n    return {\n        version: 1,\n        scripts: [{\n            tag: 'DFLT',\n            script: {\n                defaultLangSys: { reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: [] },\n                langSysRecords: []\n            }\n        }],\n        features: [],\n        lookups: []\n    };\n};\n\n/**\n * List all single substitutions (lookup type 1) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt', 'ss01'...)\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getSingle = function(feature, script, language) {\n    const substitutions = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 1);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            let j;\n            if (subtable.substFormat === 1) {\n                const delta = subtable.deltaGlyphId;\n                for (j = 0; j < glyphs.length; j++) {\n                    const glyph = glyphs[j];\n                    substitutions.push({ sub: glyph, by: glyph + delta });\n                }\n            } else {\n                const substitute = subtable.substitute;\n                for (j = 0; j < glyphs.length; j++) {\n                    substitutions.push({ sub: glyphs[j], by: substitute[j] });\n                }\n            }\n        }\n    }\n    return substitutions;\n};\n\n/**\n * List all alternates (lookup type 3) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt'...)\n * @return {Array} alternates - The list of alternates\n */\nSubstitution.prototype.getAlternates = function(feature, script, language) {\n    const alternates = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 3);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const alternateSets = subtable.alternateSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                alternates.push({ sub: glyphs[j], by: alternateSets[j] });\n            }\n        }\n    }\n    return alternates;\n};\n\n/**\n * List all ligatures (lookup type 4) for a given script, language, and feature.\n * The result is an array of ligature objects like { sub: [ids], by: id }\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} ligatures - The list of ligatures.\n */\nSubstitution.prototype.getLigatures = function(feature, script, language) {\n    const ligatures = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 4);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const ligatureSets = subtable.ligatureSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                const startGlyph = glyphs[j];\n                const ligSet = ligatureSets[j];\n                for (let k = 0; k < ligSet.length; k++) {\n                    const lig = ligSet[k];\n                    ligatures.push({\n                        sub: [startGlyph].concat(lig.components),\n                        by: lig.ligGlyph\n                    });\n                }\n            }\n        }\n    }\n    return ligatures;\n};\n\n/**\n * Add or modify a single substitution (lookup type 1)\n * Format 2, more flexible, is always used.\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, delta: number } for format 1 or { sub: id, by: id } for format 2.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addSingle = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 1, true)[0];\n    const subtable = getSubstFormat(lookupTable, 2, {                // lookup type 1 subtable, format 2, coverage format 1\n        substFormat: 2,\n        coverage: {format: 1, glyphs: []},\n        substitute: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.substitute.splice(pos, 0, 0);\n    }\n    subtable.substitute[pos] = substitution.by;\n};\n\n/**\n * Add or modify an alternate substitution (lookup type 1)\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, by: [ids] }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addAlternate = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 3, true)[0];\n    const subtable = getSubstFormat(lookupTable, 1, {                // lookup type 3 subtable, format 1, coverage format 1\n        substFormat: 1,\n        coverage: {format: 1, glyphs: []},\n        alternateSets: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.alternateSets.splice(pos, 0, 0);\n    }\n    subtable.alternateSets[pos] = substitution.by;\n};\n\n/**\n * Add a ligature (lookup type 4)\n * Ligatures with more components must be stored ahead of those with fewer components in order to be found\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} ligature - { sub: [ids], by: id }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addLigature = function(feature, ligature, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 4, true)[0];\n    let subtable = lookupTable.subtables[0];\n    if (!subtable) {\n        subtable = {                // lookup type 4 subtable, format 1, coverage format 1\n            substFormat: 1,\n            coverage: { format: 1, glyphs: [] },\n            ligatureSets: []\n        };\n        lookupTable.subtables[0] = subtable;\n    }\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = ligature.sub[0];\n    const ligComponents = ligature.sub.slice(1);\n    const ligatureTable = {\n        ligGlyph: ligature.by,\n        components: ligComponents\n    };\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos >= 0) {\n        // ligatureSet already exists\n        const ligatureSet = subtable.ligatureSets[pos];\n        for (let i = 0; i < ligatureSet.length; i++) {\n            // If ligature already exists, return.\n            if (arraysEqual(ligatureSet[i].components, ligComponents)) {\n                return;\n            }\n        }\n        // ligature does not exist: add it.\n        ligatureSet.push(ligatureTable);\n    } else {\n        // Create a new ligatureSet and add coverage for the first glyph.\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.ligatureSets.splice(pos, 0, [ligatureTable]);\n    }\n};\n\n/**\n * List all feature data for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getFeature = function(feature, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.getSingle(feature, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            return this.getSingle(feature, script, language)\n                    .concat(this.getAlternates(feature, script, language));\n        case 'dlig':\n        case 'liga':\n        case 'rlig': return this.getLigatures(feature, script, language);\n    }\n    return undefined;\n};\n\n/**\n * Add a substitution to a feature for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {Object} sub - the substitution to add (an object like { sub: id or [ids], by: id or [ids] })\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.add = function(feature, sub, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.addSingle(feature, sub, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            if (typeof sub.by === 'number') {\n                return this.addSingle(feature, sub, script, language);\n            }\n            return this.addAlternate(feature, sub, script, language);\n        case 'dlig':\n        case 'liga':\n        case 'rlig':\n            return this.addLigature(feature, sub, script, language);\n    }\n    return undefined;\n};\n\nexport default Substitution;\n","function isBrowser() {\n    return typeof window !== 'undefined';\n}\n\nfunction isNode() {\n    return typeof window === 'undefined';\n}\n\nfunction nodeBufferToArrayBuffer(buffer) {\n    const ab = new ArrayBuffer(buffer.length);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        view[i] = buffer[i];\n    }\n\n    return ab;\n}\n\nfunction arrayBufferToNodeBuffer(ab) {\n    const buffer = new Buffer(ab.byteLength);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n\n    return buffer;\n}\n\nfunction checkArgument(expression, message) {\n    if (!expression) {\n        throw message;\n    }\n}\n\nexport { isBrowser, isNode, nodeBufferToArrayBuffer, arrayBufferToNodeBuffer, checkArgument };\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/* A TrueType font hinting interpreter.\n*\n* (c) 2017 Axel Kittenberger\n*\n* This interpreter has been implemented according to this documentation:\n* https://developer.apple.com/fonts/TrueType-Reference-Manual/RM05/Chap5.html\n*\n* According to the documentation F24DOT6 values are used for pixels.\n* That means calculation is 1/64 pixel accurate and uses integer operations.\n* However, Javascript has floating point operations by default and only\n* those are available. One could make a case to simulate the 1/64 accuracy\n* exactly by truncating after every division operation\n* (for example with << 0) to get pixel exactly results as other TrueType\n* implementations. It may make sense since some fonts are pixel optimized\n* by hand using DELTAP instructions. The current implementation doesn't\n* and rather uses full floating point precision.\n*\n* xScale, yScale and rotation is currently ignored.\n*\n* A few non-trivial instructions are missing as I didn't encounter yet\n* a font that used them to test a possible implementation.\n*\n* Some fonts seem to use undocumented features regarding the twilight zone.\n* Only some of them are implemented as they were encountered.\n*\n* The exports.DEBUG statements are removed on the minified distribution file.\n*/\n'use strict';\n\nimport glyf from './tables/glyf';\n\nlet instructionTable;\nlet exec;\nlet execGlyph;\nlet execComponent;\n\n/*\n* Creates a hinting object.\n*\n* There ought to be exactly one\n* for each truetype font that is used for hinting.\n*/\nfunction Hinting(font) {\n    // the font this hinting object is for\n    this.font = font;\n\n    this.getCommands = function (hPoints) {\n        return glyf.getPath(hPoints).commands;\n    };\n\n    // cached states\n    this._fpgmState  =\n    this._prepState  =\n        undefined;\n\n    // errorState\n    // 0 ... all okay\n    // 1 ... had an error in a glyf,\n    //       continue working but stop spamming\n    //       the console\n    // 2 ... error at prep, stop hinting at this ppem\n    // 3 ... error at fpeg, stop hinting for this font at all\n    this._errorState = 0;\n}\n\n/*\n* Not rounding.\n*/\nfunction roundOff(v) {\n    return v;\n}\n\n/*\n* Rounding to grid.\n*/\nfunction roundToGrid(v) {\n    //Rounding in TT is supposed to \"symmetrical around zero\"\n    return Math.sign(v) * Math.round(Math.abs(v));\n}\n\n/*\n* Rounding to double grid.\n*/\nfunction roundToDoubleGrid(v) {\n    return Math.sign(v) * Math.round(Math.abs(v * 2)) / 2;\n}\n\n/*\n* Rounding to half grid.\n*/\nfunction roundToHalfGrid(v) {\n    return Math.sign(v) * (Math.round(Math.abs(v) + 0.5) - 0.5);\n}\n\n/*\n* Rounding to up to grid.\n*/\nfunction roundUpToGrid(v) {\n    return Math.sign(v) * Math.ceil(Math.abs(v));\n}\n\n/*\n* Rounding to down to grid.\n*/\nfunction roundDownToGrid(v) {\n    return Math.sign(v) * Math.floor(Math.abs(v));\n}\n\n/*\n* Super rounding.\n*/\nconst roundSuper = function (v) {\n    const period = this.srPeriod;\n    let phase = this.srPhase;\n    const threshold = this.srThreshold;\n    let sign = 1;\n\n    if (v < 0) {\n        v = -v;\n        sign = -1;\n    }\n\n    v += threshold - phase;\n\n    v = Math.trunc(v / period) * period;\n\n    v += phase;\n\n    // according to http://xgridfit.sourceforge.net/round.html\n    if (v < 0) return phase * sign;\n\n    return v * sign;\n};\n\n/*\n* Unit vector of x-axis.\n*/\nconst xUnitVector = {\n    x: 1,\n\n    y: 0,\n\n    axis: 'x',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.xo : p1.x) - (o2 ? p2.xo : p2.x);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.xo - rp1.xo;\n            do2 = p.xo - rp2.xo;\n            dm1 = rp1.x - rp1.xo;\n            dm2 = rp2.x - rp2.xo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.x = p.xo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.x = p.xo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            xUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        xUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this\n    normalSlope: Number.NEGATIVE_INFINITY,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'.\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.x = (org ? rp.xo : rp.x) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.x = rpdx + (p.y - rpdy) / pv.normalSlope;\n    },\n\n    // Slope of vector line.\n    slope: 0,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.xTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.xTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.xTouched = false;\n    }\n};\n\n/*\n* Unit vector of y-axis.\n*/\nconst yUnitVector = {\n    x: 0,\n\n    y: 1,\n\n    axis: 'y',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.yo : p1.y) - (o2 ? p2.yo : p2.y);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.yo - rp1.yo;\n            do2 = p.yo - rp2.yo;\n            dm1 = rp1.y - rp1.yo;\n            dm2 = rp2.y - rp2.yo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.y = p.yo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.y = p.yo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            yUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        yUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this.\n    normalSlope: 0,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.y = (org ? rp.yo : rp.y) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.y = rpdy + pv.normalSlope * (p.x - rpdx);\n    },\n\n    // Slope of vector line.\n    slope: Number.POSITIVE_INFINITY,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.yTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.yTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.yTouched = false;\n    }\n};\n\nObject.freeze(xUnitVector);\nObject.freeze(yUnitVector);\n\n/*\n* Creates a unit vector that is not x- or y-axis.\n*/\nfunction UnitVector(x, y) {\n    this.x = x;\n    this.y = y;\n    this.axis = undefined;\n    this.slope = y / x;\n    this.normalSlope = -x / y;\n    Object.freeze(this);\n}\n\n/*\n* Gets the projected distance between two points.\n* o1/o2 ... if true, respective original position is used.\n*/\nUnitVector.prototype.distance = function(p1, p2, o1, o2) {\n    return (\n        this.x * xUnitVector.distance(p1, p2, o1, o2) +\n        this.y * yUnitVector.distance(p1, p2, o1, o2)\n    );\n};\n\n/*\n* Moves point p so the moved position has the same relative\n* position to the moved positions of rp1 and rp2 than the\n* original positions had.\n*\n* See APPENDIX on INTERPOLATE at the bottom of this file.\n*/\nUnitVector.prototype.interpolate = function(p, rp1, rp2, pv) {\n    let dm1;\n    let dm2;\n    let do1;\n    let do2;\n    let doa1;\n    let doa2;\n    let dt;\n\n    do1 = pv.distance(p, rp1, true, true);\n    do2 = pv.distance(p, rp2, true, true);\n    dm1 = pv.distance(rp1, rp1, false, true);\n    dm2 = pv.distance(rp2, rp2, false, true);\n    doa1 = Math.abs(do1);\n    doa2 = Math.abs(do2);\n    dt = doa1 + doa2;\n\n    if (dt === 0) {\n        this.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n        return;\n    }\n\n    this.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n};\n\n/*\n* Sets the point 'p' relative to point 'rp'\n* by the distance 'd'\n*\n* See APPENDIX on SETRELATIVE at the bottom of this file.\n*\n* p   ...  point to set\n* rp  ... reference point\n* d   ... distance on projection vector\n* pv  ... projection vector (undefined = this)\n* org ... if true, uses the original position of rp as reference.\n*/\nUnitVector.prototype.setRelative = function(p, rp, d, pv, org) {\n    pv = pv || this;\n\n    const rpx = org ? rp.xo : rp.x;\n    const rpy = org ? rp.yo : rp.y;\n    const rpdx = rpx + d * pv.x;\n    const rpdy = rpy + d * pv.y;\n\n    const pvns = pv.normalSlope;\n    const fvs = this.slope;\n\n    const px = p.x;\n    const py = p.y;\n\n    p.x = (fvs * px - pvns * rpdx + rpdy - py) / (fvs - pvns);\n    p.y = fvs * (p.x - px) + py;\n};\n\n/*\n* Touches the point p.\n*/\nUnitVector.prototype.touch = function(p) {\n    p.xTouched = true;\n    p.yTouched = true;\n};\n\n/*\n* Returns a unit vector with x/y coordinates.\n*/\nfunction getUnitVector(x, y) {\n    const d = Math.sqrt(x * x + y * y);\n\n    x /= d;\n    y /= d;\n\n    if (x === 1 && y === 0) return xUnitVector;\n    else if (x === 0 && y === 1) return yUnitVector;\n    else return new UnitVector(x, y);\n}\n\n/*\n* Creates a point in the hinting engine.\n*/\nfunction HPoint(\n    x,\n    y,\n    lastPointOfContour,\n    onCurve\n) {\n    this.x = this.xo = Math.round(x * 64) / 64; // hinted x value and original x-value\n    this.y = this.yo = Math.round(y * 64) / 64; // hinted y value and original y-value\n\n    this.lastPointOfContour = lastPointOfContour;\n    this.onCurve = onCurve;\n    this.prevPointOnContour = undefined;\n    this.nextPointOnContour = undefined;\n    this.xTouched = false;\n    this.yTouched = false;\n\n    Object.preventExtensions(this);\n}\n\n/*\n* Returns the next touched point on the contour.\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.nextTouched = function(v) {\n    let p = this.nextPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.nextPointOnContour;\n\n    return p;\n};\n\n/*\n* Returns the previous touched point on the contour\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.prevTouched = function(v) {\n    let p = this.prevPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.prevPointOnContour;\n\n    return p;\n};\n\n/*\n* The zero point.\n*/\nconst HPZero = Object.freeze(new HPoint(0, 0));\n\n/*\n* The default state of the interpreter.\n*\n* Note: Freezing the defaultState and then deriving from it\n* makes the V8 Javascript engine going awkward,\n* so this is avoided, albeit the defaultState shouldn't\n* ever change.\n*/\nconst defaultState = {\n    cvCutIn: 17 / 16,    // control value cut in\n    deltaBase: 9,\n    deltaShift: 0.125,\n    loop: 1,             // loops some instructions\n    minDis: 1,           // minimum distance\n    autoFlip: true\n};\n\n/*\n* The current state of the interpreter.\n*\n* env  ... 'fpgm' or 'prep' or 'glyf'\n* prog ... the program\n*/\nfunction State(env, prog) {\n    this.env = env;\n    this.stack = [];\n    this.prog = prog;\n\n    switch (env) {\n        case 'glyf' :\n            this.zp0 = this.zp1 = this.zp2 = 1;\n            this.rp0 = this.rp1 = this.rp2 = 0;\n            /* fall through */\n        case 'prep' :\n            this.fv = this.pv = this.dpv = xUnitVector;\n            this.round = roundToGrid;\n    }\n}\n\n/*\n* Executes a glyph program.\n*\n* This does the hinting for each glyph.\n*\n* Returns an array of moved points.\n*\n* glyph: the glyph to hint\n* ppem: the size the glyph is rendered for\n*/\nHinting.prototype.exec = function(glyph, ppem) {\n    if (typeof ppem !== 'number') {\n        throw new Error('Point size is not a number!');\n    }\n\n    // Received a fatal error, don't do any hinting anymore.\n    if (this._errorState > 2) return;\n\n    const font = this.font;\n    let prepState = this._prepState;\n\n    if (!prepState || prepState.ppem !== ppem) {\n        let fpgmState = this._fpgmState;\n\n        if (!fpgmState) {\n            // Executes the fpgm state.\n            // This is used by fonts to define functions.\n            State.prototype = defaultState;\n\n            fpgmState =\n            this._fpgmState =\n                new State('fpgm', font.tables.fpgm);\n\n            fpgmState.funcs = [ ];\n            fpgmState.font = font;\n\n            if (exports.DEBUG) {\n                console.log('---EXEC FPGM---');\n                fpgmState.step = -1;\n            }\n\n            try {\n                exec(fpgmState);\n            } catch (e) {\n                console.log('Hinting error in FPGM:' + e);\n                this._errorState = 3;\n                return;\n            }\n        }\n\n        // Executes the prep program for this ppem setting.\n        // This is used by fonts to set cvt values\n        // depending on to be rendered font size.\n\n        State.prototype = fpgmState;\n        prepState =\n        this._prepState =\n            new State('prep', font.tables.prep);\n\n        prepState.ppem = ppem;\n\n        // Creates a copy of the cvt table\n        // and scales it to the current ppem setting.\n        const oCvt = font.tables.cvt;\n        if (oCvt) {\n            const cvt = prepState.cvt = new Array(oCvt.length);\n            const scale = ppem / font.unitsPerEm;\n            for (let c = 0; c < oCvt.length; c++) {\n                cvt[c] = oCvt[c] * scale;\n            }\n        } else {\n            prepState.cvt = [];\n        }\n\n        if (exports.DEBUG) {\n            console.log('---EXEC PREP---');\n            prepState.step = -1;\n        }\n\n        try {\n            exec(prepState);\n        } catch (e) {\n            if (this._errorState < 2) {\n                console.log('Hinting error in PREP:' + e);\n            }\n            this._errorState = 2;\n        }\n    }\n\n    if (this._errorState > 1) return;\n\n    try {\n        return execGlyph(glyph, prepState);\n    } catch (e) {\n        if (this._errorState < 1) {\n            console.log('Hinting error:' + e);\n            console.log('Note: further hinting errors are silenced');\n        }\n        this._errorState = 1;\n        return undefined;\n    }\n};\n\n/*\n* Executes the hinting program for a glyph.\n*/\nexecGlyph = function(glyph, prepState) {\n    // original point positions\n    const xScale = prepState.ppem / prepState.font.unitsPerEm;\n    const yScale = xScale;\n    let components = glyph.components;\n    let contours;\n    let gZone;\n    let state;\n\n    State.prototype = prepState;\n    if (!components) {\n        state = new State('glyf', glyph.instructions);\n        if (exports.DEBUG) {\n            console.log('---EXEC GLYPH---');\n            state.step = -1;\n        }\n        execComponent(glyph, state, xScale, yScale);\n        gZone = state.gZone;\n    } else {\n        const font = prepState.font;\n        gZone = [];\n        contours = [];\n        for (let i = 0; i < components.length; i++) {\n            const c = components[i];\n            const cg = font.glyphs.get(c.glyphIndex);\n\n            state = new State('glyf', cg.instructions);\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMP ' + i + '---');\n                state.step = -1;\n            }\n\n            execComponent(cg, state, xScale, yScale);\n            // appends the computed points to the result array\n            // post processes the component points\n            const dx = Math.round(c.dx * xScale);\n            const dy = Math.round(c.dy * yScale);\n            const gz = state.gZone;\n            const cc = state.contours;\n            for (let pi = 0; pi < gz.length; pi++) {\n                const p = gz[pi];\n                p.xTouched = p.yTouched = false;\n                p.xo = p.x = p.x + dx;\n                p.yo = p.y = p.y + dy;\n            }\n\n            const gLen = gZone.length;\n            gZone.push.apply(gZone, gz);\n            for (let j = 0; j < cc.length; j++) {\n                contours.push(cc[j] + gLen);\n            }\n        }\n\n        if (glyph.instructions && !state.inhibitGridFit) {\n            // the composite has instructions on its own\n            state = new State('glyf', glyph.instructions);\n\n            state.gZone = state.z0 = state.z1 = state.z2 = gZone;\n\n            state.contours = contours;\n\n            // note: HPZero cannot be used here, since\n            //       the point might be modified\n            gZone.push(\n                new HPoint(0, 0),\n                new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n            );\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMPOSITE---');\n                state.step = -1;\n            }\n\n            exec(state);\n\n            gZone.length -= 2;\n        }\n    }\n\n    return gZone;\n};\n\n/*\n* Executes the hinting program for a component of a multi-component glyph\n* or of the glyph itself for a non-component glyph.\n*/\nexecComponent = function(glyph, state, xScale, yScale)\n{\n    const points = glyph.points || [];\n    const pLen = points.length;\n    const gZone = state.gZone = state.z0 = state.z1 = state.z2 = [];\n    const contours = state.contours = [];\n\n    // Scales the original points and\n    // makes copies for the hinted points.\n    let cp; // current point\n    for (let i = 0; i < pLen; i++) {\n        cp = points[i];\n\n        gZone[i] = new HPoint(\n            cp.x * xScale,\n            cp.y * yScale,\n            cp.lastPointOfContour,\n            cp.onCurve\n        );\n    }\n\n    // Chain links the contours.\n    let sp; // start point\n    let np; // next point\n\n    for (let i = 0; i < pLen; i++) {\n        cp = gZone[i];\n\n        if (!sp) {\n            sp = cp;\n            contours.push(i);\n        }\n\n        if (cp.lastPointOfContour) {\n            cp.nextPointOnContour = sp;\n            sp.prevPointOnContour = cp;\n            sp = undefined;\n        } else {\n            np = gZone[i + 1];\n            cp.nextPointOnContour = np;\n            np.prevPointOnContour = cp;\n        }\n    }\n\n    if (state.inhibitGridFit) return;\n\n    if (exports.DEBUG) {\n        console.log('PROCESSING GLYPH', state.stack);\n        for (let i = 0; i < pLen; i++) {\n            console.log(i, gZone[i].x, gZone[i].y);\n        }\n    }\n\n    gZone.push(\n        new HPoint(0, 0),\n        new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n    );\n\n    exec(state);\n\n    // Removes the extra points.\n    gZone.length -= 2;\n\n    if (exports.DEBUG) {\n        console.log('FINISHED GLYPH', state.stack);\n        for (let i = 0; i < pLen; i++) {\n            console.log(i, gZone[i].x, gZone[i].y);\n        }\n    }\n};\n\n/*\n* Executes the program loaded in state.\n*/\nexec = function(state) {\n    let prog = state.prog;\n\n    if (!prog) return;\n\n    const pLen = prog.length;\n    let ins;\n\n    for (state.ip = 0; state.ip < pLen; state.ip++) {\n        if (exports.DEBUG) state.step++;\n        ins = instructionTable[prog[state.ip]];\n\n        if (!ins) {\n            throw new Error(\n                'unknown instruction: 0x' +\n                Number(prog[state.ip]).toString(16)\n            );\n        }\n\n        ins(state);\n\n        // very extensive debugging for each step\n        /*\n        if (exports.DEBUG) {\n            var da;\n            if (state.gZone) {\n                da = [];\n                for (let i = 0; i < state.gZone.length; i++)\n                {\n                    da.push(i + ' ' +\n                        state.gZone[i].x * 64 + ' ' +\n                        state.gZone[i].y * 64 + ' ' +\n                        (state.gZone[i].xTouched ? 'x' : '') +\n                        (state.gZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('GZ', da);\n            }\n\n            if (state.tZone) {\n                da = [];\n                for (let i = 0; i < state.tZone.length; i++) {\n                    da.push(i + ' ' +\n                        state.tZone[i].x * 64 + ' ' +\n                        state.tZone[i].y * 64 + ' ' +\n                        (state.tZone[i].xTouched ? 'x' : '') +\n                        (state.tZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('TZ', da);\n            }\n\n            if (state.stack.length > 10) {\n                console.log(\n                    state.stack.length,\n                    '...', state.stack.slice(state.stack.length - 10)\n                );\n            } else {\n                console.log(state.stack.length, state.stack);\n            }\n        }\n        */\n    }\n};\n\n/*\n* Initializes the twilight zone.\n*\n* This is only done if a SZPx instruction\n* refers to the twilight zone.\n*/\nfunction initTZone(state)\n{\n    const tZone = state.tZone = new Array(state.gZone.length);\n\n    // no idea if this is actually correct...\n    for (let i = 0; i < tZone.length; i++)\n    {\n        tZone[i] = new HPoint(0, 0);\n    }\n}\n\n/*\n* Skips the instruction pointer ahead over an IF/ELSE block.\n* handleElse .. if true breaks on matching ELSE\n*/\nfunction skip(state, handleElse)\n{\n    const prog = state.prog;\n    let ip = state.ip;\n    let nesting = 1;\n    let ins;\n\n    do {\n        ins = prog[++ip];\n        if (ins === 0x58) // IF\n            nesting++;\n        else if (ins === 0x59) // EIF\n            nesting--;\n        else if (ins === 0x40) // NPUSHB\n            ip += prog[ip + 1] + 1;\n        else if (ins === 0x41) // NPUSHW\n            ip += 2 * prog[ip + 1] + 1;\n        else if (ins >= 0xB0 && ins <= 0xB7) // PUSHB\n            ip += ins - 0xB0 + 1;\n        else if (ins >= 0xB8 && ins <= 0xBF) // PUSHW\n            ip += (ins - 0xB8 + 1) * 2;\n        else if (handleElse && nesting === 1 && ins === 0x1B) // ELSE\n            break;\n    } while (nesting > 0);\n\n    state.ip = ip;\n}\n\n/*----------------------------------------------------------*\n*          And then a lot of instructions...                *\n*----------------------------------------------------------*/\n\n// SVTCA[a] Set freedom and projection Vectors To Coordinate Axis\n// 0x00-0x01\nfunction SVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SVTCA[' + v.axis + ']');\n\n    state.fv = state.pv = state.dpv = v;\n}\n\n// SPVTCA[a] Set Projection Vector to Coordinate Axis\n// 0x02-0x03\nfunction SPVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SPVTCA[' + v.axis + ']');\n\n    state.pv = state.dpv = v;\n}\n\n// SFVTCA[a] Set Freedom Vector to Coordinate Axis\n// 0x04-0x05\nfunction SFVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SFVTCA[' + v.axis + ']');\n\n    state.fv = v;\n}\n\n// SPVTL[a] Set Projection Vector To Line\n// 0x06-0x07\nfunction SPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.pv = state.dpv = getUnitVector(dx, dy);\n}\n\n// SFVTL[a] Set Freedom Vector To Line\n// 0x08-0x09\nfunction SFVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SFVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.fv = getUnitVector(dx, dy);\n}\n\n// SPVFS[] Set Projection Vector From Stack\n// 0x0A\nfunction SPVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.pv = state.dpv = getUnitVector(x, y);\n}\n\n// SFVFS[] Set Freedom Vector From Stack\n// 0x0B\nfunction SFVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.fv = getUnitVector(x, y);\n}\n\n// GPV[] Get Projection Vector\n// 0x0C\nfunction GPV(state) {\n    const stack = state.stack;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'GPV[]');\n\n    stack.push(pv.x * 0x4000);\n    stack.push(pv.y * 0x4000);\n}\n\n// GFV[] Get Freedom Vector\n// 0x0C\nfunction GFV(state) {\n    const stack = state.stack;\n    const fv = state.fv;\n\n    if (exports.DEBUG) console.log(state.step, 'GFV[]');\n\n    stack.push(fv.x * 0x4000);\n    stack.push(fv.y * 0x4000);\n}\n\n// SFVTPV[] Set Freedom Vector To Projection Vector\n// 0x0E\nfunction SFVTPV(state) {\n    state.fv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'SFVTPV[]');\n}\n\n// ISECT[] moves point p to the InterSECTion of two lines\n// 0x0F\nfunction ISECT(state)\n{\n    const stack = state.stack;\n    const pa0i = stack.pop();\n    const pa1i = stack.pop();\n    const pb0i = stack.pop();\n    const pb1i = stack.pop();\n    const pi = stack.pop();\n    const z0 = state.z0;\n    const z1 = state.z1;\n    const pa0 = z0[pa0i];\n    const pa1 = z0[pa1i];\n    const pb0 = z1[pb0i];\n    const pb1 = z1[pb1i];\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log('ISECT[], ', pa0i, pa1i, pb0i, pb1i, pi);\n\n    // math from\n    // en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n\n    const x1 = pa0.x;\n    const y1 = pa0.y;\n    const x2 = pa1.x;\n    const y2 = pa1.y;\n    const x3 = pb0.x;\n    const y3 = pb0.y;\n    const x4 = pb1.x;\n    const y4 = pb1.y;\n\n    const div = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    const f1 = x1 * y2 - y1 * x2;\n    const f2 = x3 * y4 - y3 * x4;\n\n    p.x = (f1 * (x3 - x4) - f2 * (x1 - x2)) / div;\n    p.y = (f1 * (y3 - y4) - f2 * (y1 - y2)) / div;\n}\n\n// SRP0[] Set Reference Point 0\n// 0x10\nfunction SRP0(state) {\n    state.rp0 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP0[]', state.rp0);\n}\n\n// SRP1[] Set Reference Point 1\n// 0x11\nfunction SRP1(state) {\n    state.rp1 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP1[]', state.rp1);\n}\n\n// SRP1[] Set Reference Point 2\n// 0x12\nfunction SRP2(state) {\n    state.rp2 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP2[]', state.rp2);\n}\n\n// SZP0[] Set Zone Pointer 0\n// 0x13\nfunction SZP0(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP0[]', n);\n\n    state.zp0 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP1[] Set Zone Pointer 1\n// 0x14\nfunction SZP1(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP1[]', n);\n\n    state.zp1 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z1 = state.tZone;\n            break;\n        case 1 :\n            state.z1 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP2[] Set Zone Pointer 2\n// 0x15\nfunction SZP2(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP2[]', n);\n\n    state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZPS[] Set Zone PointerS\n// 0x16\nfunction SZPS(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZPS[]', n);\n\n    state.zp0 = state.zp1 = state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.z1 = state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.z1 = state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SLOOP[] Set LOOP variable\n// 0x17\nfunction SLOOP(state) {\n    state.loop = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SLOOP[]', state.loop);\n}\n\n// RTG[] Round To Grid\n// 0x18\nfunction RTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTG[]');\n\n    state.round = roundToGrid;\n}\n\n// RTHG[] Round To Half Grid\n// 0x19\nfunction RTHG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTHG[]');\n\n    state.round = roundToHalfGrid;\n}\n\n// SMD[] Set Minimum Distance\n// 0x1A\nfunction SMD(state) {\n    const d = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SMD[]', d);\n\n    state.minDis = d / 0x40;\n}\n\n// ELSE[] ELSE clause\n// 0x1B\nfunction ELSE(state) {\n    // This instruction has been reached by executing a then branch\n    // so it just skips ahead until matching EIF.\n    //\n    // In case the IF was negative the IF[] instruction already\n    // skipped forward over the ELSE[]\n\n    if (exports.DEBUG) console.log(state.step, 'ELSE[]');\n\n    skip(state, false);\n}\n\n// JMPR[] JuMP Relative\n// 0x1C\nfunction JMPR(state) {\n    const o = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'JMPR[]', o);\n\n    // A jump by 1 would do nothing.\n    state.ip += o - 1;\n}\n\n// SCVTCI[] Set Control Value Table Cut-In\n// 0x1D\nfunction SCVTCI(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SCVTCI[]', n);\n\n    state.cvCutIn = n / 0x40;\n}\n\n// DUP[] DUPlicate top stack element\n// 0x20\nfunction DUP(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DUP[]');\n\n    stack.push(stack[stack.length - 1]);\n}\n\n// POP[] POP top stack element\n// 0x21\nfunction POP(state) {\n    if (exports.DEBUG) console.log(state.step, 'POP[]');\n\n    state.stack.pop();\n}\n\n// CLEAR[] CLEAR the stack\n// 0x22\nfunction CLEAR(state) {\n    if (exports.DEBUG) console.log(state.step, 'CLEAR[]');\n\n    state.stack.length = 0;\n}\n\n// SWAP[] SWAP the top two elements on the stack\n// 0x23\nfunction SWAP(state) {\n    const stack = state.stack;\n\n    const a = stack.pop();\n    const b = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SWAP[]');\n\n    stack.push(a);\n    stack.push(b);\n}\n\n// DEPTH[] DEPTH of the stack\n// 0x24\nfunction DEPTH(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DEPTH[]');\n\n    stack.push(stack.length);\n}\n\n// LOOPCALL[] LOOPCALL function\n// 0x2A\nfunction LOOPCALL(state) {\n    const stack = state.stack;\n    const fn = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LOOPCALL[]', fn, c);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    for (let i = 0; i < c; i++) {\n        exec(state);\n\n        if (exports.DEBUG) console.log(\n            ++state.step,\n            i + 1 < c ? 'next loopcall' : 'done loopcall',\n            i\n        );\n    }\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n}\n\n// CALL[] CALL function\n// 0x2B\nfunction CALL(state) {\n    const fn = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CALL[]', fn);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    exec(state);\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n\n    if (exports.DEBUG) console.log(++state.step, 'returning from', fn);\n}\n\n// CINDEX[] Copy the INDEXed element to the top of the stack\n// 0x25\nfunction CINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CINDEX[]', k);\n\n    // In case of k == 1, it copies the last element after popping\n    // thus stack.length - k.\n    stack.push(stack[stack.length - k]);\n}\n\n// MINDEX[] Move the INDEXed element to the top of the stack\n// 0x26\nfunction MINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MINDEX[]', k);\n\n    stack.push(stack.splice(stack.length - k, 1)[0]);\n}\n\n// FDEF[] Function DEFinition\n// 0x2C\nfunction FDEF(state) {\n    if (state.env !== 'fpgm') throw new Error('FDEF not allowed here');\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    const fn = stack.pop();\n    const ipBegin = ip;\n\n    if (exports.DEBUG) console.log(state.step, 'FDEF[]', fn);\n\n    while (prog[++ip] !== 0x2D);\n\n    state.ip = ip;\n    state.funcs[fn] = prog.slice(ipBegin + 1, ip);\n}\n\n// MDAP[a] Move Direct Absolute Point\n// 0x2E-0x2F\nfunction MDAP(round, state) {\n    const pi = state.stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'MDAP[' + round + ']', pi);\n\n    let d = pv.distance(p, HPZero);\n\n    if (round) d = state.round(d);\n\n    fv.setRelative(p, HPZero, d, pv);\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// IUP[a] Interpolate Untouched Points through the outline\n// 0x30\nfunction IUP(v, state) {\n    const z2 = state.z2;\n    const pLen = z2.length - 2;\n    let cp;\n    let pp;\n    let np;\n\n    if (exports.DEBUG) console.log(state.step, 'IUP[' + v.axis + ']');\n\n    for (let i = 0; i < pLen; i++) {\n        cp = z2[i]; // current point\n\n        // if this point has been touched go on\n        if (v.touched(cp)) continue;\n\n        pp = cp.prevTouched(v);\n\n        // no point on the contour has been touched?\n        if (pp === cp) continue;\n\n        np = cp.nextTouched(v);\n\n        if (pp === np) {\n            // only one point on the contour has been touched\n            // so simply moves the point like that\n\n            v.setRelative(cp, cp, v.distance(pp, pp, false, true), v, true);\n        }\n\n        v.interpolate(cp, pp, np, v);\n    }\n}\n\n// SHP[] SHift Point using reference point\n// 0x32-0x33\nfunction SHP(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let loop = state.loop;\n    const z2 = state.z2;\n\n    while (loop--)\n    {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        const d = pv.distance(rp, rp, false, true);\n        fv.setRelative(p, p, d, pv);\n        fv.touch(p);\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ?\n                   'loop ' + (state.loop - loop) + ': ' :\n                   ''\n                ) +\n                'SHP[' + (a ? 'rp1' : 'rp2') + ']', pi\n            );\n        }\n    }\n\n    state.loop = 1;\n}\n\n// SHC[] SHift Contour using reference point\n// 0x36-0x37\nfunction SHC(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    const ci = stack.pop();\n    const sp = state.z2[state.contours[ci]];\n    let p = sp;\n\n    if (exports.DEBUG) console.log(state.step, 'SHC[' + a + ']', ci);\n\n    const d = pv.distance(rp, rp, false, true);\n\n    do {\n        if (p !== rp) fv.setRelative(p, p, d, pv);\n        p = p.nextPointOnContour;\n    } while (p !== sp);\n}\n\n// SHZ[] SHift Zone using reference point\n// 0x36-0x37\nfunction SHZ(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SHZ[' + a + ']', e);\n\n    let z;\n    switch (e) {\n        case 0 : z = state.tZone; break;\n        case 1 : z = state.gZone; break;\n        default : throw new Error('Invalid zone');\n    }\n\n    let p;\n    const d = pv.distance(rp, rp, false, true);\n    const pLen = z.length - 2;\n    for (let i = 0; i < pLen; i++)\n    {\n        p = z[i];\n        fv.setRelative(p, p, d, pv);\n        //if (p !== rp) fv.setRelative(p, p, d, pv);\n    }\n}\n\n// SHPIX[] SHift point by a PIXel amount\n// 0x38\nfunction SHPIX(state) {\n    const stack = state.stack;\n    let loop = state.loop;\n    const fv = state.fv;\n    const d = stack.pop() / 0x40;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'SHPIX[]', pi, d\n            );\n        }\n\n        fv.setRelative(p, p, d);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// IP[] Interpolate Point\n// 0x39\nfunction IP(state) {\n    const stack = state.stack;\n    const rp1i = state.rp1;\n    const rp2i = state.rp2;\n    let loop = state.loop;\n    const rp1 = state.z0[rp1i];\n    const rp2 = state.z1[rp2i];\n    const fv = state.fv;\n    const pv = state.dpv;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'IP[]', pi, rp1i, '<->', rp2i\n            );\n        }\n\n        fv.interpolate(p, rp1, rp2, pv);\n\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// MSIRP[a] Move Stack Indirect Relative Point\n// 0x3A-0x3B\nfunction MSIRP(a, state) {\n    const stack = state.stack;\n    const d = stack.pop() / 64;\n    const pi = stack.pop();\n    const p = state.z1[pi];\n    const rp0 = state.z0[state.rp0];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    fv.setRelative(p, rp0, d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) console.log(state.step, 'MSIRP[' + a + ']', d, pi);\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (a) state.rp0 = pi;\n}\n\n// ALIGNRP[] Align to reference point.\n// 0x3C\nfunction ALIGNRP(state) {\n    const stack = state.stack;\n    const rp0i = state.rp0;\n    const rp0 = state.z0[rp0i];\n    let loop = state.loop;\n    const fv = state.fv;\n    const pv = state.pv;\n    const z1 = state.z1;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z1[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'ALIGNRP[]', pi\n            );\n        }\n\n        fv.setRelative(p, rp0, 0, pv);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// RTG[] Round To Double Grid\n// 0x3D\nfunction RTDG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTDG[]');\n\n    state.round = roundToDoubleGrid;\n}\n\n// MIAP[a] Move Indirect Absolute Point\n// 0x3E-0x3F\nfunction MIAP(round, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const pi = stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let cv = state.cvt[n];\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            'MIAP[' + round + ']',\n            n, '(', cv, ')', pi\n        );\n    }\n\n    let d = pv.distance(p, HPZero);\n\n    if (round) {\n        if (Math.abs(d - cv) < state.cvCutIn) d = cv;\n\n        d = state.round(d);\n    }\n\n    fv.setRelative(p, HPZero, d, pv);\n\n    if (state.zp0 === 0) {\n        p.xo = p.x;\n        p.yo = p.y;\n    }\n\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// NPUSB[] PUSH N Bytes\n// 0x40\nfunction NPUSHB(state) {\n    const prog = state.prog;\n    let ip = state.ip;\n    const stack = state.stack;\n\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHB[]', n);\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// NPUSHW[] PUSH N Words\n// 0x41\nfunction NPUSHW(state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHW[]', n);\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// WS[] Write Store\n// 0x42\nfunction WS(state) {\n    const stack = state.stack;\n    let store = state.store;\n\n    if (!store) store = state.store = [];\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WS', v, l);\n\n    store[l] = v;\n}\n\n// RS[] Read Store\n// 0x43\nfunction RS(state) {\n    const stack = state.stack;\n    const store = state.store;\n\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RS', l);\n\n    const v = (store && store[l]) || 0;\n\n    stack.push(v);\n}\n\n// WCVTP[] Write Control Value Table in Pixel units\n// 0x44\nfunction WCVTP(state) {\n    const stack = state.stack;\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTP', v, l);\n\n    state.cvt[l] = v / 0x40;\n}\n\n// RCVT[] Read Control Value Table entry\n// 0x45\nfunction RCVT(state) {\n    const stack = state.stack;\n    const cvte = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RCVT', cvte);\n\n    stack.push(state.cvt[cvte] * 0x40);\n}\n\n// GC[] Get Coordinate projected onto the projection vector\n// 0x46-0x47\nfunction GC(a, state) {\n    const stack = state.stack;\n    const pi = stack.pop();\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log(state.step, 'GC[' + a + ']', pi);\n\n    stack.push(state.dpv.distance(p, HPZero, a, false) * 0x40);\n}\n\n// MD[a] Measure Distance\n// 0x49-0x4A\nfunction MD(a, state) {\n    const stack = state.stack;\n    const pi2 = stack.pop();\n    const pi1 = stack.pop();\n    const p2 = state.z1[pi2];\n    const p1 = state.z0[pi1];\n    const d = state.dpv.distance(p1, p2, a, a);\n\n    if (exports.DEBUG) console.log(state.step, 'MD[' + a + ']', pi2, pi1, '->', d);\n\n    state.stack.push(Math.round(d * 64));\n}\n\n// MPPEM[] Measure Pixels Per EM\n// 0x4B\nfunction MPPEM(state) {\n    if (exports.DEBUG) console.log(state.step, 'MPPEM[]');\n    state.stack.push(state.ppem);\n}\n\n// FLIPON[] set the auto FLIP Boolean to ON\n// 0x4D\nfunction FLIPON(state) {\n    if (exports.DEBUG) console.log(state.step, 'FLIPON[]');\n    state.autoFlip = true;\n}\n\n// LT[] Less Than\n// 0x50\nfunction LT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LT[]', e2, e1);\n\n    stack.push(e1 < e2 ? 1 : 0);\n}\n\n// LTEQ[] Less Than or EQual\n// 0x53\nfunction LTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LTEQ[]', e2, e1);\n\n    stack.push(e1 <= e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than\n// 0x52\nfunction GT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GT[]', e2, e1);\n\n    stack.push(e1 > e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than or EQual\n// 0x53\nfunction GTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GTEQ[]', e2, e1);\n\n    stack.push(e1 >= e2 ? 1 : 0);\n}\n\n// EQ[] EQual\n// 0x54\nfunction EQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EQ[]', e2, e1);\n\n    stack.push(e2 === e1 ? 1 : 0);\n}\n\n// NEQ[] Not EQual\n// 0x55\nfunction NEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEQ[]', e2, e1);\n\n    stack.push(e2 !== e1 ? 1 : 0);\n}\n\n// ODD[] ODD\n// 0x56\nfunction ODD(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ODD[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 1 : 0);\n}\n\n// EVEN[] EVEN\n// 0x57\nfunction EVEN(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EVEN[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 0 : 1);\n}\n\n// IF[] IF test\n// 0x58\nfunction IF(state) {\n    let test = state.stack.pop();\n    let ins;\n\n    if (exports.DEBUG) console.log(state.step, 'IF[]', test);\n\n    // if test is true it just continues\n    // if not the ip is skipped until matching ELSE or EIF\n    if (!test) {\n        skip(state, true);\n\n        if (exports.DEBUG) console.log(state.step, ins === 0x1B ? 'ELSE[]' : 'EIF[]');\n    }\n}\n\n// EIF[] End IF\n// 0x59\nfunction EIF(state) {\n    // this can be reached normally when\n    // executing an else branch.\n    // -> just ignore it\n\n    if (exports.DEBUG) console.log(state.step, 'EIF[]');\n}\n\n// AND[] logical AND\n// 0x5A\nfunction AND(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'AND[]', e2, e1);\n\n    stack.push(e2 && e1 ? 1 : 0);\n}\n\n// OR[] logical OR\n// 0x5B\nfunction OR(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'OR[]', e2, e1);\n\n    stack.push(e2 || e1 ? 1 : 0);\n}\n\n// NOT[] logical NOT\n// 0x5C\nfunction NOT(state) {\n    const stack = state.stack;\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NOT[]', e);\n\n    stack.push(e ? 0 : 1);\n}\n\n// DELTAP1[] DELTA exception P1\n// DELTAP2[] DELTA exception P2\n// DELTAP3[] DELTA exception P3\n// 0x5D, 0x71, 0x72\nfunction DELTAP123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const fv = state.fv;\n    const pv = state.pv;\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n    const z0 = state.z0;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAP[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++) {\n        const pi = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n        if (exports.DEBUG) console.log(state.step, 'DELTAPFIX', pi, 'by', mag * ds);\n\n        const p = z0[pi];\n        fv.setRelative(p, p, mag * ds, pv);\n    }\n}\n\n// SDB[] Set Delta Base in the graphics state\n// 0x5E\nfunction SDB(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDB[]', n);\n\n    state.deltaBase = n;\n}\n\n// SDS[] Set Delta Shift in the graphics state\n// 0x5F\nfunction SDS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDS[]', n);\n\n    state.deltaShift = Math.pow(0.5, n);\n}\n\n// ADD[] ADD\n// 0x60\nfunction ADD(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ADD[]', n2, n1);\n\n    stack.push(n1 + n2);\n}\n\n// SUB[] SUB\n// 0x61\nfunction SUB(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SUB[]', n2, n1);\n\n    stack.push(n1 - n2);\n}\n\n// DIV[] DIV\n// 0x62\nfunction DIV(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'DIV[]', n2, n1);\n\n    stack.push(n1 * 64 / n2);\n}\n\n// MUL[] MUL\n// 0x63\nfunction MUL(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MUL[]', n2, n1);\n\n    stack.push(n1 * n2 / 64);\n}\n\n// ABS[] ABSolute value\n// 0x64\nfunction ABS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ABS[]', n);\n\n    stack.push(Math.abs(n));\n}\n\n// NEG[] NEGate\n// 0x65\nfunction NEG(state) {\n    const stack = state.stack;\n    let n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEG[]', n);\n\n    stack.push(-n);\n}\n\n// FLOOR[] FLOOR\n// 0x66\nfunction FLOOR(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'FLOOR[]', n);\n\n    stack.push(Math.floor(n / 0x40) * 0x40);\n}\n\n// CEILING[] CEILING\n// 0x67\nfunction CEILING(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CEILING[]', n);\n\n    stack.push(Math.ceil(n / 0x40) * 0x40);\n}\n\n// ROUND[ab] ROUND value\n// 0x68-0x6B\nfunction ROUND(dt, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROUND[]');\n\n    stack.push(state.round(n / 0x40) * 0x40);\n}\n\n// WCVTF[] Write Control Value Table in Funits\n// 0x70\nfunction WCVTF(state) {\n    const stack = state.stack;\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTF[]', v, l);\n\n    state.cvt[l] = v * state.ppem / state.font.unitsPerEm;\n}\n\n// DELTAC1[] DELTA exception C1\n// DELTAC2[] DELTA exception C2\n// DELTAC3[] DELTA exception C3\n// 0x73, 0x74, 0x75\nfunction DELTAC123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAC[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++) {\n        const c = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n\n        const delta = mag * ds;\n\n        if (exports.DEBUG) console.log(state.step, 'DELTACFIX', c, 'by', delta);\n\n        state.cvt[c] += delta;\n    }\n}\n\n// SROUND[] Super ROUND\n// 0x76\nfunction SROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = 0.5;\n            break;\n        case 0x40:\n            period = 1;\n            break;\n        case 0x80:\n            period = 2;\n            break;\n        default:\n            throw new Error('invalid SROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default: throw new Error('invalid SROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// S45ROUND[] Super ROUND 45 degrees\n// 0x77\nfunction S45ROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'S45ROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = Math.sqrt(2) / 2;\n            break;\n        case 0x40:\n            period = Math.sqrt(2);\n            break;\n        case 0x80:\n            period = 2 * Math.sqrt(2);\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// ROFF[] Round Off\n// 0x7A\nfunction ROFF(state) {\n    if (exports.DEBUG) console.log(state.step, 'ROFF[]');\n\n    state.round = roundOff;\n}\n\n// RUTG[] Round Up To Grid\n// 0x7C\nfunction RUTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RUTG[]');\n\n    state.round = roundUpToGrid;\n}\n\n// RDTG[] Round Down To Grid\n// 0x7D\nfunction RDTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RDTG[]');\n\n    state.round = roundDownToGrid;\n}\n\n// SCANCTRL[] SCAN conversion ConTRoL\n// 0x85\nfunction SCANCTRL(state) {\n    const n = state.stack.pop();\n\n    // ignored by opentype.js\n\n    if (exports.DEBUG) console.log(state.step, 'SCANCTRL[]', n);\n}\n\n// SDPVTL[a] Set Dual Projection Vector To Line\n// 0x86-0x87\nfunction SDPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log(state.step, 'SDPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.dpv = getUnitVector(dx, dy);\n}\n\n// GETINFO[] GET INFOrmation\n// 0x88\nfunction GETINFO(state) {\n    const stack = state.stack;\n    const sel = stack.pop();\n    let r = 0;\n\n    if (exports.DEBUG) console.log(state.step, 'GETINFO[]', sel);\n\n    // v35 as in no subpixel hinting\n    if (sel & 0x01) r = 35;\n\n    // TODO rotation and stretch currently not supported\n    // and thus those GETINFO are always 0.\n\n    // opentype.js is always gray scaling\n    if (sel & 0x20) r |= 0x1000;\n\n    stack.push(r);\n}\n\n// ROLL[] ROLL the top three stack elements\n// 0x8A\nfunction ROLL(state) {\n    const stack = state.stack;\n    const a = stack.pop();\n    const b = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROLL[]');\n\n    stack.push(b);\n    stack.push(a);\n    stack.push(c);\n}\n\n// MAX[] MAXimum of top two stack elements\n// 0x8B\nfunction MAX(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MAX[]', e2, e1);\n\n    stack.push(Math.max(e1, e2));\n}\n\n// MIN[] MINimum of top two stack elements\n// 0x8C\nfunction MIN(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MIN[]', e2, e1);\n\n    stack.push(Math.min(e1, e2));\n}\n\n// SCANTYPE[] SCANTYPE\n// 0x8D\nfunction SCANTYPE(state) {\n    const n = state.stack.pop();\n    // ignored by opentype.js\n    if (exports.DEBUG) console.log(state.step, 'SCANTYPE[]', n);\n}\n\n// INSTCTRL[] INSTCTRL\n// 0x8D\nfunction INSTCTRL(state) {\n    const s = state.stack.pop();\n    let v = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'INSTCTRL[]', s, v);\n\n    switch (s) {\n        case 1 : state.inhibitGridFit = !!v; return;\n        case 2 : state.ignoreCvt = !!v; return;\n        default: throw new Error('invalid INSTCTRL[] selector');\n    }\n}\n\n// PUSHB[abc] PUSH Bytes\n// 0xB0-0xB7\nfunction PUSHB(n, state) {\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    if (exports.DEBUG) console.log(state.step, 'PUSHB[' + n + ']');\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// PUSHW[abc] PUSH Words\n// 0xB8-0xBF\nfunction PUSHW(n, state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.ip, 'PUSHW[' + n + ']');\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// MDRP[abcde] Move Direct Relative Point\n// 0xD0-0xEF\n// (if indirect is 0)\n//\n// and\n//\n// MIRP[abcde] Move Indirect Relative Point\n// 0xE0-0xFF\n// (if indirect is 1)\n\nfunction MDRP_MIRP(indirect, setRp0, keepD, ro, dt, state) {\n    const stack = state.stack;\n    const cvte = indirect && stack.pop();\n    const pi = stack.pop();\n    const rp0i = state.rp0;\n    const rp = state.z0[rp0i];\n    const p = state.z1[pi];\n\n    const md = state.minDis;\n    const fv = state.fv;\n    const pv = state.dpv;\n    let od; // original distance\n    let d; // moving distance\n    let sign; // sign of distance\n    let cv;\n\n    d = od = pv.distance(p, rp, true, true);\n    sign = d >= 0 ? 1 : -1; // Math.sign would be 0 in case of 0\n\n    // TODO consider autoFlip\n    d = Math.abs(d);\n\n    if (indirect) {\n        cv = state.cvt[cvte];\n\n        if (ro && Math.abs(d - cv) < state.cvCutIn) d = cv;\n    }\n\n    if (keepD && d < md) d = md;\n\n    if (ro) d = state.round(d);\n\n    fv.setRelative(p, rp, sign * d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            (indirect ? 'MIRP[' : 'MDRP[') +\n            (setRp0 ? 'M' : 'm') +\n            (keepD ? '>' : '_') +\n            (ro ? 'R' : '_') +\n            (dt === 0 ? 'Gr' : (dt === 1 ? 'Bl' : (dt === 2 ? 'Wh' : ''))) +\n            ']',\n            indirect ?\n                cvte + '(' + state.cvt[cvte] + ',' +  cv + ')' :\n                '',\n            pi,\n            '(d =', od, '->', sign * d, ')'\n        );\n    }\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (setRp0) state.rp0 = pi;\n}\n\n/*\n* The instruction table.\n*/\ninstructionTable = [\n    /* 0x00 */ SVTCA.bind(undefined, yUnitVector),\n    /* 0x01 */ SVTCA.bind(undefined, xUnitVector),\n    /* 0x02 */ SPVTCA.bind(undefined, yUnitVector),\n    /* 0x03 */ SPVTCA.bind(undefined, xUnitVector),\n    /* 0x04 */ SFVTCA.bind(undefined, yUnitVector),\n    /* 0x05 */ SFVTCA.bind(undefined, xUnitVector),\n    /* 0x06 */ SPVTL.bind(undefined, 0),\n    /* 0x07 */ SPVTL.bind(undefined, 1),\n    /* 0x08 */ SFVTL.bind(undefined, 0),\n    /* 0x09 */ SFVTL.bind(undefined, 1),\n    /* 0x0A */ SPVFS,\n    /* 0x0B */ SFVFS,\n    /* 0x0C */ GPV,\n    /* 0x0D */ GFV,\n    /* 0x0E */ SFVTPV,\n    /* 0x0F */ ISECT,\n    /* 0x10 */ SRP0,\n    /* 0x11 */ SRP1,\n    /* 0x12 */ SRP2,\n    /* 0x13 */ SZP0,\n    /* 0x14 */ SZP1,\n    /* 0x15 */ SZP2,\n    /* 0x16 */ SZPS,\n    /* 0x17 */ SLOOP,\n    /* 0x18 */ RTG,\n    /* 0x19 */ RTHG,\n    /* 0x1A */ SMD,\n    /* 0x1B */ ELSE,\n    /* 0x1C */ JMPR,\n    /* 0x1D */ SCVTCI,\n    /* 0x1E */ undefined,   // TODO SSWCI\n    /* 0x1F */ undefined,   // TODO SSW\n    /* 0x20 */ DUP,\n    /* 0x21 */ POP,\n    /* 0x22 */ CLEAR,\n    /* 0x23 */ SWAP,\n    /* 0x24 */ DEPTH,\n    /* 0x25 */ CINDEX,\n    /* 0x26 */ MINDEX,\n    /* 0x27 */ undefined,   // TODO ALIGNPTS\n    /* 0x28 */ undefined,\n    /* 0x29 */ undefined,   // TODO UTP\n    /* 0x2A */ LOOPCALL,\n    /* 0x2B */ CALL,\n    /* 0x2C */ FDEF,\n    /* 0x2D */ undefined,   // ENDF (eaten by FDEF)\n    /* 0x2E */ MDAP.bind(undefined, 0),\n    /* 0x2F */ MDAP.bind(undefined, 1),\n    /* 0x30 */ IUP.bind(undefined, yUnitVector),\n    /* 0x31 */ IUP.bind(undefined, xUnitVector),\n    /* 0x32 */ SHP.bind(undefined, 0),\n    /* 0x33 */ SHP.bind(undefined, 1),\n    /* 0x34 */ SHC.bind(undefined, 0),\n    /* 0x35 */ SHC.bind(undefined, 1),\n    /* 0x36 */ SHZ.bind(undefined, 0),\n    /* 0x37 */ SHZ.bind(undefined, 1),\n    /* 0x38 */ SHPIX,\n    /* 0x39 */ IP,\n    /* 0x3A */ MSIRP.bind(undefined, 0),\n    /* 0x3B */ MSIRP.bind(undefined, 1),\n    /* 0x3C */ ALIGNRP,\n    /* 0x3D */ RTDG,\n    /* 0x3E */ MIAP.bind(undefined, 0),\n    /* 0x3F */ MIAP.bind(undefined, 1),\n    /* 0x40 */ NPUSHB,\n    /* 0x41 */ NPUSHW,\n    /* 0x42 */ WS,\n    /* 0x43 */ RS,\n    /* 0x44 */ WCVTP,\n    /* 0x45 */ RCVT,\n    /* 0x46 */ GC.bind(undefined, 0),\n    /* 0x47 */ GC.bind(undefined, 1),\n    /* 0x48 */ undefined,   // TODO SCFS\n    /* 0x49 */ MD.bind(undefined, 0),\n    /* 0x4A */ MD.bind(undefined, 1),\n    /* 0x4B */ MPPEM,\n    /* 0x4C */ undefined,   // TODO MPS\n    /* 0x4D */ FLIPON,\n    /* 0x4E */ undefined,   // TODO FLIPOFF\n    /* 0x4F */ undefined,   // TODO DEBUG\n    /* 0x50 */ LT,\n    /* 0x51 */ LTEQ,\n    /* 0x52 */ GT,\n    /* 0x53 */ GTEQ,\n    /* 0x54 */ EQ,\n    /* 0x55 */ NEQ,\n    /* 0x56 */ ODD,\n    /* 0x57 */ EVEN,\n    /* 0x58 */ IF,\n    /* 0x59 */ EIF,\n    /* 0x5A */ AND,\n    /* 0x5B */ OR,\n    /* 0x5C */ NOT,\n    /* 0x5D */ DELTAP123.bind(undefined, 1),\n    /* 0x5E */ SDB,\n    /* 0x5F */ SDS,\n    /* 0x60 */ ADD,\n    /* 0x61 */ SUB,\n    /* 0x62 */ DIV,\n    /* 0x63 */ MUL,\n    /* 0x64 */ ABS,\n    /* 0x65 */ NEG,\n    /* 0x66 */ FLOOR,\n    /* 0x67 */ CEILING,\n    /* 0x68 */ ROUND.bind(undefined, 0),\n    /* 0x69 */ ROUND.bind(undefined, 1),\n    /* 0x6A */ ROUND.bind(undefined, 2),\n    /* 0x6B */ ROUND.bind(undefined, 3),\n    /* 0x6C */ undefined,   // TODO NROUND[ab]\n    /* 0x6D */ undefined,   // TODO NROUND[ab]\n    /* 0x6E */ undefined,   // TODO NROUND[ab]\n    /* 0x6F */ undefined,   // TODO NROUND[ab]\n    /* 0x70 */ WCVTF,\n    /* 0x71 */ DELTAP123.bind(undefined, 2),\n    /* 0x72 */ DELTAP123.bind(undefined, 3),\n    /* 0x73 */ DELTAC123.bind(undefined, 1),\n    /* 0x74 */ DELTAC123.bind(undefined, 2),\n    /* 0x75 */ DELTAC123.bind(undefined, 3),\n    /* 0x76 */ SROUND,\n    /* 0x77 */ S45ROUND,\n    /* 0x78 */ undefined,   // TODO JROT[]\n    /* 0x79 */ undefined,   // TODO JROF[]\n    /* 0x7A */ ROFF,\n    /* 0x7B */ undefined,\n    /* 0x7C */ RUTG,\n    /* 0x7D */ RDTG,\n    /* 0x7E */ POP, // actually SANGW, supposed to do only a pop though\n    /* 0x7F */ POP, // actually AA, supposed to do only a pop though\n    /* 0x80 */ undefined,   // TODO FLIPPT\n    /* 0x81 */ undefined,   // TODO FLIPRGON\n    /* 0x82 */ undefined,   // TODO FLIPRGOFF\n    /* 0x83 */ undefined,\n    /* 0x84 */ undefined,\n    /* 0x85 */ SCANCTRL,\n    /* 0x86 */ SDPVTL.bind(undefined, 0),\n    /* 0x87 */ SDPVTL.bind(undefined, 1),\n    /* 0x88 */ GETINFO,\n    /* 0x89 */ undefined,   // TODO IDEF\n    /* 0x8A */ ROLL,\n    /* 0x8B */ MAX,\n    /* 0x8C */ MIN,\n    /* 0x8D */ SCANTYPE,\n    /* 0x8E */ INSTCTRL,\n    /* 0x8F */ undefined,\n    /* 0x90 */ undefined,\n    /* 0x91 */ undefined,\n    /* 0x92 */ undefined,\n    /* 0x93 */ undefined,\n    /* 0x94 */ undefined,\n    /* 0x95 */ undefined,\n    /* 0x96 */ undefined,\n    /* 0x97 */ undefined,\n    /* 0x98 */ undefined,\n    /* 0x99 */ undefined,\n    /* 0x9A */ undefined,\n    /* 0x9B */ undefined,\n    /* 0x9C */ undefined,\n    /* 0x9D */ undefined,\n    /* 0x9E */ undefined,\n    /* 0x9F */ undefined,\n    /* 0xA0 */ undefined,\n    /* 0xA1 */ undefined,\n    /* 0xA2 */ undefined,\n    /* 0xA3 */ undefined,\n    /* 0xA4 */ undefined,\n    /* 0xA5 */ undefined,\n    /* 0xA6 */ undefined,\n    /* 0xA7 */ undefined,\n    /* 0xA8 */ undefined,\n    /* 0xA9 */ undefined,\n    /* 0xAA */ undefined,\n    /* 0xAB */ undefined,\n    /* 0xAC */ undefined,\n    /* 0xAD */ undefined,\n    /* 0xAE */ undefined,\n    /* 0xAF */ undefined,\n    /* 0xB0 */ PUSHB.bind(undefined, 1),\n    /* 0xB1 */ PUSHB.bind(undefined, 2),\n    /* 0xB2 */ PUSHB.bind(undefined, 3),\n    /* 0xB3 */ PUSHB.bind(undefined, 4),\n    /* 0xB4 */ PUSHB.bind(undefined, 5),\n    /* 0xB5 */ PUSHB.bind(undefined, 6),\n    /* 0xB6 */ PUSHB.bind(undefined, 7),\n    /* 0xB7 */ PUSHB.bind(undefined, 8),\n    /* 0xB8 */ PUSHW.bind(undefined, 1),\n    /* 0xB9 */ PUSHW.bind(undefined, 2),\n    /* 0xBA */ PUSHW.bind(undefined, 3),\n    /* 0xBB */ PUSHW.bind(undefined, 4),\n    /* 0xBC */ PUSHW.bind(undefined, 5),\n    /* 0xBD */ PUSHW.bind(undefined, 6),\n    /* 0xBE */ PUSHW.bind(undefined, 7),\n    /* 0xBF */ PUSHW.bind(undefined, 8),\n    /* 0xC0 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 0),\n    /* 0xC1 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 1),\n    /* 0xC2 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 2),\n    /* 0xC3 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 3),\n    /* 0xC4 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 0),\n    /* 0xC5 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 1),\n    /* 0xC6 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 2),\n    /* 0xC7 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 3),\n    /* 0xC8 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 0),\n    /* 0xC9 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 1),\n    /* 0xCA */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 2),\n    /* 0xCB */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 3),\n    /* 0xCC */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 0),\n    /* 0xCD */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 1),\n    /* 0xCE */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 2),\n    /* 0xCF */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 3),\n    /* 0xD0 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 0),\n    /* 0xD1 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 1),\n    /* 0xD2 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 2),\n    /* 0xD3 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 3),\n    /* 0xD4 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 0),\n    /* 0xD5 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 1),\n    /* 0xD6 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 2),\n    /* 0xD7 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 3),\n    /* 0xD8 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 0),\n    /* 0xD9 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 1),\n    /* 0xDA */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 2),\n    /* 0xDB */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 3),\n    /* 0xDC */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 0),\n    /* 0xDD */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 1),\n    /* 0xDE */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 2),\n    /* 0xDF */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 3),\n    /* 0xE0 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 0),\n    /* 0xE1 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 1),\n    /* 0xE2 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 2),\n    /* 0xE3 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 3),\n    /* 0xE4 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 0),\n    /* 0xE5 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 1),\n    /* 0xE6 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 2),\n    /* 0xE7 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 3),\n    /* 0xE8 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 0),\n    /* 0xE9 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 1),\n    /* 0xEA */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 2),\n    /* 0xEB */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 3),\n    /* 0xEC */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 0),\n    /* 0xED */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 1),\n    /* 0xEE */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 2),\n    /* 0xEF */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 3),\n    /* 0xF0 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 0),\n    /* 0xF1 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 1),\n    /* 0xF2 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 2),\n    /* 0xF3 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 3),\n    /* 0xF4 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 0),\n    /* 0xF5 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 1),\n    /* 0xF6 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 2),\n    /* 0xF7 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 3),\n    /* 0xF8 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 0),\n    /* 0xF9 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 1),\n    /* 0xFA */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 2),\n    /* 0xFB */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 3),\n    /* 0xFC */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 0),\n    /* 0xFD */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 1),\n    /* 0xFE */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 2),\n    /* 0xFF */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 3)\n];\n\nexport default Hinting;\n\n/*****************************\n  Mathematical Considerations\n******************************\n\nfv ... refers to freedom vector\npv ... refers to projection vector\nrp ... refers to reference point\np  ... refers to to point being operated on\nd  ... refers to distance\n\nSETRELATIVE:\n============\n\ncase freedom vector == x-axis:\n------------------------------\n\n                        (pv)\n                     .-'\n              rpd .-'\n               .-*\n          d .-'90°'\n         .-'       '\n      .-'           '\n   *-'               ' b\n  rp                  '\n                       '\n                        '\n            p *----------*-------------- (fv)\n                          pm\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b\n\n   y - rpdy = pvns * (x- rpdx)\n\n   y = p.y\n\n   x = rpdx + ( p.y - rpdy ) / pvns\n\n\ncase freedom vector == y-axis:\n------------------------------\n\n    * pm\n    |\\\n    | \\\n    |  \\\n    |   \\\n    |    \\\n    |     \\\n    |      \\\n    |       \\\n    |        \\\n    |         \\ b\n    |          \\\n    |           \\\n    |            \\    .-' (pv)\n    |         90° \\.-'\n    |           .-'* rpd\n    |        .-'\n    *     *-'  d\n    p     rp\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b:\n           pvns ... normal slope to pv\n\n   y - rpdy = pvns * (x - rpdx)\n\n   x = p.x\n\n   y = rpdy +  pvns * (p.x - rpdx)\n\n\n\ngeneric case:\n-------------\n\n\n                              .'(fv)\n                            .'\n                          .* pm\n                        .' !\n                      .'    .\n                    .'      !\n                  .'         . b\n                .'           !\n               *              .\n              p               !\n                         90°   .    ... (pv)\n                           ...-*-'''\n                  ...---'''    rpd\n         ...---'''   d\n   *--'''\n  rp\n\n    rpdx = rpx + d * pv.x\n    rpdy = rpy + d * pv.y\n\n equation of line b:\n    pvns... normal slope to pv\n\n    y - rpdy = pvns * (x - rpdx)\n\n equation of freedom vector line:\n    fvs ... slope of freedom vector (=fy/fx)\n\n    y - py = fvs * (x - px)\n\n\n  on pm both equations are true for same x/y\n\n    y - rpdy = pvns * (x - rpdx)\n\n    y - py = fvs * (x - px)\n\n  form to y and set equal:\n\n    pvns * (x - rpdx) + rpdy = fvs * (x - px) + py\n\n  expand:\n\n    pvns * x - pvns * rpdx + rpdy = fvs * x - fvs * px + py\n\n  switch:\n\n    fvs * x - fvs * px + py = pvns * x - pvns * rpdx + rpdy\n\n  solve for x:\n\n    fvs * x - pvns * x = fvs * px - pvns * rpdx - py + rpdy\n\n\n\n          fvs * px - pvns * rpdx + rpdy - py\n    x =  -----------------------------------\n                 fvs - pvns\n\n  and:\n\n    y = fvs * (x - px) + py\n\n\n\nINTERPOLATE:\n============\n\nExamples of point interpolation.\n\nThe weight of the movement of the reference point gets bigger\nthe further the other reference point is away, thus the safest\noption (that is avoiding 0/0 divisions) is to weight the\noriginal distance of the other point by the sum of both distances.\n\nIf the sum of both distances is 0, then move the point by the\narithmetic average of the movement of both reference points.\n\n\n\n\n           (+6)\n    rp1o *---->*rp1\n         .     .                          (+12)\n         .     .                  rp2o *---------->* rp2\n         .     .                       .           .\n         .     .                       .           .\n         .    10          20           .           .\n         |.........|...................|           .\n               .   .                               .\n               .   . (+8)                          .\n                po *------>*p                      .\n               .           .                       .\n               .    12     .          24           .\n               |...........|.......................|\n                                  36\n\n\n-------\n\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .                      (-10)\n         .         .              rp2 *<---------* rpo2\n         .         .                   .         .\n         .         .                   .         .\n         .    10   .          30       .         .\n         |.........|.............................|\n                   .                   .\n                   . (+5)              .\n                po *--->* p            .\n                   .    .              .\n                   .    .   20         .\n                   |....|..............|\n                     5        15\n\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .\n    rp2o *-------->*rp2\n\n\n                               (+10)\n                          po *-------->* p\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .(+30)\n    rp2o *---------------------------->*rp2\n\n\n                                        (+25)\n                          po *----------------------->* p\n\n\n\nvim: set ts=4 sw=4 expandtab:\n*****/\n","// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\nimport check from '../check';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    let v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(glyph, data, start) {\n    const p = new parse.Parser(data, start);\n    glyph.numberOfContours = p.parseShort();\n    glyph._xMin = p.parseShort();\n    glyph._yMin = p.parseShort();\n    glyph._xMax = p.parseShort();\n    glyph._yMax = p.parseShort();\n    let flags;\n    let flag;\n\n    if (glyph.numberOfContours > 0) {\n        // This glyph is not a composite.\n        const endPointIndices = glyph.endPointIndices = [];\n        for (let i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (let i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        const numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (let i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                const repeatCount = p.parseByte();\n                for (let j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            const points = [];\n            let point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                let px = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                let py = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        let moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            const component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseShort();\n                    component.dy = p.parseShort();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseUShort(), p.parseUShort()];\n                }\n\n            } else {\n                // The arguments are bytes\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseChar();\n                    component.dy = p.parseChar();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseByte(), p.parseByte()];\n                }\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n        if (flags & 0x100) {\n            // We have instructions\n            glyph.instructionLength = p.parseUShort();\n            glyph.instructions = [];\n            for (let i = 0; i < glyph.instructionLength; i += 1) {\n                glyph.instructions.push(p.parseByte());\n            }\n        }\n    }\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    const newPoints = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        const newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    const p = new Path();\n    if (!points) {\n        return p;\n    }\n\n    const contours = getContours(points);\n\n    for (let contourIndex = 0; contourIndex < contours.length; ++contourIndex) {\n        const contour = contours[contourIndex];\n\n        let prev = null;\n        let curr = contour[contour.length - 1];\n        let next = contour[0];\n\n        if (curr.onCurve) {\n            p.moveTo(curr.x, curr.y);\n        } else {\n            if (next.onCurve) {\n                p.moveTo(next.x, next.y);\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                const start = {x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5};\n                p.moveTo(start.x, start.y);\n            }\n        }\n\n        for (let i = 0; i < contour.length; ++i) {\n            prev = curr;\n            curr = next;\n            next = contour[(i + 1) % contour.length];\n\n            if (curr.onCurve) {\n                // This is a straight line.\n                p.lineTo(curr.x, curr.y);\n            } else {\n                let prev2 = prev;\n                let next2 = next;\n\n                if (!prev.onCurve) {\n                    prev2 = { x: (curr.x + prev.x) * 0.5, y: (curr.y + prev.y) * 0.5 };\n                }\n\n                if (!next.onCurve) {\n                    next2 = { x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5 };\n                }\n\n                p.quadraticCurveTo(curr.x, curr.y, next2.x, next2.y);\n            }\n        }\n\n        p.closePath();\n    }\n    return p;\n}\n\nfunction buildPath(glyphs, glyph) {\n    if (glyph.isComposite) {\n        for (let j = 0; j < glyph.components.length; j += 1) {\n            const component = glyph.components[j];\n            const componentGlyph = glyphs.get(component.glyphIndex);\n            // Force the ttfGlyphLoader to parse the glyph.\n            componentGlyph.getPath();\n            if (componentGlyph.points) {\n                let transformedPoints;\n                if (component.matchedPoints === undefined) {\n                    // component positioned by offset\n                    transformedPoints = transformPoints(componentGlyph.points, component);\n                } else {\n                    // component positioned by matched points\n                    if ((component.matchedPoints[0] > glyph.points.length - 1) ||\n                        (component.matchedPoints[1] > componentGlyph.points.length - 1)) {\n                        throw Error('Matched points out of range in ' + glyph.name);\n                    }\n                    const firstPt = glyph.points[component.matchedPoints[0]];\n                    let secondPt = componentGlyph.points[component.matchedPoints[1]];\n                    const transform = {\n                        xScale: component.xScale, scale01: component.scale01,\n                        scale10: component.scale10, yScale: component.yScale,\n                        dx: 0, dy: 0\n                    };\n                    secondPt = transformPoints([secondPt], transform)[0];\n                    transform.dx = firstPt.x - secondPt.x;\n                    transform.dy = firstPt.y - secondPt.y;\n                    transformedPoints = transformPoints(componentGlyph.points, transform);\n                }\n                glyph.points = glyph.points.concat(transformedPoints);\n            }\n        }\n    }\n\n    return getPath(glyph.points);\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    const glyphs = new glyphset.GlyphSet(font);\n\n    // The last element of the loca table is invalid.\n    for (let i = 0; i < loca.length - 1; i += 1) {\n        const offset = loca[i];\n        const nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    }\n\n    return glyphs;\n}\n\nexport default { getPath, parse: parseGlyfTable };\n","/**\n * Infer bidirectional properties for a given text and apply\n * the corresponding layout rules.\n */\n\nimport Tokenizer from './tokenizer';\nimport arabicWordCheck from './features/arab/contextCheck/arabicWord';\nimport arabicSentenceCheck from './features/arab/contextCheck/arabicSentence';\nimport arabicPresentationForms from './features/arab/arabicPresentationForms';\nimport arabicRequiredLigatures from './features/arab/arabicRequiredLigatures';\n\n/**\n * Create Bidi. features\n * @param {string} baseDir text base direction. value either 'ltr' or 'rtl'\n */\nfunction Bidi(baseDir) {\n    this.baseDir = baseDir || 'ltr';\n    this.tokenizer = new Tokenizer();\n    this.features = [];\n}\n\n/**\n * Sets Bidi text\n * @param {string} text a text input\n */\nBidi.prototype.setText = function (text) {\n    this.text = text;\n};\n\n/**\n * Store essential context checks:\n * arabic word check for applying gsub features\n * arabic sentence check for adjusting arabic layout\n */\nBidi.prototype.contextChecks = ({\n    arabicWordCheck,\n    arabicSentenceCheck\n});\n\n/**\n * Register arabic word check\n */\nfunction registerArabicWordCheck() {\n    const checks = this.contextChecks.arabicWordCheck;\n    return this.tokenizer.registerContextChecker(\n        'arabicWord',\n        checks.arabicWordStartCheck,\n        checks.arabicWordEndCheck\n    );\n}\n\n/**\n * Register arabic sentence check\n */\nfunction registerArabicSentenceCheck() {\n    const checks = this.contextChecks.arabicSentenceCheck;\n    return this.tokenizer.registerContextChecker(\n        'arabicSentence',\n        checks.arabicSentenceStartCheck,\n        checks.arabicSentenceEndCheck\n    );\n}\n\n/**\n * Perform pre tokenization procedure then\n * tokenize text input\n */\nfunction tokenizeText() {\n    registerArabicWordCheck.call(this);\n    registerArabicSentenceCheck.call(this);\n    return this.tokenizer.tokenize(this.text);\n}\n\n/**\n * Reverse arabic sentence layout\n * TODO: check base dir before applying adjustments - priority low\n */\nfunction reverseArabicSentences() {\n    const ranges = this.tokenizer.getContextRanges('arabicSentence');\n    ranges.forEach(range => {\n        let rangeTokens = this.tokenizer.getRangeTokens(range);\n        this.tokenizer.replaceRange(\n            range.startIndex,\n            range.endOffset,\n            rangeTokens.reverse()\n        );\n    });\n}\n\n/**\n * Subscribe arabic presentation form features\n * @param {feature} feature a feature to apply\n */\nBidi.prototype.subscribeArabicForms = function(feature) {\n    this.tokenizer.events.contextEnd.subscribe(\n        (contextName, range) => {\n            if (contextName === 'arabicWord') {\n                return arabicPresentationForms.call(\n                    this.tokenizer, range, feature\n                );\n            }\n        }\n    );\n};\n\n/**\n * Apply Gsub features\n * @param {feature} features a list of features\n */\nBidi.prototype.applyFeatures = function (features) {\n    for (let i = 0; i < features.length; i++) {\n        const feature = features[i];\n        if (feature) {\n            const script = feature.script;\n            if (!this.features[script]) {\n                this.features[script] = {};\n            }\n            this.features[script][feature.tag] = feature;\n        }\n    }\n};\n\n/**\n * Register a state modifier\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a modifier function to set token state\n */\nBidi.prototype.registerModifier = function (modifierId, condition, modifier) {\n    this.tokenizer.registerModifier(modifierId, condition, modifier);\n};\n\n/**\n * Check if 'glyphIndex' is registered\n */\nfunction checkGlyphIndexStatus() {\n    if (this.tokenizer.registeredModifiers.indexOf('glyphIndex') === -1) {\n        throw new Error(\n            'glyphIndex modifier is required to apply ' +\n            'arabic presentation features.'\n        );\n    }\n}\n\n/**\n * Apply arabic presentation forms features\n */\nfunction applyArabicPresentationForms() {\n    if (!this.features.hasOwnProperty('arab')) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(range => {\n        arabicPresentationForms.call(this, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyArabicRequireLigatures() {\n    if (!this.features.hasOwnProperty('arab')) return;\n    if (!this.features.arab.hasOwnProperty('rlig')) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(range => {\n        arabicRequiredLigatures.call(this, range);\n    });\n}\n\n/**\n * process text input\n * @param {string} text an input text\n */\nBidi.prototype.processText = function(text) {\n    if (!this.text || this.text !== text) {\n        this.setText(text);\n        tokenizeText.call(this);\n        applyArabicPresentationForms.call(this);\n        applyArabicRequireLigatures.call(this);\n        reverseArabicSentences.call(this);\n    }\n};\n\n/**\n * Process a string of text to identify and adjust\n * bidirectional text entities.\n * @param {string} text input text\n */\nBidi.prototype.getBidiText = function (text) {\n    this.processText(text);\n    return this.tokenizer.getText();\n};\n\n/**\n * Get the current state index of each token\n * @param {text} text an input text\n */\nBidi.prototype.getTextGlyphs = function (text) {\n    this.processText(text);\n    let indexes = [];\n    for (let i = 0; i < this.tokenizer.tokens.length; i++) {\n        const token = this.tokenizer.tokens[i];\n        if (token.state.deleted) continue;\n        const index = token.activeState.value;\n        indexes.push(Array.isArray(index) ? index[0] : index);\n    }\n    return indexes;\n};\n\nexport default Bidi;\n","/**\n * Converts a string into a list of tokens.\n */\n\n/**\n * Create a new token\n * @param {string} char a single char\n */\nfunction Token(char) {\n    this.char = char;\n    this.state = {};\n    this.activeState = null;\n}\n\n/**\n * Create a new context range\n * @param {number} startIndex range start index\n * @param {number} endOffset range end index offset\n * @param {string} contextName owner context name\n */\nfunction ContextRange(startIndex, endOffset, contextName) {\n    this.contextName = contextName;\n    this.startIndex = startIndex;\n    this.endOffset = endOffset;\n}\n\n/**\n * Check context start and end\n * @param {string} contextName a unique context name\n * @param {function} checkStart a predicate function the indicates a context's start\n * @param {function} checkEnd a predicate function the indicates a context's end\n */\nfunction ContextChecker(contextName, checkStart, checkEnd) {\n    this.contextName = contextName;\n    this.openRange = null;\n    this.ranges = [];\n    this.checkStart = checkStart;\n    this.checkEnd = checkEnd;\n}\n\n/**\n * Create a context params\n * @param {array} context a list of items\n * @param {number} currentIndex current item index\n */\nfunction ContextParams(context, currentIndex) {\n    this.context = context;\n    this.index = currentIndex;\n    this.length = context.length;\n    this.current = context[currentIndex];\n    this.backtrack = context.slice(0, currentIndex);\n    this.lookahead = context.slice(currentIndex + 1);\n}\n\n/**\n * Create an event instance\n * @param {string} eventId event unique id\n */\nfunction Event(eventId) {\n    this.eventId = eventId;\n    this.subscribers = [];\n}\n\n/**\n * Initialize a core events and auto subscribe required event handlers\n * @param {any} events an object that enlists core events handlers\n */\nfunction initializeCoreEvents(events) {\n    const coreEvents = [\n        'start', 'end', 'next', 'newToken', 'contextStart',\n        'contextEnd', 'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD', 'updateContextsRanges'\n    ];\n\n    coreEvents.forEach(eventId => {\n        Object.defineProperty(this.events, eventId, {\n            value: new Event(eventId)\n        });\n    });\n\n    if (!!events) {\n        coreEvents.forEach(eventId => {\n            const event = events[eventId];\n            if (typeof event === 'function') {\n                this.events[eventId].subscribe(event);\n            }\n        });\n    }\n    const requiresContextUpdate = [\n        'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD'\n    ];\n    requiresContextUpdate.forEach(eventId => {\n        this.events[eventId].subscribe(\n            this.updateContextsRanges\n        );\n    });\n}\n\n/**\n * Converts a string into a list of tokens\n * @param {any} events tokenizer core events\n */\nfunction Tokenizer(events) {\n    this.tokens = [];\n    this.registeredContexts = {};\n    this.contextCheckers = [];\n    this.events = {};\n    this.registeredModifiers = [];\n\n    initializeCoreEvents.call(this, events);\n}\n\n/**\n * Sets the state of a token, usually called by a state modifier.\n * @param {string} key state item key\n * @param {any} value state item value\n */\nToken.prototype.setState = function(key, value) {\n    this.state[key] = value;\n    this.activeState = { key, value: this.state[key] };\n    return this.activeState;\n};\n\nToken.prototype.getState = function (stateId) {\n    return this.state[stateId] || null;\n};\n\n/**\n * Checks if an index exists in the tokens list.\n * @param {number} index token index\n */\nTokenizer.prototype.inboundIndex = function(index) {\n    return index >= 0 && index < this.tokens.length;\n};\n\n/**\n * Compose and apply a list of operations (replace, update, delete)\n * @param {array} RUDs replace, update and delete operations\n * TODO: Perf. Optimization (lengthBefore === lengthAfter ? dispatch once)\n */\nTokenizer.prototype.composeRUD = function (RUDs) {\n    const silent = true;\n    const state = RUDs.map(RUD => (\n        this[RUD[0]].apply(this, RUD.slice(1).concat(silent))\n    ));\n    const hasFAILObject = obj => (\n        typeof obj === 'object' &&\n        obj.hasOwnProperty('FAIL')\n    );\n    if (state.every(hasFAILObject)) {\n        return {\n            FAIL: `composeRUD: one or more operations hasn't completed successfully`,\n            report: state.filter(hasFAILObject)\n        };\n    }\n    this.dispatch('composeRUD', [state.filter(op => !hasFAILObject(op))]);\n};\n\n/**\n * Replace a range of tokens with a list of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {token} tokens a list of tokens to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceRange = function (startIndex, offset, tokens, silent) {\n    offset = offset !== null ? offset : this.tokens.length;\n    const isTokenType = tokens.every(token => token instanceof Token);\n    if (!isNaN(startIndex) && this.inboundIndex(startIndex) && isTokenType) {\n        const replaced = this.tokens.splice.apply(\n            this.tokens, [startIndex, offset].concat(tokens)\n        );\n        if (!silent) this.dispatch('replaceToken', [startIndex, offset, tokens]);\n        return [replaced, tokens];\n    } else {\n        return { FAIL: 'replaceRange: invalid tokens or startIndex.' };\n    }\n};\n\n/**\n * Replace a token with another token\n * @param {number} index token index\n * @param {token} token a token to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceToken = function (index, token, silent) {\n    if (!isNaN(index) && this.inboundIndex(index) && token instanceof Token) {\n        const replaced = this.tokens.splice(index, 1, token);\n        if (!silent) this.dispatch('replaceToken', [index, token]);\n        return [replaced[0], token];\n    } else {\n        return { FAIL: 'replaceToken: invalid token or index.' };\n    }\n};\n\n/**\n * Removes a range of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeRange = function(startIndex, offset, silent) {\n    offset = !isNaN(offset) ? offset : this.tokens.length;\n    const tokens = this.tokens.splice(startIndex, offset);\n    if (!silent) this.dispatch('removeRange', [tokens, startIndex, offset]);\n    return tokens;\n};\n\n/**\n * Remove a token at a certain index\n * @param {number} index token index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeToken = function(index, silent) {\n    if (!isNaN(index) && this.inboundIndex(index)) {\n        const token = this.tokens.splice(index, 1);\n        if (!silent) this.dispatch('removeToken', [token, index]);\n        return token;\n    } else {\n        return { FAIL: 'removeToken: invalid token index.' };\n    }\n};\n\n/**\n * Insert a list of tokens at a certain index\n * @param {array} tokens a list of tokens to insert\n * @param {number} index insert the list of tokens at index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.insertToken = function (tokens, index, silent) {\n    const tokenType = tokens.every(\n        token => token instanceof Token\n    );\n    if (tokenType) {\n        this.tokens.splice.apply(\n            this.tokens, [index, 0].concat(tokens)\n        );\n        if (!silent) this.dispatch('insertToken', [tokens, index]);\n        return tokens;\n    } else {\n        return { FAIL: 'insertToken: invalid token(s).' };\n    }\n};\n\n/**\n * A state modifier that is called on 'newToken' event\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a function to update token state\n */\nTokenizer.prototype.registerModifier = function(modifierId, condition, modifier) {\n    this.events.newToken.subscribe(function(token, contextParams) {\n        const conditionParams = [token, contextParams];\n        const canApplyModifier = (\n            condition === null ||\n            condition.apply(this, conditionParams) === true\n        );\n        const modifierParams = [token, contextParams];\n        if (canApplyModifier) {\n            let newStateValue = modifier.apply(this, modifierParams);\n            token.setState(modifierId, newStateValue);\n        }\n    });\n    this.registeredModifiers.push(modifierId);\n};\n\n/**\n * Subscribe a handler to an event\n * @param {function} eventHandler an event handler function\n */\nEvent.prototype.subscribe = function (eventHandler) {\n    if (typeof eventHandler === 'function') {\n        return ((this.subscribers.push(eventHandler)) - 1);\n    } else {\n        return { FAIL: `invalid '${this.eventId}' event handler`};\n    }\n};\n\n/**\n * Unsubscribe an event handler\n * @param {string} subsId subscription id\n */\nEvent.prototype.unsubscribe = function (subsId) {\n    this.subscribers.splice(subsId, 1);\n};\n\n/**\n * Sets context params current value index\n * @param {number} index context params current value index\n */\nContextParams.prototype.setCurrentIndex = function(index) {\n    this.index = index;\n    this.current = this.context[index];\n    this.backtrack = this.context.slice(0, index);\n    this.lookahead = this.context.slice(index + 1);\n};\n\n/**\n * Get an item at an offset from the current value\n * example (current value is 3):\n *  1    2   [3]   4    5   |   items values\n * -2   -1    0    1    2   |   offset values\n * @param {number} offset an offset from current value index\n */\nContextParams.prototype.get = function (offset) {\n    switch (true) {\n        case (offset === 0):\n            return this.current;\n        case (offset < 0 && Math.abs(offset) <= this.backtrack.length):\n            return this.backtrack.slice(offset)[0];\n        case (offset > 0 && offset <= this.lookahead.length):\n            return this.lookahead[offset - 1];\n        default:\n            return null;\n    }\n};\n\n/**\n * Converts a context range into a string value\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.rangeToText = function (range) {\n    if (range instanceof ContextRange) {\n        return (\n            this.getRangeTokens(range)\n                .map(token => token.char).join('')\n        );\n    }\n};\n\n/**\n * Converts all tokens into a string\n */\nTokenizer.prototype.getText = function () {\n    return this.tokens.map(token => token.char).join('');\n};\n\n/**\n * Get a context by name\n * @param {string} contextName context name to get\n */\nTokenizer.prototype.getContext = function (contextName) {\n    let context = this.registeredContexts[contextName];\n    return !!context ? context : null;\n};\n\n/**\n * Subscribes a new event handler to an event\n * @param {string} eventName event name to subscribe to\n * @param {function} eventHandler a function to be invoked on event\n */\nTokenizer.prototype.on = function(eventName, eventHandler) {\n    const event = this.events[eventName];\n    if (!!event) {\n        return event.subscribe(eventHandler);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Dispatches an event\n * @param {string} eventName event name\n * @param {any} args event handler arguments\n */\nTokenizer.prototype.dispatch = function(eventName, args) {\n    const event = this.events[eventName];\n    if (event instanceof Event) {\n        event.subscribers.forEach(subscriber => {\n            subscriber.apply(this, args || []);\n        });\n    }\n};\n\n/**\n * Register a new context checker\n * @param {string} contextName a unique context name\n * @param {function} contextStartCheck a predicate function that returns true on context start\n * @param {function} contextEndCheck  a predicate function that returns true on context end\n * TODO: call tokenize on registration to update context ranges with the new context.\n */\nTokenizer.prototype.registerContextChecker = function(contextName, contextStartCheck, contextEndCheck) {\n    if (!!this.getContext(contextName)) return {\n        FAIL:\n        `context name '${contextName}' is already registered.`\n    };\n    if (typeof contextStartCheck !== 'function') return {\n        FAIL:\n        `missing context start check.`\n    };\n    if (typeof contextEndCheck !== 'function') return {\n        FAIL:\n        `missing context end check.`\n    };\n    const contextCheckers = new ContextChecker(\n        contextName, contextStartCheck, contextEndCheck\n    );\n    this.registeredContexts[contextName] = contextCheckers;\n    this.contextCheckers.push(contextCheckers);\n    return contextCheckers;\n};\n\n/**\n * Gets a context range tokens\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.getRangeTokens = function(range) {\n    const endIndex = range.startIndex + range.endOffset;\n    return [].concat(\n        this.tokens\n            .slice(range.startIndex, endIndex)\n    );\n};\n\n/**\n * Gets the ranges of a context\n * @param {string} contextName context name\n */\nTokenizer.prototype.getContextRanges = function(contextName) {\n    const context = this.getContext(contextName);\n    if (!!context) {\n        return context.ranges;\n    } else {\n        return { FAIL: `context checker '${contextName}' is not registered.` };\n    }\n};\n\n/**\n * Resets context ranges to run context update\n */\nTokenizer.prototype.resetContextsRanges = function () {\n    const registeredContexts = this.registeredContexts;\n    for (const contextName in registeredContexts) {\n        if (registeredContexts.hasOwnProperty(contextName)) {\n            const context = registeredContexts[contextName];\n            context.ranges = [];\n        }\n    }\n};\n\n/**\n * Updates context ranges\n */\nTokenizer.prototype.updateContextsRanges = function () {\n    this.resetContextsRanges();\n    const chars = this.tokens.map(token => token.char);\n    for (let i = 0; i < chars.length; i++) {\n        const contextParams = new ContextParams(chars, i);\n        this.runContextCheck(contextParams);\n    }\n    this.dispatch('updateContextsRanges', [this.registeredContexts]);\n};\n\n/**\n * Sets the end offset of an open range\n * @param {number} offset range end offset\n * @param {string} contextName context name\n */\nTokenizer.prototype.setEndOffset = function (offset, contextName) {\n    const startIndex = this.getContext(contextName).openRange.startIndex;\n    let range = new ContextRange(startIndex, offset, contextName);\n    const ranges = this.getContext(contextName).ranges;\n    range.rangeId = `${contextName}.${ranges.length}`;\n    ranges.push(range);\n    this.getContext(contextName).openRange = null;\n    return range;\n};\n\n/**\n * Runs a context check on the current context\n * @param {contextParams} contextParams current context params\n */\nTokenizer.prototype.runContextCheck = function(contextParams) {\n    const index = contextParams.index;\n    this.contextCheckers.forEach(contextChecker => {\n        let contextName = contextChecker.contextName;\n        let openRange = this.getContext(contextName).openRange;\n        if (!openRange && contextChecker.checkStart(contextParams)) {\n            openRange = new ContextRange(index, null, contextName);\n            this.getContext(contextName).openRange = openRange;\n            this.dispatch('contextStart', [contextName, index]);\n        }\n        if (!!openRange && contextChecker.checkEnd(contextParams)) {\n            const offset = (index - openRange.startIndex) + 1;\n            const range = this.setEndOffset(offset, contextName);\n            this.dispatch('contextEnd', [contextName, range]);\n        }\n    });\n};\n\n/**\n * Converts a text into a list of tokens\n * @param {string} text a text to tokenize\n */\nTokenizer.prototype.tokenize = function (text) {\n    this.tokens = [];\n    this.resetContextsRanges();\n    let chars = Array.from(text);\n    this.dispatch('start');\n    for (let i = 0; i < chars.length; i++) {\n        const char = chars[i];\n        const contextParams = new ContextParams(chars, i);\n        this.dispatch('next', [contextParams]);\n        this.runContextCheck(contextParams);\n        let token = new Token(char);\n        this.tokens.push(token);\n        this.dispatch('newToken', [token, contextParams]);\n    }\n    this.dispatch('end', [this.tokens]);\n    return this.tokens;\n};\n\nexport default Tokenizer;\nexport { Token, Event, ContextRange, ContextParams };\n","/**\n * Arabic word context checkers\n */\n\nimport { isArabicChar } from '../../../char';\n\nfunction arabicWordStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? arabic first char\n        (prevChar === null && isArabicChar(char)) ||\n        // ? arabic char preceded with a non arabic char\n        (!isArabicChar(prevChar) && isArabicChar(char))\n    );\n}\n\nfunction arabicWordEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    return (\n        // ? last arabic char\n        (nextChar === null) ||\n        // ? next char is not arabic\n        (!isArabicChar(nextChar))\n    );\n}\n\nexport { arabicWordStartCheck, arabicWordEndCheck };\nexport default { arabicWordStartCheck, arabicWordEndCheck };\n","// ╭─┄┄┄────────────────────────┄─────────────────────────────────────────────╮\n// ┊ Character Class Assertions ┊ Checks if a char belongs to a certain class ┊\n// ╰─╾──────────────────────────┄─────────────────────────────────────────────╯\n// jscs:disable maximumLineLength\n/**\n * Check if a char is Arabic\n * @param {string} c a single char\n */\nexport function isArabicChar(c) {\n    return /[\\u0600-\\u065F\\u066A-\\u06D2\\u06FA-\\u06FF]/.test(c);\n}\n\n/**\n * Check if a char is an isolated arabic char\n * @param {string} c a single char\n */\nexport function isIsolatedArabicChar(char) {\n    return /[\\u0630\\u0690\\u0621\\u0631\\u0661\\u0671\\u0622\\u0632\\u0672\\u0692\\u06C2\\u0623\\u0673\\u0693\\u06C3\\u0624\\u0694\\u06C4\\u0625\\u0675\\u0695\\u06C5\\u06E5\\u0676\\u0696\\u06C6\\u0627\\u0677\\u0697\\u06C7\\u0648\\u0688\\u0698\\u06C8\\u0689\\u0699\\u06C9\\u068A\\u06CA\\u066B\\u068B\\u06CB\\u068C\\u068D\\u06CD\\u06FD\\u068E\\u06EE\\u06FE\\u062F\\u068F\\u06CF\\u06EF]/.test(char);\n}\n\n/**\n * Check if a char is an Arabic Tashkeel char\n * @param {string} c a single char\n */\nexport function isTashkeelArabicChar(char) {\n    return /[\\u0600-\\u0605\\u060C-\\u060E\\u0610-\\u061B\\u061E\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED]/.test(char);\n}\n\n/**\n * Check if a char is whitespace char\n * @param {string} c a single char\n */\nexport function isWhiteSpace(c) {\n    return /\\s/.test(c);\n}\n","/**\n * Arabic sentence context checkers\n */\n\nimport { isArabicChar, isWhiteSpace, isTashkeelArabicChar } from '../../../char';\n\nfunction arabicSentenceStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? an arabic char preceded with a non arabic char\n        (isArabicChar(char) || isTashkeelArabicChar(char)) &&\n        !isArabicChar(prevChar)\n    );\n}\n\nfunction arabicSentenceEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    switch (true) {\n        case nextChar === null:\n            return true;\n        case (!isArabicChar(nextChar) && !isTashkeelArabicChar(nextChar)):\n            const nextIsWhitespace = isWhiteSpace(nextChar);\n            if (!nextIsWhitespace) return true;\n            if (nextIsWhitespace) {\n                let arabicCharAhead = false;\n                arabicCharAhead = (\n                    contextParams.lookahead.some(\n                        c => isArabicChar(c) || isTashkeelArabicChar(c)\n                    )\n                );\n                if (!arabicCharAhead) return true;\n            }\n            break;\n        default:\n            return false;\n    }\n}\n\nexport { arabicSentenceStartCheck, arabicSentenceEndCheck };\nexport default { arabicSentenceStartCheck, arabicSentenceEndCheck };\n","/**\n * Apply Arabic presentation forms to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport { isIsolatedArabicChar, isTashkeelArabicChar } from '../../char';\n/**\n * Check if a char can be connected to it's preceding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectPrev(charContextParams) {\n    let backtrack = [].concat(charContextParams.backtrack);\n    for (let i = backtrack.length - 1; i >= 0; i--) {\n        const prevChar = backtrack[i];\n        const isolated = isIsolatedArabicChar(prevChar);\n        const tashkeel = isTashkeelArabicChar(prevChar);\n        if (!isolated && !tashkeel) return true;\n        if (isolated) return false;\n    }\n    return false;\n}\n\n/**\n * Check if a char can be connected to it's proceeding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectNext(charContextParams) {\n    if (isIsolatedArabicChar(charContextParams.current)) return false;\n    for (let i = 0; i < charContextParams.lookahead.length; i++) {\n        const nextChar = charContextParams.lookahead[i];\n        const tashkeel = isTashkeelArabicChar(nextChar);\n        if (!tashkeel) return true;\n    }\n    return false;\n}\n\n/**\n * Apply arabic presentation forms to a list of tokens\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicPresentationForms(range) {\n    const features = this.features.arab;\n    const rangeTokens = this.tokenizer.getRangeTokens(range);\n    if (rangeTokens.length === 1) return;\n    const getSubstitutionIndex = substitution => (\n        substitution.length === 1 &&\n        substitution[0].id === 12 &&\n        substitution[0].substitution\n    );\n    const applyForm = (tag, token, params) => {\n        if (!features.hasOwnProperty(tag)) return;\n        let substitution = features[tag].lookup(params) || null;\n        let substIndex = getSubstitutionIndex(substitution)[0];\n        if (substIndex >= 0) {\n            return token.setState(tag, substIndex);\n        }\n    };\n    const tokensParams = new ContextParams(rangeTokens, 0);\n    const charContextParams = new ContextParams(rangeTokens.map(t=>t.char), 0);\n    rangeTokens.forEach((token, i) => {\n        if (isTashkeelArabicChar(token.char)) return;\n        tokensParams.setCurrentIndex(i);\n        charContextParams.setCurrentIndex(i);\n        let CONNECT = 0; // 2 bits 00 (10: can connect next) (01: can connect prev)\n        if (willConnectPrev(charContextParams)) CONNECT |= 1;\n        if (willConnectNext(charContextParams)) CONNECT |= 2;\n        switch (CONNECT) {\n            case 0: // isolated * original form\n                return;\n            case 1: // fina\n                applyForm('fina', token, tokensParams);\n                break;\n            case 2: // init\n                applyForm('init', token, tokensParams);\n                break;\n            case 3: // medi\n                applyForm('medi', token, tokensParams);\n                break;\n        }\n    });\n}\n\nexport default arabicPresentationForms;\nexport { arabicPresentationForms };\n","/**\n * Apply Arabic required ligatures feature to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicRequiredLigatures(range) {\n    const features = this.features.arab;\n    if (!features.hasOwnProperty('rlig')) return;\n    let tokens = this.tokenizer.getRangeTokens(range);\n    for (let i = 0; i < tokens.length; i++) {\n        const lookupParams = new ContextParams(tokens, i);\n        let substitution = features.rlig.lookup(lookupParams) || null;\n        const chainingContext = (\n            substitution.length === 1 &&\n            substitution[0].id === 63 &&\n            substitution[0].substitution\n        );\n        const ligature = (\n            substitution.length === 1 &&\n            substitution[0].id === 41 &&\n            substitution[0].substitution[0]\n        );\n        const token = tokens[i];\n        if (!!ligature) {\n            token.setState('rlig', [ligature.ligGlyph]);\n            for (let c = 0; c < ligature.components.length; c++) {\n                const component = ligature.components[c];\n                const lookaheadToken = lookupParams.get(c + 1);\n                if (lookaheadToken.activeState.value === component) {\n                    lookaheadToken.state.deleted = true;\n                }\n            }\n        } else if (chainingContext) {\n            const substIndex = (\n                chainingContext &&\n                chainingContext.length === 1 &&\n                chainingContext[0].id === 12 &&\n                chainingContext[0].substitution\n            );\n            if (!!substIndex && substIndex >= 0) token.setState('rlig', substIndex);\n        }\n    }\n}\n\nexport default arabicRequiredLigatures;\nexport { arabicRequiredLigatures };\n","/**\n * Query a feature by some of it's properties to lookup a glyph substitution.\n */\n\nimport { ContextParams } from '../tokenizer';\nimport { isTashkeelArabicChar } from '../char';\n\n// DEFAULT TEXT BASE DIRECTION\nlet BASE_DIR = 'ltr';\n\n/**\n * Create feature query instance\n * @param {Font} font opentype font instance\n * @param {string} baseDir text base direction\n */\nfunction FeatureQuery(font, baseDir) {\n    this.font = font;\n    this.features = {};\n    BASE_DIR = !!baseDir ? baseDir : BASE_DIR;\n}\n\n/**\n * Create a new feature lookup\n * @param {string} tag feature tag\n * @param {feature} feature reference to feature at gsub table\n * @param {FeatureLookups} feature lookups associated with this feature\n * @param {string} script gsub script tag\n */\nfunction Feature(tag, feature, featureLookups, script) {\n    this.tag = tag;\n    this.featureRef = feature;\n    this.lookups = featureLookups.lookups;\n    this.script = script;\n}\n\n/**\n * Create a coverage table lookup\n * @param {any} coverageTable gsub coverage table\n */\nfunction Coverage(coverageTable) {\n    this.table = coverageTable;\n}\n\n/**\n * Create a ligature set lookup\n * @param {any} ligatureSets gsub ligature set\n */\nfunction LigatureSets(ligatureSets) {\n    this.ligatureSets = ligatureSets;\n}\n\n/**\n * Lookup a glyph ligature\n * @param {ContextParams} contextParams context params to lookup\n * @param {number} ligSetIndex ligature set index at ligature sets\n */\nLigatureSets.prototype.lookup = function (contextParams, ligSetIndex) {\n    const ligatureSet = this.ligatureSets[ligSetIndex];\n    const matchComponents = (components, indexes) => {\n        if (components.length > indexes.length) return null;\n        for (let c = 0; c < components.length; c++) {\n            const component = components[c];\n            const index = indexes[c];\n            if (component !== index) return false;\n        }\n        return true;\n    };\n    for (let s = 0; s < ligatureSet.length; s++) {\n        const ligSetItem = ligatureSet[s];\n        const lookaheadIndexes = contextParams.lookahead.map(\n            token => token.activeState.value\n        );\n        if (BASE_DIR === 'rtl') lookaheadIndexes.reverse();\n        const componentsMatch = matchComponents(\n            ligSetItem.components, lookaheadIndexes\n        );\n        if (componentsMatch) return ligSetItem;\n    }\n    return null;\n};\n\n/**\n * Create a feature substitution\n * @param {any} lookups a reference to gsub lookups\n * @param {Lookuptable} lookupTable a feature lookup table\n * @param {any} subtable substitution table\n */\nfunction Substitution(lookups, lookupTable, subtable) {\n    this.lookups = lookups;\n    this.subtable = subtable;\n    this.lookupTable = lookupTable;\n    if (subtable.hasOwnProperty('coverage')) {\n        this.coverage = new Coverage(\n            subtable.coverage\n        );\n    }\n    if (subtable.hasOwnProperty('inputCoverage')) {\n        this.inputCoverage = subtable.inputCoverage.map(\n            table => new Coverage(table)\n        );\n    }\n    if (subtable.hasOwnProperty('backtrackCoverage')) {\n        this.backtrackCoverage = subtable.backtrackCoverage.map(\n            table => new Coverage(table)\n        );\n    }\n    if (subtable.hasOwnProperty('lookaheadCoverage')) {\n        this.lookaheadCoverage = subtable.lookaheadCoverage.map(\n            table => new Coverage(table)\n        );\n    }\n    if (subtable.hasOwnProperty('ligatureSets')) {\n        this.ligatureSets = new LigatureSets(subtable.ligatureSets);\n    }\n}\n\n/**\n * Create a lookup table lookup\n * @param {number} index table index at gsub lookups\n * @param {any} lookups a reference to gsub lookups\n */\nfunction LookupTable(index, lookups) {\n    this.index = index;\n    this.subtables = lookups[index].subtables.map(\n        subtable => new Substitution(\n            lookups, lookups[index], subtable\n        )\n    );\n}\n\nfunction FeatureLookups(lookups, lookupListIndexes) {\n    this.lookups = lookupListIndexes.map(\n        index => new LookupTable(index, lookups)\n    );\n}\n\n/**\n * Lookup a lookup table subtables\n * @param {ContextParams} contextParams context params to lookup\n */\nLookupTable.prototype.lookup = function (contextParams) {\n    let substitutions = [];\n    for (let i = 0; i < this.subtables.length; i++) {\n        const subsTable = this.subtables[i];\n        let substitution = subsTable.lookup(contextParams);\n        if (substitution !== null || substitution.length) {\n            substitutions = substitutions.concat(substitution);\n        }\n    }\n    return substitutions;\n};\n\n/**\n * Handle a single substitution - format 2\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat2(contextParams) {\n    let glyphIndex = contextParams.current.activeState.value;\n    glyphIndex = Array.isArray(glyphIndex) ? glyphIndex[0] : glyphIndex;\n    let substituteIndex = this.coverage.lookup(glyphIndex);\n    if (substituteIndex === -1) return [];\n    return [this.subtable.substitute[substituteIndex]];\n}\n\n/**\n * Lookup a list of coverage tables\n * @param {any} coverageList a list of coverage tables\n * @param {any} contextParams context params to lookup\n */\nfunction lookupCoverageList(coverageList, contextParams) {\n    let lookupList = [];\n    for (let i = 0; i < coverageList.length; i++) {\n        const coverage = coverageList[i];\n        let glyphIndex = contextParams.current.activeState.value;\n        glyphIndex = Array.isArray(glyphIndex) ? glyphIndex[0] : glyphIndex;\n        const lookupIndex = coverage.lookup(glyphIndex);\n        if (lookupIndex !== -1) {\n            lookupList.push(lookupIndex);\n        }\n    }\n    if (lookupList.length !== coverageList.length) return -1;\n    return lookupList;\n}\n\n/**\n * Handle chaining context substitution - format 3\n * @param {any} contextParams context params to lookup\n */\nfunction chainingSubstitutionFormat3(contextParams) {\n    const lookupsCount = (\n        this.inputCoverage.length +\n        this.lookaheadCoverage.length +\n        this.backtrackCoverage.length\n    );\n    if (contextParams.context.length < lookupsCount) return [];\n    // INPUT LOOKUP //\n    let inputLookups = lookupCoverageList(\n        this.inputCoverage, contextParams\n    );\n    if (inputLookups === -1) return [];\n    // LOOKAHEAD LOOKUP //\n    const lookaheadOffset = this.inputCoverage.length - 1;\n    if (contextParams.lookahead.length < this.lookaheadCoverage.length) return [];\n    let lookaheadContext = contextParams.lookahead.slice(lookaheadOffset);\n    while (lookaheadContext.length && isTashkeelArabicChar(lookaheadContext[0].char)) {\n        lookaheadContext.shift();\n    }\n    const lookaheadParams = new ContextParams(lookaheadContext, 0);\n    let lookaheadLookups = lookupCoverageList(\n        this.lookaheadCoverage, lookaheadParams\n    );\n    // BACKTRACK LOOKUP //\n    let backtrackContext = [].concat(contextParams.backtrack);\n    backtrackContext.reverse();\n    while (backtrackContext.length && isTashkeelArabicChar(backtrackContext[0].char)) {\n        backtrackContext.shift();\n    }\n    if (backtrackContext.length < this.backtrackCoverage.length) return [];\n    const backtrackParams = new ContextParams(backtrackContext, 0);\n    let backtrackLookups = lookupCoverageList(\n        this.backtrackCoverage, backtrackParams\n    );\n    const contextRulesMatch = (\n        inputLookups.length === this.inputCoverage.length &&\n        lookaheadLookups.length === this.lookaheadCoverage.length &&\n        backtrackLookups.length === this.backtrackCoverage.length\n    );\n    let substitutions = [];\n    if (contextRulesMatch) {\n        let lookupRecords = this.subtable.lookupRecords;\n        for (let i = 0; i < lookupRecords.length; i++) {\n            const lookupRecord = lookupRecords[i];\n            for (let j = 0; j < inputLookups.length; j++) {\n                const inputContext = new ContextParams([contextParams.get(j)], 0);\n                let lookupIndex = lookupRecord.lookupListIndex;\n                const lookupTable = new LookupTable(lookupIndex, this.lookups);\n                let lookup = lookupTable.lookup(inputContext);\n                substitutions = substitutions.concat(lookup);\n            }\n        }\n    }\n    return substitutions;\n}\n\n/**\n * Handle ligature substitution - format 1\n * @param {any} contextParams context params to lookup\n */\nfunction ligatureSubstitutionFormat1(contextParams) {\n    // COVERAGE LOOKUP //\n    let glyphIndex = contextParams.current.activeState.value;\n    let ligSetIndex = this.coverage.lookup(glyphIndex);\n    if (ligSetIndex === -1) return [];\n    // COMPONENTS LOOKUP * note that components is logically ordered\n    let ligGlyphs = this.ligatureSets.lookup(contextParams, ligSetIndex);\n    return ligGlyphs ? [ligGlyphs] : [];\n}\n\n/**\n * [ LOOKUP TYPES ]\n * -------------------------------\n * Single                        1;\n * Multiple                      2;\n * Alternate                     3;\n * Ligature                      4;\n * Context                       5;\n * ChainingContext               6;\n * ExtensionSubstitution         7;\n * ReverseChainingContext        8;\n * -------------------------------\n * @param {any} contextParams context params to lookup\n */\nSubstitution.prototype.lookup = function (contextParams) {\n    const substitutions = [];\n    const lookupType = this.lookupTable.lookupType;\n    const substFormat = this.subtable.substFormat;\n    if (lookupType === 1 && substFormat === 2) {\n        let substitution = singleSubstitutionFormat2.call(this, contextParams);\n        if (substitution.length > 0) {\n            substitutions.push({ id: 12, substitution });\n        }\n    }\n    if (lookupType === 6 && substFormat === 3) {\n        const substitution = chainingSubstitutionFormat3.call(this, contextParams);\n        if (substitution.length > 0) {\n            substitutions.push({ id: 63, substitution });\n        }\n    }\n    if (lookupType === 4 && substFormat === 1) {\n        const substitution = ligatureSubstitutionFormat1.call(this, contextParams);\n        if (substitution.length > 0) {\n            substitutions.push({ id: 41, substitution });\n        }\n    }\n    return substitutions;\n};\n\n/**\n * Lookup a coverage table\n * @param {number} glyphIndex to lookup\n */\nCoverage.prototype.lookup = function (glyphIndex) {\n    if (!glyphIndex) return -1;\n    switch (this.table.format) {\n        case 1:\n            return this.table.glyphs.indexOf(glyphIndex);\n\n        case 2:\n            let ranges = this.table.ranges;\n            for (let i = 0; i < ranges.length; i++) {\n                const range = ranges[i];\n                if (glyphIndex >= range.start && glyphIndex <= range.end) {\n                    let offset = glyphIndex - range.start;\n                    return range.index + offset;\n                }\n            }\n            break;\n        default:\n            return -1; // not found\n    }\n    return -1;\n};\n\n/**\n * Lookup a feature for a substitution or more\n * @param {any} contextParams context params to lookup\n */\nFeature.prototype.lookup = function(contextParams) {\n    let lookups = [];\n    for (let i = 0; i < this.lookups.length; i++) {\n        const lookupTable = this.lookups[i];\n        let lookup = lookupTable.lookup(contextParams);\n        if (lookup !== null || lookup.length) {\n            lookups = lookups.concat(lookup);\n        }\n    }\n    return lookups;\n};\n\n/**\n * Get feature indexes of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeaturesIndexes = function(scriptTag) {\n    if (!scriptTag) return [];\n    const tables = this.font.tables;\n    if (!tables.gsub) return [];\n    const scripts = this.font.tables.gsub.scripts;\n    for (let i = 0; i < scripts.length; i++) {\n        const script = scripts[i];\n        if (script.tag === scriptTag) {\n            let defaultLangSys = script.script.defaultLangSys;\n            return defaultLangSys.featureIndexes;\n        } else {\n            let langSysRecords = script.langSysRecords;\n            if (!!langSysRecords) {\n                for (let j = 0; j < langSysRecords.length; j++) {\n                    const langSysRecord = langSysRecords[j];\n                    if (langSysRecord.tag === scriptTag) {\n                        let langSys = langSysRecord.langSys;\n                        return langSys.featureIndexes;\n                    }\n                }\n            }\n        }\n    }\n    return [];\n};\n\n/**\n * Map a feature tag to a gsub feature\n * @param {any} features gsub features\n * @param {*} scriptTag script tag\n */\nFeatureQuery.prototype.mapTagsToFeatures = function (features, scriptTag) {\n    let tags = {};\n    for (let i = 0; i < features.length; i++) {\n        const feature = features[i].feature;\n        const tag = features[i].tag;\n        const lookups = this.font.tables.gsub.lookups;\n        const featureLookups = new FeatureLookups(lookups, feature.lookupListIndexes);\n        tags[tag] = new Feature(tag, feature, featureLookups, scriptTag);\n    }\n    this.features[scriptTag].tags = tags;\n};\n\n/**\n * Get features of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeatures = function (scriptTag) {\n    let features = this.features[scriptTag];\n    if (this.features.hasOwnProperty(scriptTag)) return features;\n    const featuresIndexes = this.getScriptFeaturesIndexes(scriptTag);\n    if (!featuresIndexes) return null;\n    const gsub = this.font.tables.gsub;\n    features = featuresIndexes.map(index => gsub.features[index]);\n    this.features[scriptTag] = features;\n    this.mapTagsToFeatures(features, scriptTag);\n    return features;\n};\n\n/**\n * Query a feature by it's properties\n * @param {any} query an object that describes the properties of a query\n */\nFeatureQuery.prototype.getFeature = function (query) {\n    if (!this.font) return { FAIL: `No font was found`};\n    if (!this.features.hasOwnProperty(query.script)) {\n        this.getScriptFeatures(query.script);\n    }\n    return this.features[query.script].tags[query.tag] || null;\n};\n\nexport default FeatureQuery;\nexport { Feature };\n","\"use strict\";","// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction addName(name, names) {\n    const nameString = JSON.stringify(name);\n    let nameID = 256;\n    for (let nameKey in names) {\n        let n = parseInt(nameKey);\n        if (!n || n < 256) {\n            continue;\n        }\n\n        if (JSON.stringify(names[nameKey]) === nameString) {\n            return n;\n        }\n\n        if (nameID <= n) {\n            nameID = n + 1;\n        }\n    }\n\n    names[nameID] = name;\n    return nameID;\n}\n\nfunction makeFvarAxis(n, axis, names) {\n    const nameID = addName(axis.name, names);\n    return [\n        {name: 'tag_' + n, type: 'TAG', value: axis.tag},\n        {name: 'minValue_' + n, type: 'FIXED', value: axis.minValue << 16},\n        {name: 'defaultValue_' + n, type: 'FIXED', value: axis.defaultValue << 16},\n        {name: 'maxValue_' + n, type: 'FIXED', value: axis.maxValue << 16},\n        {name: 'flags_' + n, type: 'USHORT', value: 0},\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID}\n    ];\n}\n\nfunction parseFvarAxis(data, start, names) {\n    const axis = {};\n    const p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction makeFvarInstance(n, inst, axes, names) {\n    const nameID = addName(inst.name, names);\n    const fields = [\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID},\n        {name: 'flags_' + n, type: 'USHORT', value: 0}\n    ];\n\n    for (let i = 0; i < axes.length; ++i) {\n        const axisTag = axes[i].tag;\n        fields.push({\n            name: 'axis_' + n + ' ' + axisTag,\n            type: 'FIXED',\n            value: inst.coordinates[axisTag] << 16\n        });\n    }\n\n    return fields;\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    const inst = {};\n    const p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (let i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction makeFvarTable(fvar, names) {\n    const result = new table.Table('fvar', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'offsetToData', type: 'USHORT', value: 0},\n        {name: 'countSizePairs', type: 'USHORT', value: 2},\n        {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n        {name: 'axisSize', type: 'USHORT', value: 20},\n        {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n        {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n    ]);\n    result.offsetToData = result.sizeOf();\n\n    for (let i = 0; i < fvar.axes.length; i++) {\n        result.fields = result.fields.concat(makeFvarAxis(i, fvar.axes[i], names));\n    }\n\n    for (let j = 0; j < fvar.instances.length; j++) {\n        result.fields = result.fields.concat(makeFvarInstance(j, fvar.instances[j], fvar.axes, names));\n    }\n\n    return result;\n}\n\nfunction parseFvarTable(data, start, names) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n    const offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    const axisCount = p.parseUShort();\n    const axisSize = p.parseUShort();\n    const instanceCount = p.parseUShort();\n    const instanceSize = p.parseUShort();\n\n    const axes = [];\n    for (let i = 0; i < axisCount; i++) {\n        axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n    }\n\n    const instances = [];\n    const instanceStart = start + offsetToData + axisCount * axisSize;\n    for (let j = 0; j < instanceCount; j++) {\n        instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n    }\n\n    return {axes: axes, instances: instances};\n}\n\nexport default { make: makeFvarTable, parse: parseFvarTable };\n","// The `GPOS` table contains kerning pairs, among other things.\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\n\nimport check from '../check';\nimport { Parser } from '../parse';\nimport table from '../table';\n\nconst subtableParsers = new Array(10);         // subtableParsers[0] is unused\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-1-single-adjustment-positioning-subtable\n// this = Parser instance\nsubtableParsers[1] = function parseLookup1() {\n    const start = this.offset + this.relativeOffset;\n    const posformat = this.parseUShort();\n    if (posformat === 1) {\n        return {\n            posFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            value: this.parseValueRecord()\n        };\n    } else if (posformat === 2) {\n        return {\n            posFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            values: this.parseValueRecordList()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': GPOS lookup type 1 format must be 1 or 2.');\n};\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-2-pair-adjustment-positioning-subtable\nsubtableParsers[2] = function parseLookup2() {\n    const start = this.offset + this.relativeOffset;\n    const posFormat = this.parseUShort();\n    check.assert(posFormat === 1 || posFormat === 2, '0x' + start.toString(16) + ': GPOS lookup type 2 format must be 1 or 2.');\n    const coverage = this.parsePointer(Parser.coverage);\n    const valueFormat1 = this.parseUShort();\n    const valueFormat2 = this.parseUShort();\n    if (posFormat === 1) {\n        // Adjustments for Glyph Pairs\n        return {\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            pairSets: this.parseList(Parser.pointer(Parser.list(function() {\n                return {        // pairValueRecord\n                    secondGlyph: this.parseUShort(),\n                    value1: this.parseValueRecord(valueFormat1),\n                    value2: this.parseValueRecord(valueFormat2)\n                };\n            })))\n        };\n    } else if (posFormat === 2) {\n        const classDef1 = this.parsePointer(Parser.classDef);\n        const classDef2 = this.parsePointer(Parser.classDef);\n        const class1Count = this.parseUShort();\n        const class2Count = this.parseUShort();\n        return {\n            // Class Pair Adjustment\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            classDef1: classDef1,\n            classDef2: classDef2,\n            class1Count: class1Count,\n            class2Count: class2Count,\n            classRecords: this.parseList(class1Count, Parser.list(class2Count, function() {\n                return {\n                    value1: this.parseValueRecord(valueFormat1),\n                    value2: this.parseValueRecord(valueFormat2)\n                };\n            }))\n        };\n    }\n};\n\nsubtableParsers[3] = function parseLookup3() { return { error: 'GPOS Lookup 3 not supported' }; };\nsubtableParsers[4] = function parseLookup4() { return { error: 'GPOS Lookup 4 not supported' }; };\nsubtableParsers[5] = function parseLookup5() { return { error: 'GPOS Lookup 5 not supported' }; };\nsubtableParsers[6] = function parseLookup6() { return { error: 'GPOS Lookup 6 not supported' }; };\nsubtableParsers[7] = function parseLookup7() { return { error: 'GPOS Lookup 7 not supported' }; };\nsubtableParsers[8] = function parseLookup8() { return { error: 'GPOS Lookup 8 not supported' }; };\nsubtableParsers[9] = function parseLookup9() { return { error: 'GPOS Lookup 9 not supported' }; };\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\nfunction parseGposTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.1, 'Unsupported GPOS table version ' + tableVersion);\n\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers)\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList()\n        };\n    }\n\n}\n\n// GPOS Writing //////////////////////////////////////////////\n// NOT SUPPORTED\nconst subtableMakers = new Array(10);\n\nfunction makeGposTable(gpos) {\n    return new table.Table('GPOS', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gpos.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gpos.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gpos.lookups, subtableMakers)}\n    ]);\n}\n\nexport default { parse: parseGposTable, make: makeGposTable };\n","// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\nimport check from '../check';\nimport parse from '../parse';\n\nfunction parseWindowsKernTable(p) {\n    const pairs = {};\n    // Skip nTables.\n    p.skip('uShort');\n    const subtableVersion = p.parseUShort();\n    check.argument(subtableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subtableLength, subtableCoverage\n    p.skip('uShort', 2);\n    const nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (let i = 0; i < nPairs; i += 1) {\n        const leftIndex = p.parseUShort();\n        const rightIndex = p.parseUShort();\n        const value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n    return pairs;\n}\n\nfunction parseMacKernTable(p) {\n    const pairs = {};\n    // The Mac kern table stores the version as a fixed (32 bits) but we only loaded the first 16 bits.\n    // Skip the rest.\n    p.skip('uShort');\n    const nTables = p.parseULong();\n    //check.argument(nTables === 1, 'Only 1 subtable is supported (got ' + nTables + ').');\n    if (nTables > 1) {\n        console.warn('Only the first kern subtable is supported.');\n    }\n    p.skip('uLong');\n    const coverage = p.parseUShort();\n    const subtableVersion = coverage & 0xFF;\n    p.skip('uShort');\n    if (subtableVersion === 0) {\n        const nPairs = p.parseUShort();\n        // Skip searchRange, entrySelector, rangeShift.\n        p.skip('uShort', 3);\n        for (let i = 0; i < nPairs; i += 1) {\n            const leftIndex = p.parseUShort();\n            const rightIndex = p.parseUShort();\n            const value = p.parseShort();\n            pairs[leftIndex + ',' + rightIndex] = value;\n        }\n    }\n    return pairs;\n}\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseUShort();\n    if (tableVersion === 0) {\n        return parseWindowsKernTable(p);\n    } else if (tableVersion === 1) {\n        return parseMacKernTable(p);\n    } else {\n        throw new Error('Unsupported kern table version (' + tableVersion + ').');\n    }\n}\n\nexport default { parse: parseKernTable };\n","// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\nimport parse from '../parse';\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    const p = new parse.Parser(data, start);\n    const parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    const glyphOffsets = [];\n    for (let i = 0; i < numGlyphs + 1; i += 1) {\n        let glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexport default { parse: parseLocaTable };\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"names":[],"version":3,"file":"index.d0510310.js.map","sourceRoot":"/__parcel_source_root/"}